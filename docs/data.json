{
    "project": {
        "name": "xeoengine",
        "description": "A WebGL-based 3D visualization engine from xeoLabs",
        "version": "0.1.0",
        "url": "http://xeoengine.org/",
        "logo": "../assets/images/logo.png"
    },
    "files": {
        "src/_renderer/chunks/chunk.js": {
            "name": "src/_renderer/chunks/chunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/chunkFactory.js": {
            "name": "src/_renderer/chunks/chunkFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/clipsChunk.js": {
            "name": "src/_renderer/chunks/clipsChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/colorBufferChunk.js": {
            "name": "src/_renderer/chunks/colorBufferChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/depthBufferChunk.js": {
            "name": "src/_renderer/chunks/depthBufferChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/geometryChunk.js": {
            "name": "src/_renderer/chunks/geometryChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/renderTargetChunk.js": {
            "name": "src/_renderer/chunks/renderTargetChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/arrayBuffer.js": {
            "name": "src/_renderer/webgl/arrayBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/attribute.js": {
            "name": "src/_renderer/webgl/attribute.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/program.js": {
            "name": "src/_renderer/webgl/program.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/renderBuffer.js": {
            "name": "src/_renderer/webgl/renderBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/shader.js": {
            "name": "src/_renderer/webgl/shader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/webgl.js": {
            "name": "src/_renderer/webgl/webgl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/object.js": {
            "name": "src/_renderer/object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/program.js": {
            "name": "src/_renderer/program.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/programFactory.js": {
            "name": "src/_renderer/programFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/programSource.js": {
            "name": "src/_renderer/programSource.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/programSourceFactory.js": {
            "name": "src/_renderer/programSourceFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/renderer.js": {
            "name": "src/_renderer/renderer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/states.js": {
            "name": "src/_renderer/states.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_utils/map.js": {
            "name": "src/_utils/map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/animation/_module.js": {
            "name": "src/animation/_module.js",
            "modules": {
                "animation": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/animation/cameraFlight.js": {
            "name": "src/animation/cameraFlight.js",
            "modules": {},
            "classes": {
                "CameraFlight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/animation/cameraPath.js": {
            "name": "src/animation/cameraPath.js",
            "modules": {},
            "classes": {
                "CameraPath": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/animation/morphTargets.js": {
            "name": "src/animation/morphTargets.js",
            "modules": {},
            "classes": {
                "MorphTargets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/_module.js": {
            "name": "src/boundaries/_module.js",
            "modules": {
                "boundaries": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/boundary2d.js": {
            "name": "src/boundaries/boundary2d.js",
            "modules": {},
            "classes": {
                "Boundary2D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/boundary3d.js": {
            "name": "src/boundaries/boundary3d.js",
            "modules": {},
            "classes": {
                "Boundary3D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/groupBoundary.js": {
            "name": "src/boundaries/groupBoundary.js",
            "modules": {},
            "classes": {
                "GroupBoundary": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/camera/_module.js": {
            "name": "src/camera/_module.js",
            "modules": {
                "camera": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/camera/camera.js": {
            "name": "src/camera/camera.js",
            "modules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/camera/frustum.js": {
            "name": "src/camera/frustum.js",
            "modules": {},
            "classes": {
                "Frustum": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/camera/lookat.js": {
            "name": "src/camera/lookat.js",
            "modules": {},
            "classes": {
                "Lookat": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/camera/ortho.js": {
            "name": "src/camera/ortho.js",
            "modules": {},
            "classes": {
                "Ortho": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/camera/perspective.js": {
            "name": "src/camera/perspective.js",
            "modules": {},
            "classes": {
                "Perspective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/canvas/_module.js": {
            "name": "src/canvas/_module.js",
            "modules": {
                "canvas": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/canvas/canvas.js": {
            "name": "src/canvas/canvas.js",
            "modules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/clipping/_module.js": {
            "name": "src/clipping/_module.js",
            "modules": {
                "clipping": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/clipping/clip.js": {
            "name": "src/clipping/clip.js",
            "modules": {},
            "classes": {
                "Clip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/clipping/clips.js": {
            "name": "src/clipping/clips.js",
            "modules": {},
            "classes": {
                "Clips": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/configs/_module.js": {
            "name": "src/configs/_module.js",
            "modules": {
                "configs": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/configs/configs.js": {
            "name": "src/configs/configs.js",
            "modules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/_module.js": {
            "name": "src/controls/_module.js",
            "modules": {
                "controls": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/cameraControl.js": {
            "name": "src/controls/cameraControl.js",
            "modules": {},
            "classes": {
                "CameraControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardAxisCamera.js": {
            "name": "src/controls/keyboardAxisCamera.js",
            "modules": {},
            "classes": {
                "KeyboardAxisCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardPanCamera.js": {
            "name": "src/controls/keyboardPanCamera.js",
            "modules": {},
            "classes": {
                "KeyboardPanCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardRotateCamera.js": {
            "name": "src/controls/keyboardRotateCamera.js",
            "modules": {},
            "classes": {
                "KeyboardRotateCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardZoomCamera.js": {
            "name": "src/controls/keyboardZoomCamera.js",
            "modules": {},
            "classes": {
                "KeyboardZoomCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mousePanCamera.js": {
            "name": "src/controls/mousePanCamera.js",
            "modules": {},
            "classes": {
                "MousePanCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mousePickObject.js": {
            "name": "src/controls/mousePickObject.js",
            "modules": {},
            "classes": {
                "MousePickObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mouseRotateCamera.js": {
            "name": "src/controls/mouseRotateCamera.js",
            "modules": {},
            "classes": {
                "MouseRotateCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mouseZoomCamera.js": {
            "name": "src/controls/mouseZoomCamera.js",
            "modules": {},
            "classes": {
                "MouseZoomCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/culling/_module.js": {
            "name": "src/culling/_module.js",
            "modules": {
                "culling": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/culling/visibility.js": {
            "name": "src/culling/visibility.js",
            "modules": {},
            "classes": {
                "Visibility": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/curves/_module.js": {
            "name": "src/curves/_module.js",
            "modules": {
                "curves": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/curves/cubicBezierCurve.js": {
            "name": "src/curves/cubicBezierCurve.js",
            "modules": {},
            "classes": {
                "CubicBezierCurve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/curves/curve.js": {
            "name": "src/curves/curve.js",
            "modules": {},
            "classes": {
                "Curve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/curves/path.js": {
            "name": "src/curves/path.js",
            "modules": {},
            "classes": {
                "Path": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/curves/quadraticBezierCurve.js": {
            "name": "src/curves/quadraticBezierCurve.js",
            "modules": {},
            "classes": {
                "QuadraticBezierCurve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/curves/splineCurve.js": {
            "name": "src/curves/splineCurve.js",
            "modules": {},
            "classes": {
                "SplineCurve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/_module.js": {
            "name": "src/geometry/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/boundaryGeometry.js": {
            "name": "src/geometry/boundaryGeometry.js",
            "modules": {},
            "classes": {
                "BoundaryGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/boxGeometry.js": {
            "name": "src/geometry/boxGeometry.js",
            "modules": {},
            "classes": {
                "BoxGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/cylinderGeometry.js": {
            "name": "src/geometry/cylinderGeometry.js",
            "modules": {},
            "classes": {
                "Cylinder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/geometry.js": {
            "name": "src/geometry/geometry.js",
            "modules": {},
            "classes": {
                "Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/latheGeometry.js": {
            "name": "src/geometry/latheGeometry.js",
            "modules": {},
            "classes": {
                "LatheGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/pathGeometry.js": {
            "name": "src/geometry/pathGeometry.js",
            "modules": {
                "geometry": 1
            },
            "classes": {
                "PathGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/planeGeometry.js": {
            "name": "src/geometry/planeGeometry.js",
            "modules": {},
            "classes": {
                "PlaneGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/sphereGeometry.js": {
            "name": "src/geometry/sphereGeometry.js",
            "modules": {},
            "classes": {
                "SphereGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/torusGeometry.js": {
            "name": "src/geometry/torusGeometry.js",
            "modules": {},
            "classes": {
                "TorusGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/grouping/_module.js": {
            "name": "src/grouping/_module.js",
            "modules": {
                "grouping": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/grouping/group.js": {
            "name": "src/grouping/group.js",
            "modules": {},
            "classes": {
                "Group": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/importing/gltf/glTFLoader.js": {
            "name": "src/importing/gltf/glTFLoader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/importing/gltf/glTFLoaderUtils.js": {
            "name": "src/importing/gltf/glTFLoaderUtils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/importing/_module.js": {
            "name": "src/importing/_module.js",
            "modules": {
                "importing": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/importing/model.js": {
            "name": "src/importing/model.js",
            "modules": {},
            "classes": {
                "Model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/_module.js": {
            "name": "src/input/_module.js",
            "modules": {
                "input": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/input/input.js": {
            "name": "src/input/input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/_module.js": {
            "name": "src/lighting/_module.js",
            "modules": {
                "lighting": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/ambientLight.js": {
            "name": "src/lighting/ambientLight.js",
            "modules": {},
            "classes": {
                "AmbientLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/dirLight.js": {
            "name": "src/lighting/dirLight.js",
            "modules": {},
            "classes": {
                "DirLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/lights.js": {
            "name": "src/lighting/lights.js",
            "modules": {},
            "classes": {
                "Lights": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/pointLight.js": {
            "name": "src/lighting/pointLight.js",
            "modules": {},
            "classes": {
                "PointLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/_module.js": {
            "name": "src/materials/_module.js",
            "modules": {
                "materials": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/materials/fresnel.js": {
            "name": "src/materials/fresnel.js",
            "modules": {},
            "classes": {
                "Fresnel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/material.js": {
            "name": "src/materials/material.js",
            "modules": {},
            "classes": {
                "Material": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/pbrMaterial.js": {
            "name": "src/materials/pbrMaterial.js",
            "modules": {},
            "classes": {
                "PBRMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/phongMaterial.js": {
            "name": "src/materials/phongMaterial.js",
            "modules": {},
            "classes": {
                "PhongMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/reflect.js": {
            "name": "src/materials/reflect.js",
            "modules": {},
            "classes": {
                "Reflect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/texture.js": {
            "name": "src/materials/texture.js",
            "modules": {},
            "classes": {
                "Texture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/math/_module.js": {
            "name": "src/math/_module.js",
            "modules": {
                "math": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/math.js": {
            "name": "src/math/math.js",
            "modules": {},
            "classes": {
                "XEO.math.math": 1
            },
            "fors": {},
            "namespaces": {
                "XEO.math": 1
            }
        },
        "src/objects/_module.js": {
            "name": "src/objects/_module.js",
            "modules": {
                "objects": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/objects/gameObject.js": {
            "name": "src/objects/gameObject.js",
            "modules": {},
            "classes": {
                "GameObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/_module.js": {
            "name": "src/rendering/_module.js",
            "modules": {
                "rendering": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/colorBuf.js": {
            "name": "src/rendering/colorBuf.js",
            "modules": {},
            "classes": {
                "ColorBuf": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/colorTarget.js": {
            "name": "src/rendering/colorTarget.js",
            "modules": {},
            "classes": {
                "ColorTarget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/depthBuf.js": {
            "name": "src/rendering/depthBuf.js",
            "modules": {},
            "classes": {
                "DepthBuf": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/depthTarget.js": {
            "name": "src/rendering/depthTarget.js",
            "modules": {},
            "classes": {
                "DepthTarget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/layer.js": {
            "name": "src/rendering/layer.js",
            "modules": {},
            "classes": {
                "Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/modes.js": {
            "name": "src/rendering/modes.js",
            "modules": {},
            "classes": {
                "Modes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/stage.js": {
            "name": "src/rendering/stage.js",
            "modules": {},
            "classes": {
                "Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/reporting/_module.js": {
            "name": "src/reporting/_module.js",
            "modules": {
                "reporting": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/reporting/task.js": {
            "name": "src/reporting/task.js",
            "modules": {},
            "classes": {
                "Task": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/reporting/tasks.js": {
            "name": "src/reporting/tasks.js",
            "modules": {},
            "classes": {
                "Tasks": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/shaders/_module.js": {
            "name": "src/shaders/_module.js",
            "modules": {
                "shaders": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/shaders/shader.js": {
            "name": "src/shaders/shader.js",
            "modules": {},
            "classes": {
                "Shader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/shaders/shaderParams.js": {
            "name": "src/shaders/shaderParams.js",
            "modules": {},
            "classes": {
                "ShaderParams": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/_module.js": {
            "name": "src/transforms/_module.js",
            "modules": {
                "transforms": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/billboard.js": {
            "name": "src/transforms/billboard.js",
            "modules": {},
            "classes": {
                "Billboard": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/quaternion.js": {
            "name": "src/transforms/quaternion.js",
            "modules": {},
            "classes": {
                "Quaternion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/rotate.js": {
            "name": "src/transforms/rotate.js",
            "modules": {},
            "classes": {
                "Rotate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/scale.js": {
            "name": "src/transforms/scale.js",
            "modules": {},
            "classes": {
                "Scale": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/stationary.js": {
            "name": "src/transforms/stationary.js",
            "modules": {},
            "classes": {
                "Stationary": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/transform.js": {
            "name": "src/transforms/transform.js",
            "modules": {},
            "classes": {
                "Transform": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/translate.js": {
            "name": "src/transforms/translate.js",
            "modules": {},
            "classes": {
                "Translate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/component.js": {
            "name": "src/component.js",
            "modules": {},
            "classes": {
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/scene.js": {
            "name": "src/scene.js",
            "modules": {},
            "classes": {
                "Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/xeo.js": {
            "name": "src/xeo.js",
            "modules": {
                "XEO": 1
            },
            "classes": {
                "XEO": 1
            },
            "fors": {},
            "namespaces": {
                "XEO": 1
            }
        }
    },
    "modules": {
        "XEO": {
            "name": "XEO",
            "submodules": {
                "undefined": 1,
                "animation": 1,
                "boundaries": 1,
                "camera": 1,
                "canvas": 1,
                "clipping": 1,
                "configs": 1,
                "controls": 1,
                "culling": 1,
                "curves": 1,
                "geometry": 1,
                "grouping": 1,
                "importing": 1,
                "input": 1,
                "lighting": 1,
                "materials": 1,
                "math": 1,
                "objects": 1,
                "rendering": 1,
                "reporting": 1,
                "shaders": 1,
                "transforms": 1
            },
            "classes": {
                "PlaneGeometry": 1,
                "CameraFlight": 1,
                "CameraPath": 1,
                "MorphTargets": 1,
                "Boundary2D": 1,
                "Boundary3D": 1,
                "GroupBoundary": 1,
                "Camera": 1,
                "Frustum": 1,
                "Lookat": 1,
                "Ortho": 1,
                "Perspective": 1,
                "Canvas": 1,
                "Clip": 1,
                "Clips": 1,
                "Configs": 1,
                "CameraControl": 1,
                "KeyboardAxisCamera": 1,
                "KeyboardPanCamera": 1,
                "KeyboardRotateCamera": 1,
                "KeyboardZoomCamera": 1,
                "MousePanCamera": 1,
                "MousePickObject": 1,
                "MouseRotateCamera": 1,
                "MouseZoomCamera": 1,
                "Visibility": 1,
                "CubicBezierCurve": 1,
                "Curve": 1,
                "Path": 1,
                "QuadraticBezierCurve": 1,
                "SplineCurve": 1,
                "BoundaryGeometry": 1,
                "BoxGeometry": 1,
                "Cylinder": 1,
                "Geometry": 1,
                "LatheGeometry": 1,
                "SphereGeometry": 1,
                "TorusGeometry": 1,
                "Group": 1,
                "Model": 1,
                "Input": 1,
                "AmbientLight": 1,
                "DirLight": 1,
                "Lights": 1,
                "PointLight": 1,
                "Fresnel": 1,
                "Material": 1,
                "PBRMaterial": 1,
                "PhongMaterial": 1,
                "Reflect": 1,
                "Texture": 1,
                "XEO.math.math": 1,
                "GameObject": 1,
                "ColorBuf": 1,
                "ColorTarget": 1,
                "DepthBuf": 1,
                "DepthTarget": 1,
                "Layer": 1,
                "Modes": 1,
                "Stage": 1,
                "Task": 1,
                "Tasks": 1,
                "Shader": 1,
                "ShaderParams": 1,
                "Billboard": 1,
                "Quaternion": 1,
                "Rotate": 1,
                "Scale": 1,
                "Stationary": 1,
                "Transform": 1,
                "Translate": 1,
                "Component": 1,
                "Scene": 1,
                "XEO": 1
            },
            "fors": {},
            "namespaces": {
                "XEO.math": 1,
                "XEO": 1
            },
            "tag": "main",
            "file": "src/xeo.js",
            "line": 1,
            "description": "The xeoEngine namespace.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*"
                }
            ],
            "extends": "renderer.State",
            "itemtype": "main"
        },
        "animation": {
            "name": "animation",
            "submodules": {},
            "classes": {
                "CameraFlight": 1,
                "CameraPath": 1,
                "MorphTargets": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/animation/morphTargets.js",
            "line": 6,
            "description": "Components for animating state within Scenes."
        },
        "boundaries": {
            "name": "boundaries",
            "submodules": {},
            "classes": {
                "Boundary2D": 1,
                "Boundary3D": 1,
                "GroupBoundary": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/boundaries/groupBoundary.js",
            "line": 1,
            "description": "Components to support spatial queries (eg. collisions etc)."
        },
        "camera": {
            "name": "camera",
            "submodules": {},
            "classes": {
                "Camera": 1,
                "Frustum": 1,
                "Lookat": 1,
                "Ortho": 1,
                "Perspective": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/camera/perspective.js",
            "line": 1,
            "description": "Camera components."
        },
        "canvas": {
            "name": "canvas",
            "submodules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/canvas/canvas.js",
            "line": 1,
            "description": "Canvas-related things."
        },
        "clipping": {
            "name": "clipping",
            "submodules": {},
            "classes": {
                "Clip": 1,
                "Clips": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/clipping/clips.js",
            "line": 1,
            "description": "Components for cross-section views of GameObjects."
        },
        "configs": {
            "name": "configs",
            "submodules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/configs/configs.js",
            "line": 1,
            "description": "Components for managing Scene configuration."
        },
        "controls": {
            "name": "controls",
            "submodules": {},
            "classes": {
                "CameraControl": 1,
                "KeyboardAxisCamera": 1,
                "KeyboardPanCamera": 1,
                "KeyboardRotateCamera": 1,
                "KeyboardZoomCamera": 1,
                "MousePanCamera": 1,
                "MousePickObject": 1,
                "MouseRotateCamera": 1,
                "MouseZoomCamera": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/mouseZoomCamera.js",
            "line": 1,
            "description": "Components for controlling things with user input."
        },
        "culling": {
            "name": "culling",
            "submodules": {},
            "classes": {
                "Visibility": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/culling/visibility.js",
            "line": 1,
            "description": "Components for controlling the visibility of GameObjects."
        },
        "curves": {
            "name": "curves",
            "submodules": {},
            "classes": {
                "CubicBezierCurve": 1,
                "Curve": 1,
                "Path": 1,
                "QuadraticBezierCurve": 1,
                "SplineCurve": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/curves/splineCurve.js",
            "line": 1,
            "description": "Components for defining 3D curves."
        },
        "geometry": {
            "name": "geometry",
            "submodules": {},
            "classes": {
                "PathGeometry": 1,
                "BoundaryGeometry": 1,
                "BoxGeometry": 1,
                "Cylinder": 1,
                "Geometry": 1,
                "LatheGeometry": 1,
                "PlaneGeometry": 1,
                "SphereGeometry": 1,
                "TorusGeometry": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/torusGeometry.js",
            "line": 1,
            "description": "A path geometry.",
            "tag": "module"
        },
        "grouping": {
            "name": "grouping",
            "submodules": {},
            "classes": {
                "Group": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/grouping/group.js",
            "line": 1,
            "description": "Components for managing groups of components."
        },
        "importing": {
            "name": "importing",
            "submodules": {},
            "classes": {
                "Model": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/importing/model.js",
            "line": 7,
            "description": "Imports content from files."
        },
        "input": {
            "name": "input",
            "submodules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/input/input.js",
            "line": 1,
            "description": "Components for capturing user input."
        },
        "lighting": {
            "name": "lighting",
            "submodules": {},
            "classes": {
                "AmbientLight": 1,
                "DirLight": 1,
                "Lights": 1,
                "PointLight": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/lighting/pointLight.js",
            "line": 1,
            "description": "Components for defining light sources."
        },
        "materials": {
            "name": "materials",
            "submodules": {},
            "classes": {
                "Fresnel": 1,
                "Material": 1,
                "PBRMaterial": 1,
                "PhongMaterial": 1,
                "Reflect": 1,
                "Texture": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/texture.js",
            "line": 1,
            "description": "Components to define the surface appearance of GameObjects."
        },
        "math": {
            "name": "math",
            "submodules": {},
            "classes": {
                "XEO.math.math": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "XEO.math": 1
            },
            "module": "XEO",
            "namespace": "",
            "file": "src/math/math.js",
            "line": 58,
            "description": "Math utilities.",
            "static": 1
        },
        "objects": {
            "name": "objects",
            "submodules": {},
            "classes": {
                "GameObject": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/objects/gameObject.js",
            "line": 1,
            "description": "Game object components."
        },
        "rendering": {
            "name": "rendering",
            "submodules": {},
            "classes": {
                "ColorBuf": 1,
                "ColorTarget": 1,
                "DepthBuf": 1,
                "DepthTarget": 1,
                "Layer": 1,
                "Modes": 1,
                "Stage": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/stage.js",
            "line": 1,
            "description": "Components that influence the way objects are rendered on WebGL."
        },
        "reporting": {
            "name": "reporting",
            "submodules": {},
            "classes": {
                "Task": 1,
                "Tasks": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/reporting/tasks.js",
            "line": 1,
            "description": "Components for reporting Scene statistics."
        },
        "shaders": {
            "name": "shaders",
            "submodules": {},
            "classes": {
                "Shader": 1,
                "ShaderParams": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/shaders/shaderParams.js",
            "line": 1,
            "description": "Components for defining custom GLSL shaders."
        },
        "transforms": {
            "name": "transforms",
            "submodules": {},
            "classes": {
                "Billboard": 1,
                "Quaternion": 1,
                "Rotate": 1,
                "Scale": 1,
                "Stationary": 1,
                "Transform": 1,
                "Translate": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/translate.js",
            "line": 1,
            "description": "Modelling transform components."
        }
    },
    "classes": {
        "CameraFlight": {
            "name": "CameraFlight",
            "shortname": "CameraFlight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/animation/cameraFlight.js",
            "line": 1,
            "description": "A **CameraFlight** flies a {{#crossLink \"Camera\"}}{{/crossLink}} to a given target.\n\n## Overview\n\n<ul>\n<li>A CameraFlight animates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>A CameraFlight can be attached to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n<li>While a CameraFlight is busy flying to a target, it can be stopped, or redirected to fly to a different target.</li>\n</ul>\n\nA target can be:\n\n<ul>\n<li>a World-space {{#crossLink \"Boundary3D\"}}{{/crossLink}},</li>\n<li>an instance or ID of any {{#crossLink \"Component\"}}{{/crossLink}} subtype that provides a World-space</li>\n{{#crossLink \"Boundary3D\"}}{{/crossLink}} in a \"worldBoundary\" property, or</li>\n<li>specific ````eye````, ````look```` and ````up```` positions.</li>\n</ul>\n\n## Example #1\n\nFlying to a {{#crossLink \"GameObject\"}}{{/crossLink}} (which provides a World-space\n{{#crossLink \"Boundary3D\"}}{{/crossLink}} via its {{#crossLink \"GameObject/worldBoundary:property\"}}{{/crossLink}} property):\n\n````Javascript\nvar camera = new XEO.Camera();\n\n// Create a CameraFlight that takes exactly ten seconds to fly\n// the Camera to each specified target\nvar cameraFlight = new XEO.CameraFlight({\n   camera: camera,\n   duration: 20\n});\n\n// Create a GameObject, which gets all the default components\nvar object = new GameObject();\n\n// Fly to the GameObject's worldBoundary\ncameraFlight.flyTo(object);\n````\n\n## Example #2\n\nFlying the CameraFlight from the previous example to specified eye, look and up positions:\n\n````Javascript\ncameraFlight.flyTo({\n   eye: [-5,-5,-5],\n   look: [0,0,0]\n   up: [0,1,0]\n}, function() {\n   // Arrived\n});\n````\n\n## Example #3\n\nFlying the CameraFlight from the previous two examples explicitly to the World-space\n{{#crossLink \"Boundary3D\"}}{{/crossLink}} of the {{#crossLink \"GameObject\"}}{{/crossLink}} property):\n\n````Javascript\nvar worldBoundary = object.worldBoundary;\n\ncameraFlight.flyTo(worldBoundary);\n````\n\n## Example #4\n\nFlying the CameraFlight from the previous two examples explicitly to the {{#crossLink \"Boundary3D\"}}Boundary3D's{{/crossLink}}\naxis-aligned bounding box:\n\n````Javascript\nvar worldBoundary = object.worldBoundary;\n\nvar aabb = worldBoundary.aabb;\n\ncameraFlight.flyTo(aabb);\n````",
            "submodule": "animation",
            "author": "xeolabs / http://xeolabs.org",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Target - see class documentation above.",
                    "type": "String|Component|Boundary3D|Array of Number|*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraFlight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraFlight. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "CameraPath": {
            "name": "CameraPath",
            "shortname": "CameraPath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/animation/cameraPath.js",
            "line": 1,
            "description": "A **CameraPath** flies a {{#crossLink \"Camera\"}}{{/crossLink}} along a {{#crossLink \"Curve\"}}{{/crossLink}}.\n\n## Example\n\n````Javascript\n\nvar object = new XEO.GameObject();\n\nvar camera = new XEO.Camera();\n\nvar spline = new XEO.SplineCurve({\n           points: [\n               [0, 0, 100],\n               [10, 5, 60],\n               [7, 2, 20],\n               [2, -1, 10]\n           ]\n       });\n\nvar cameraPath = new XEO.CameraPath({\n   camera: camera,\n   path: spline\n});\n\nXEO.scene.on(\"tick\",\nfunction(e) {\n\n       var t = (e.time - e.startTime) * 0.01;\n\n       spline.t = t;\n   });\n````",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraPath.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraPath. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "path",
                            "description": "ID or instance of a {{#crossLink \"Curve\"}}{{/crossLink}} to move along.",
                            "type": "String|Curve",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "MorphTargets": {
            "name": "MorphTargets",
            "shortname": "MorphTargets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/animation/morphTargets.js",
            "line": 6,
            "description": "A **MorphTargets** defines interpolation targets for morphing {{#crossLink \"Geometry\"}}Geometry{{/crossLink}}s on\nattached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<img src=\"../../../assets/images/MorphTargets.png\"></img>\n\n## Example\n\nTODO",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this MorphTarget in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MorphTarget.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "targets",
                            "description": "The morph targets.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "factor",
                            "description": "The morph factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Boundary2D": {
            "name": "Boundary2D",
            "shortname": "Boundary2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/boundaries/boundary2d.js",
            "line": 1,
            "description": "A **Boundary2D** is a Canvas-space 2D boundary.\n\n## Overview\n\nA Boundary2D provides its spatial info in these properties:\n\n<ul>\n<li>{{#crossLink \"Boundary2D/aabb:property\"}}{{/crossLink}} - axis-aligned bounding box (AABB)</li>\n<li>{{#crossLink \"Boundary2D/center:property\"}}{{/crossLink}} - center coordinate </li>\n</ul>\n\nThe following components have Boundary2Ds:\n\n<ul>\n<li>A {{#crossLink \"GameObject\"}}{{/crossLink}} provides its Canvas-space boundary via\nits {{#crossLink \"GameObject/canvasBoundary:property\"}}{{/crossLink}} property</li>\n</ul>\n\n<img src=\"../../../assets/images/Boundary2D.png\"></img>\n\n## Example\n\nA {{#crossLink \"GameObject\"}}{{/crossLink}} provides its Canvas-space boundary as a Boundary2D that encloses\nits {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntransformation by the GameObject's {{#crossLink \"GameObject/transform:property\"}}Modelling transform{{/crossLink}}\nand projection by the matrix of tGameObject's {{#crossLink \"GameObject/camera:property\"}}Modelling transform{{/crossLink}}.\n\nIn this example we get the boundary and subscribe to updates on it, then animate the modelling transform,\nwhich gives us a running update of the moving boundary extents via our update handler.\n\n```` javascript\n\n// Modelling transform\nvar translate = new XEO.Translate({\n   xyz: [-5, 0, 0]\n});\n\n// Game object that applies the modelling transform to the Geometry\nvar object = new XEO.GameObject({\n      geometry: myGeometry,\n      transform: translate\n });\n\nvar canvasBoundary = object.canvasBoundary();\n\n// Canvas-space AABB\nvar aabb = canvasBoundary.aabb;\n\n// Canvas-space center\nvar center = canvasBoundary.center;\n\n// Subscribe to updates to the Boundary2D\ncanvasBoundary.on(\"updated\",\nfunction() {\n\n       // Get the updated properties again\n\n       aabb = canvasBoundary.aabb;\n       center = canvasBoundary.center;\n\n       //...\n   });\n\n// Animate the modelling transform;\n// on each tick, this will update the Boundary2D and fire our\n// handler, enabling us to track the changing boundary.\n\nvar x = 0;\n\nobject.scene.on(\"tick\", function() {\n   translate.xyz: [x, 0, 0];\n   x += 0.5;\n});\n````",
            "submodule": "boundaries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Boundary2D within xeoEngine's default {{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Boundary.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "Optional initial canvas-space 2D axis-aligned bounding volume (AABB).",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "center",
                            "description": "Optional initial canvas-space 2D center",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "getDirty",
                            "description": "Optional callback to check if parent component has new OBB and matrix.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getOBB",
                            "description": "Optional callback to get new view-space 3D OBB from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getMatrix",
                            "description": "Optional callback to get new projection matrix from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "shown",
                            "description": "Set true to show a helper DIV that indicates the boundary.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Boundary3D": {
            "name": "Boundary3D",
            "shortname": "Boundary3D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/boundaries/boundary3d.js",
            "line": 1,
            "description": "A **Boundary3D** provides the axis-aligned and object-aligned extents of its owner component.\n\n## Overview\n\nA Boundary3D provides its spatial info in these properties:\n\n<ul>\n<li>{{#crossLink \"Boundary3D/obb:property\"}}{{/crossLink}} - object-aligned bounding box (OBB)</li>\n<li>{{#crossLink \"Boundary3D/aabb:property\"}}{{/crossLink}} - axis-aligned bounding box (AABB)</li>\n<li>{{#crossLink \"Boundary3D/center:property\"}}{{/crossLink}} - center coordinate </li>\n</ul>\n\nThe following components have Boundary3Ds:\n\n<ul>\n<li>A {{#crossLink \"Geometry\"}}{{/crossLink}} provides its Local-space boundary via\nproperty {{#crossLink \"Geometry/localBoundary:property\"}}{{/crossLink}}</li>\n<li>A {{#crossLink \"GameObject\"}}{{/crossLink}} provides its World and View-space boundaries via\nproperties {{#crossLink \"GameObject/worldBoundary:property\"}}{{/crossLink}}\nand {{#crossLink \"GameObject/viewBoundary:property\"}}{{/crossLink}}</li>\n</ul>\n\n<img src=\"../../../assets/images/Boundary.png\"></img>\n\n## Example\n\nA {{#crossLink \"GameObject\"}}{{/crossLink}} provides its World-space boundary as a Boundary3D that encloses\nits {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntheir transformation by the GameObject's {{#crossLink \"GameObject/transform:property\"}}Modelling transform{{/crossLink}}.\n\nIn this example we get the boundary and subscribe to updates on it, then animate the modelling transform,\nwhich gives us a running update of the moving boundary extents via our update handler.\n\n```` javascript\n\n// Geometry\nvar geometry = new XEO.Geometry();\n\n// Modelling transform\nvar translate = new XEO.Translate({\n   xyz: [-5, 0, 0]\n});\n\n// Game object that applies the modelling transform to the Geometry\nvar object = new XEO.GameObject({\n      geometry: myGeometry,\n      transform: translate\n });\n\nvar worldBoundary = object.worldBoundary;\n\n// World-space OBB\nvar obb = worldBoundary.obb;\n\n// World-space AABB\nvar aabb = worldBoundary.aabb;\n\n// World-space center\nvar center = worldBoundary.center;\n\n// Subscribe to updates to the Boundary3D\nworldBoundary.on(\"updated\",\nfunction() {\n\n       // Get the updated properties again\n\n       obb = worldBoundary.obb;\n       aabb = worldBoundary.aabb;\n       center = worldBoundary.center;\n\n       //...\n   });\n\n// Animate the modelling transform;\n// on each tick, this will update the Boundary3D and fire our\n// handler, enabling us to track the changing boundary.\n\nvar x = 0;\n\nscene.on(\"tick\", function() {\n   translate.xyz: [x, 0, 0];\n   x += 0.5;\n});\n````",
            "submodule": "boundaries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Boundary within xeoEngine's default {{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Boundary.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "obb",
                            "description": "Optional initial 3D object-aligned bounding volume (OBB).",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "Optional initial 3D axis-aligned bounding volume (AABB).",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "center",
                            "description": "Optional initial 3D center",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "getDirty",
                            "description": "Optional callback to check if parent component has new OBB, positions or transform matrix.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getOBB",
                            "description": "Optional callback to get new OBB from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getMatrix",
                            "description": "Optional callback to get new transform matrix from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getPositions",
                            "description": "Optional callback to get new positions from parent.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "GroupBoundary": {
            "name": "GroupBoundary",
            "shortname": "GroupBoundary",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/boundaries/groupBoundary.js",
            "line": 1,
            "description": "A **GroupBoundary** TODO.\n\n## Overview\n\n<ul>\n\n<li>TODO</li>\n\n</ul>\n\n<img src=\"../../../assets/images/GroupBoundary.png\"></img>\n\n## Example\n\nTODO\n\n````javascript\nvar groupBoundary = new XEO.GroupBoundary({\n\n   group: new XEO.Group({\n\n       components: [\n           new XEO.GameObject({\n               ..,,\n           }),\n           new XEO.GameObject({\n               ..,,\n           }),\n           new XEO.GameObject({\n               //..\n           })\n       ]\n   })\n});\n\nvar showBoundary = new XEO.GameObject({\n       geometry: new XEO.BoundaryGeometry({\n           boundary: groupBoundary.worldBoundary\n       }),\n       material: new XEO.PhongMaterial({\n           diffuse: [1,0,0]\n       })\n   });\n````",
            "submodule": "boundaries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this GroupBoundary within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "GroupBoundary configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this GroupBoundary.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "emissiveMap",
                            "description": "A {{#crossLink \"Group\"}}Group{{/crossLink}} to fit the {{#crossLink \"GroupBoundary/worldBoundary:property\"}}{{/crossLink}} to. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GroupBoundary.",
                            "type": "Group",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Camera": {
            "name": "Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/camera/camera.js",
            "line": 3,
            "description": "A **Camera** defines a viewpoint on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n\n<li> A Camera is composed of a viewing transform and a projection transform.</li>\n\n<li>The viewing transform is usually a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.</li>\n\n<li>The projection transform may be an {{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}}\nor {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.</li>\n\n<li> By default, each Camera is composed of its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/view:property\"}}{{/crossLink}} transform,\n(which is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}) and default\n{{#crossLink \"Scene/project:property\"}}{{/crossLink}} transform (which is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}).\nYou would override those with your own transform components as necessary.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Camera.png\"></img>\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/camera_perspective.html\"></iframe>\n\nIn this example we have\n\n<ul>\n<li>a {{#crossLink \"Lookat\"}}{{/crossLink}} view transform,</li>\n<li>a {{#crossLink \"Perspective\"}}{{/crossLink}} projection transform,</li>\n<li>a Camera attached to the {{#crossLink \"Lookat\"}}{{/crossLink}} and {{#crossLink \"Perspective\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar lookat = new XEO.Lookat(scene, {\n       eye: [0, 0, -10],\n       look: [0, 0, 0],\n       up: [0, 1, 0]\n   });\n\nvar perspective = new XEO.Lookat(scene, {\n       fovy: 60,\n       near: 0.1,\n       far: 1000\n   });\n\nvar camera = new XEO.Camera(scene, {\n       view: lookat,\n       project: perspective\n   });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n       camera: camera,\n       geometry: geometry\n   });\n\nscene.on(\"tick\", function () {\n      camera.view.rotateEyeY(0.5);\n      camera.view.rotateEyeX(0.3);\n   });\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Camera within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Camera by ID within its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} later.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "view",
                            "description": "ID or instance of a view transform within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/view:property\"}}{{/crossLink}} transform,\nwhich is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.",
                            "type": "String|XEO.Lookat",
                            "optional": true
                        },
                        {
                            "name": "project",
                            "description": "ID or instance of a projection transform\nwithin the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/project:property\"}}{{/crossLink}} transform,\nwhich is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.",
                            "type": "String|XEO.Perspective|XEO.Ortho|XEO.Frustum",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Frustum": {
            "name": "Frustum",
            "shortname": "Frustum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/camera/frustum.js",
            "line": 1,
            "description": "A **Frustum** defines a perspective projection as a frustum-shaped view volume.\n\n## Overview\n\n<ul>\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Ortho components create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Frustum.png\"></img>\n\n## Example\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/camera_frustum.html\"></iframe>\n\nIn this example we have a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that's attached to a\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} that has a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} view transform and a Frustum\nprojection transform.\n\n````Javascript\n\nvar scene = new XEO.Scene();\n\nvar lookat = new XEO.Lookat(scene, {\n       eye: [0, 0, -4],\n       look: [0, 0, 0],\n       up: [0, 1, 0]\n   });\n\nvar frustum = new XEO.Frustum(scene, {\n       left: -0.1,\n       right: 0.1,\n       bottom: -0.1,\n       top: 0.1,\n       near: 0.15,\n       far: 1000\n   });\n\nvar camera = new XEO.Camera(scene, {\n       view: lookat,\n       project: frustum\n   });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n       camera: camera,\n       geometry: geometry\n   });\n\nscene.on(\"tick\", function () {\n      camera.view.rotateEyeY(0.5);\n      camera.view.rotateEyeX(0.3);\n   });\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Frustum within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Frustum.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "Position of the Frustum's left plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1"
                        },
                        {
                            "name": "right",
                            "description": "Position of the Frustum's right plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "bottom",
                            "description": "Position of the Frustum's bottom plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1"
                        },
                        {
                            "name": "top",
                            "description": "Position of the Frustum's top plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "near",
                            "description": "Position of the Frustum's near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the Frustum's far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Lookat": {
            "name": "Lookat",
            "shortname": "Lookat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/camera/lookat.js",
            "line": 1,
            "description": "A **Lookat** defines a viewing transform as an {{#crossLink \"Lookat/eye:property\"}}eye{{/crossLink}} position, a\n{{#crossLink \"Lookat/look:property\"}}look{{/crossLink}} position and an {{#crossLink \"Lookat/up:property\"}}up{{/crossLink}}\nvector.\n\n## Overview\n\n<ul>\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with projection transforms such as\n{{#crossLink \"Perspective\"}}Perspective{{/crossLink}}, to define viewpoints on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Lookat components create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Lookat.png\"></img>\n\n## Example\n\nIn this example we have a Lookat that positions the eye at -4 on the World-space Z-axis, while looking at the origin.\nThen we attach our Lookat to a {{#crossLink \"Camera\"}}{{/crossLink}}. which we attach to a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar lookat = new XEO.Lookat(scene, {\n       eye: [0, 0, -4],\n       look: [0, 0, 0],\n       up: [0, 1, 0]\n   });\n\nvar perspective = new XEO.Perspective(scene, {\n       fovy: 60,\n       near: 0.1,\n       far: 1000\n   });\n\nvar camera = new XEO.Camera(scene, {\n       view: lookat,\n       project: perspective\n   });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n       camera: camera,\n       geometry: geometry\n   });\n\nscene.on(\"tick\", function () {\n      camera.view.rotateEyeY(0.5);\n      camera.view.rotateEyeX(0.3);\n   });\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Lookat in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Lookat.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Eye position.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,-10]"
                        },
                        {
                            "name": "look",
                            "description": "The position of the point-of-interest we're looking at.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "up",
                            "description": "The \"up\" vector.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        }
                    ]
                }
            ],
            "extends": "Component",
            "author": "xeolabs / http://xeolabs.com/"
        },
        "Ortho": {
            "name": "Ortho",
            "shortname": "Ortho",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/camera/ortho.js",
            "line": 1,
            "description": "An **Ortho** component defines an orthographic projection transform.\n\n## Overview\n\n<ul>\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>Alternatively, use {{#crossLink \"Perspective\"}}{{/crossLink}} if you need perspective projection.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Ortho components create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Ortho.png\"></img>\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/camera_ortho.html\"></iframe>\n\nIn this example we have a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that's attached to a\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} that has a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} view transform and an Ortho\nprojection transform.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar lookat = new XEO.Lookat(scene, {\n       eye: [0, 0, -4],\n       look: [0, 0, 0],\n       up: [0, 1, 0]\n   });\n\nvar ortho = new XEO.Ortho(scene, {\n       left: -3.0,\n       right: 3.0,\n       bottom: -3.0,\n       top: 3.0,\n       near: 0.1,\n       far: 1000\n   });\n\nvar camera = new XEO.Camera(scene, {\n       view: lookat,\n       project: ortho\n   });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n       camera: camera,\n       geometry: geometry\n   });\n\nscene.on(\"tick\",\n   function () {\n               camera.view.rotateEyeY(0.5);\n               camera.view.rotateEyeX(0.3);\n           });\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Ortho within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Ortho.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "Position of the left plane on the View-space X-xyz.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1.0"
                        },
                        {
                            "name": "right",
                            "description": "Position of the right plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "top",
                            "description": "Position of the top plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "bottom",
                            "description": "Position of the bottom plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1.0"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Perspective": {
            "name": "Perspective",
            "shortname": "Perspective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/camera/perspective.js",
            "line": 1,
            "description": "A **Perspective** component defines a perspective projection transform.\n\n## Overview\n\n<ul>\n\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>Alternatively, use {{#crossLink \"Ortho\"}}{{/crossLink}} if you need a orthographic projection.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Perspective components create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Perspective.png\"></img>\n\n## Example\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/camera_perspective.html\"></iframe>\n\nIn this example we have a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that's attached to a\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} that has a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} view transform and a Perspective\nprojection transform.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar lookat = new XEO.Lookat(scene, {\n       eye: [0, 0, -4],\n       look: [0, 0, 0],\n       up: [0, 1, 0]\n   });\n\nvar perspective = new XEO.Perspective(scene, {\n       fovy: 60,\n       near: 0.1,\n       far: 1000\n   });\n\nvar camera = new XEO.Camera(scene, {\n       view: lookat,\n       project: perspective\n   });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n       camera: camera,\n       geometry: geometry\n   });\n\nscene.on(\"tick\", function () {\n      camera.view.rotateEyeY(0.5);\n      camera.view.rotateEyeX(0.3);\n   });\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Perspective within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Perspective.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "fovy",
                            "description": "Field-of-view angle, in degrees, on Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60.0"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Canvas": {
            "name": "Canvas",
            "shortname": "Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/canvas/canvas.js",
            "line": 1,
            "description": "A **Canvas** manages a {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s HTML canvas and its WebGL context.\n\n## Overview\n\n<ul>\n\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Canvas as a read-only property on itself.</li>\n\n<li>When a {{#crossLink \"Scene\"}}Scene{{/crossLink}} is configured with the ID of\nan existing <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>, then\nthe Canvas will bind to that, otherwise the Canvas will automatically create its own.</li>\n\n<li>A Canvas will fire a {{#crossLink \"Canvas/resized:event\"}}{{/crossLink}} event whenever\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a> resizes.</li>\n\n<li>A Canvas is responsible for obtaining a WebGL context from\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>.</li>\n\n<li>A Canvas also fires a {{#crossLink \"Canvas/webglContextLost:event\"}}{{/crossLink}} event when the WebGL context is\nlost, and a {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} when it is restored again.</li>\n\n<li>The various components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will transparently recover on\nthe {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} event.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Canvas.png\"></img>\n\n## Example\n\nIn the example below, we're creating a {{#crossLink \"Scene\"}}Scene{{/crossLink}} without specifying an HTML canvas element\nfor it. This causes the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s Canvas component to create its own default element\nwithin the page. Then we subscribe to various events fired by that Canvas component.\n\n```` javascript\nvar scene = new XEO.Scene();\n\n// Get the Canvas off the Scene\n// Since we did not configure the Scene with the ID of a DOM canvas element,\n// the Canvas will create its own canvas element in the DOM\nvar canvas = scene.canvas;\n\n// Get the WebGL context off the Canvas\nvar gl = canvas.gl;\n\n// Subscribe to Canvas resize events\ncanvas.on(\"resize\", function(e) {\n       var width = e.width;\n       var height = e.height;\n       var aspect = e.aspect;\n       //...\n    });\n\n// Subscribe to WebGL context loss events on the Canvas\ncanvas.on(\"webglContextLost\", function() {\n       //...\n    });\n\n// Subscribe to WebGL context restored events on the Canvas\ncanvas.on(\"webglContextRestored\", function(gl) {\n       var newContext = gl;\n       //...\n    });\n````\n\nWhen we want to bind the Canvas to an existing HTML canvas element, configure the\n{{#crossLink \"Scene\"}}{{/crossLink}} with the ID of the element, like this:\n\n```` javascript\n// Create a Scene, this time configuting it with the\n// ID of an existing DOM canvas element\nvar scene = new XEO.Scene({\n         canvasId: \"myCanvas\"\n    });\n\n// ..and the rest of this example can be the same as the previous example.\n\n````",
            "submodule": "canvas",
            "static": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene",
                    "type": "Scene"
                }
            ],
            "extends": "Component"
        },
        "Clip": {
            "name": "Clip",
            "shortname": "Clip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/clipping/clip.js",
            "line": 3,
            "description": "A **Clip** is an arbitrarily-aligned World-space clipping plane, which may be used to create\ncross-sectional views of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n\n<li>These are grouped within {{#crossLink \"Clips\"}}Clips{{/crossLink}} components, which are attached to\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. See the {{#crossLink \"Clips\"}}Clips{{/crossLink}} documentation\nfor more info.</li>\n\n<li>A Clip is specified in World-space, as being perpendicular to a vector {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}\nthat emanates from the origin, offset at a distance {{#crossLink \"Clip/dist:property\"}}{{/crossLink}} along that vector. </li>\n\n<li>You can move a Clip back and forth along its vector by varying {{#crossLink \"Clip/dist:property\"}}{{/crossLink}}.</li>\n\n<li>Likewise, you can rotate a Clip about the origin by rotating the {{#crossLink \"Clip/dir:property\"}}{{/crossLink}} vector.</li>\n\n<li>A Clip is has a {{#crossLink \"Clip/mode:property\"}}{{/crossLink}},  which indicates whether it is disabled\n(\"disabled\"), discarding fragments that fall on the origin-side of the plane (\"inside\"), or clipping fragments that\nfall on the other side of the plane from the origin (\"outside\").</li>\n\n<li>You can update the {{#crossLink \"Clip/mode:property\"}}{{/crossLink}} of a Clip to activate or deactivate it, or to\nswitch which side it discards fragments from.</li>\n\n<li>Clipping may also be enabled or disabled for specific {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}\nvia the {{#crossLink \"Modes/clipping:property\"}}{{/crossLink}} flag on {{#crossLink \"Modes\"}}Modes{{/crossLink}} components\nattached to those {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Clips create within xeoEngine's shaders.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Clip.png\"></img>\n\n## Example\n\n<ul>\n\n<li>In this example we have a {{#crossLink \"GameObject\"}}{{/crossLink}} that's clipped by a {{#crossLink \"Clips\"}}{{/crossLink}}\nthat contains two {{#crossLink \"Clip\"}}{{/crossLink}} planes.</li>\n\n<li>The first {{#crossLink \"Clip\"}}{{/crossLink}} plane is on the\npositive diagonal, while the second is on the negative diagonal.</li>\n\n<li>The {{#crossLink \"GameObject\"}}GameObject's{{/crossLink}}\n{{#crossLink \"Geometry\"}}{{/crossLink}} is the default 2x2x2 box, and the planes will clip off two of the box's corners.</li>\n\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Clip plane on negative diagonal\nvar clip1 = new XEO.Clip(scene, {\n       dir: [-1.0, -1.0, -1.0], // Direction of Clip from World space origin\n       dist: 2.0,               // Distance along direction vector\n       mode: \"outside\"          // Clip fragments that fall beyond the plane\n    });\n\n// Clip plane on positive diagonal\nvar clip2 = new XEO.Clip(scene, {\n       dir: [1.0, 1.0, 1.0],\n       dist: 2.0,\n       mode: \"outside\"\n    });\n\n// Group the planes in a Clips\nvar clips = new XEO.Clip(scene, {\n       clips: [\n           clip1,\n           clip2\n       ]\n    });\n\n// Geometry defaults to a 2x2x2 box\nvar geometry = new XEO.Geometry(scene);\n\n// Create an Object, which is a box sliced by our clip planes\nvar object = new XEO.GameObject(scene, {\n       clips: clips,\n       geometry: geometry\n    });\n````\n\n### Toggling clipping on and off\n\nNow we'll attach a {{#crossLink \"Modes\"}}{{/crossLink}} to the {{#crossLink \"GameObject\"}}{{/crossLink}}, so that we can\nenable or disable clipping of it:\n\n```` javascript\n// Create the Modes\nvar modes = new XEO.Modes(scene, {\n   clipping: true\n});\n\n// Attach our Object to the Modes\nobject.modes = modes;\n\n// Disable clipping for the Object\nmodes.clipping = false;\n````",
            "submodule": "clipping",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Clip in the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Clip configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Clip by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clip.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "mode",
                            "description": "Clipping mode - \"disabled\" to clip nothing, \"inside\" to reject points inside the plane, \"outside\" to reject points outside the plane.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"disabled\""
                        }
                    ]
                },
                {
                    "name": "dir",
                    "description": "The direction of the clipping plane from the World-space origin.",
                    "type": "Array of Number",
                    "optional": true,
                    "optdefault": " [1, 0, 0]"
                },
                {
                    "name": "dist",
                    "description": "Distance to the clipping plane along the direction vector.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1.0"
                }
            ],
            "extends": "Component"
        },
        "Clips": {
            "name": "Clips",
            "shortname": "Clips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/clipping/clips.js",
            "line": 1,
            "description": "A **Clips** is a group of arbitrarily-aligned World-space {{#crossLink \"Clip\"}}Clip{{/crossLink}} planes, which may be used to create\ncross-sectional views of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n\n<li>Each {{#crossLink \"Clip\"}}Clip{{/crossLink}} is specified in World-space, as being perpendicular to a vector\n{{#crossLink \"Clip/dir:property\"}}{{/crossLink}} that emanates from the origin, offset at a\ndistance {{#crossLink \"Clip/dist:property\"}}{{/crossLink}} along that vector. </li>\n\n<li>You can move each {{#crossLink \"Clip\"}}Clip{{/crossLink}} back and forth along its vector by varying\nits {{#crossLink \"Clip/dist:property\"}}{{/crossLink}}.</li>\n\n<li>Likewise, you can rotate each {{#crossLink \"Clip\"}}Clip{{/crossLink}} about the origin by rotating\nits {{#crossLink \"Clip/dir:property\"}}{{/crossLink}} vector.</li>\n\n<li>Each {{#crossLink \"Clip\"}}Clip{{/crossLink}} is has a {{#crossLink \"Clip/mode:property\"}}{{/crossLink}}, which indicates whether it is disabled (\"disabled\"), discarding fragments that fall on the origin-side of the plane (\"inside\"), or clipping fragments that fall on the other side of the plane from the origin (\"outside\").</li>\n\n<li>You can update each {{#crossLink \"Clip\"}}Clip{{/crossLink}}'s {{#crossLink \"Clip/mode:property\"}}{{/crossLink}} to\nactivate or deactivate it, or to switch which side it discards fragments from.</li>\n\n<li>Clipping may also be enabled or disabled for specific {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}\nvia the {{#crossLink \"Modes/clipping:property\"}}{{/crossLink}} flag on {{#crossLink \"Modes\"}}Modes{{/crossLink}} components\nattached to those {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Clips create within xeoEngine's shaders.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Clips.png\"></img>\n\n## Example\n\n<ul>\n\n<li>In this example we have a {{#crossLink \"GameObject\"}}{{/crossLink}} that's clipped by a {{#crossLink \"Clips\"}}{{/crossLink}}\nthat contains two {{#crossLink \"Clip\"}}{{/crossLink}} planes.</li>\n\n<li>The first {{#crossLink \"Clip\"}}{{/crossLink}} plane is on the\npositive diagonal, while the second is on the negative diagonal.</li>\n\n<li>The {{#crossLink \"GameObject\"}}GameObject's{{/crossLink}}\n{{#crossLink \"Geometry\"}}{{/crossLink}} is the default 2x2x2 box, and the planes will clip off two of the box's corners.</li>\n\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Clip plane on negative diagonal\nvar clip1 = new XEO.Clip(scene, {\n       dir: [-1.0, -1.0, -1.0], // Direction of Clip from World space origin\n       dist: 2.0,               // Distance along direction vector\n       mode: \"outside\"          // Clip fragments that fall beyond the plane\n    });\n\n// Clip plane on positive diagonal\nvar clip2 = new XEO.Clip(scene, {\n       dir: [1.0, 1.0, 1.0],\n       dist: 2.0,\n       mode: \"outside\"\n    });\n\n// Group the planes in a Clips\nvar clips = new XEO.Clip(scene, {\n       clips: [\n           clip1,\n           clip2\n       ]\n    });\n\n// Geometry defaults to a 2x2x2 box\nvar geometry = new XEO.Geometry(scene);\n\n// Create an Object, which is a box sliced by our clip planes\nvar object = new XEO.GameObject(scene, {\n       clips: clips,\n       geometry: geometry\n    });\n````\n\n### Toggling clipping on and off\n\nNow we'll attach a {{#crossLink \"Modes\"}}{{/crossLink}} to the {{#crossLink \"GameObject\"}}{{/crossLink}}, so that we can\nenable or disable clipping of it:\n\n```` javascript\n// Create the Modes\nvar modes = new XEO.Modes(scene, {\n   clipping: true\n});\n\n// Attach our Object to the Modes\nobject.modes = modes;\n\n// Disable clipping for the Object\nmodes.clipping = false;\n````",
            "submodule": "clipping",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Clips in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clips.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "clips",
                            "description": "Array containing either IDs or instances of\n{{#crossLink \"Clip\"}}Clip{{/crossLink}} components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "Array(String)|Array(XEO.Clip)",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Configs": {
            "name": "Configs",
            "shortname": "Configs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/configs/configs.js",
            "line": 1,
            "description": "A **Configs** holds configuration properties for the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Configs on itself as a read-only property.</li>\n<li>Config property values are set on a Configs using its {{#crossLink \"Configs/set:method\"}}{{/crossLink}} method,\nand changes to properties may be subscribed to using {{#crossLink \"Component/on:method\"}}{{/crossLink}}.</li>\n<li>You can define your own properties in a Configs, but take care not to clobber the native properties used by\nxeoEngine (see table below).</li>\n</ul>\n\n<img src=\"../../../assets/images/Configs.png\"></img>\n\n## Native xeoEngine config properties\n\nDon't use the following names for your own Configs properties, because these are already used by xeoEngine:\n\n| Name  | Description  |\n|---|---|\n| TODO  | TODO  |\n| TODO  | TODO  |\n\n\n## Example\n\nIn this example, we're subscribing to change events for a {{#crossLink \"Scene\"}}Scene's{{/crossLink}} \"foo\" configuration property, then updating that\nproperty, which fires a change event.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar configs = scene.configs;\n\n// Subscribe to change of a Configs property.\n// The subscriber is also immediately notified of the current value via the callback.\nconfigs.on(\"foo\", function(value) {\n   console.log(\"foo = \" + value);\n});\n\n// Create and set a Configs property, firing our change handler:\nconfigs.set(\"foo\", \"Hello!\");\n\n// Read the current value of a Configs property.\n// Normally we would asynchronously subscribe with #on though, to be sure that\n// we're getting the latest changes to the property.\nvar bar = configs.props[\"bar\"];\n````",
            "submodule": "configs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene - creates this component in the default scene when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Config values.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "CameraControl": {
            "name": "CameraControl",
            "shortname": "CameraControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/cameraControl.js",
            "line": 1,
            "description": "A **CameraControl** pans, rotates and zooms a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse and keyboard,\nas well as switches it between preset left, right, anterior, posterior, superior and inferior views.\n\nA CameraControl is comprised of the following control components, which each handle an aspect of interaction:\n\n<ul>\n<li>panning - {{#crossLink \"KeyboardPanCamera\"}}{{/crossLink}} and {{#crossLink \"MousePanCamera\"}}{{/crossLink}}</li>\n<li>rotation - {{#crossLink \"KeyboardRotateCamera\"}}{{/crossLink}} and {{#crossLink \"MouseRotateCamera\"}}{{/crossLink}}</li>\n<li>zooming - {{#crossLink \"KeyboardZoomCamera\"}}{{/crossLink}} and {{#crossLink \"MouseZoomCamera\"}}{{/crossLink}}</li>\n<li>switching preset views - {{#crossLink \"KeyboardAxisCamera\"}}{{/crossLink}}</li>\n<li>picking - {{#crossLink \"MousePickObject\"}}{{/crossLink}}</li>\n<li>camera flight animation - {{#crossLink \"CameraFlight\"}}{{/crossLink}}</li>\n</ul>\n\nA CameraControl provides the controls as read-only properties, in case you need to configure or deactivate\nthem individually.\n\n<ul>\n<li>Activating or deactivating the CameraControl will activate/deactivate all the controls in unison.</li>\n<li>Attaching a different {{#crossLink \"Camera\"}}{{/crossLink}} to the CameraControl will also attach that\n{{#crossLink \"Camera\"}}{{/crossLink}} to all the controls.</li>\n<li>The controls are not intended to be attached to a different {{#crossLink \"Camera\"}}{{/crossLink}} than the owner CameraControl.</li>\n<li>The CameraControl manages the lifecycles of the controls, destroying them when the CameraControl is destroyed.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar cameraControl = new XEO.CameraControl(scene, {\n\n       camera: camera,\n\n       // \"First person\" mode rotates look about eye.\n       // By default however, we orbit eye about look.\n       firstPerson: false\n   });\n\n// Reduce the sensitivity of mouse rotation\ncameraControl.mouseRotate.sensitivity = 0.7;\n\n// Deactivate switching between preset views\ncameraControl.axisCamera.active = false;\n\n// Create a GameObject\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraControl.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraControl. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this CameraControl is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "firstPerson",
                    "description": "Whether or not this CameraControl is in \"first person\" mode.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "extends": "Component"
        },
        "KeyboardAxisCamera": {
            "name": "KeyboardAxisCamera",
            "shortname": "KeyboardAxisCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 1,
            "description": "A **KeyboardAxisCamera** switches a {{#crossLink \"Camera\"}}{{/crossLink}} between preset left, right, anterior,\nposterior, superior and inferior views using the keyboard.\n\n## Overview\n\n<ul>\n<li>A KeyboardAxisCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the target {{#crossLink \"Camera\"}}{{/crossLink}}.\n</ul>\n\nBy default the views are selected by the following keys:\n\n<ul>\n<li>'1' - left side, viewing center from along -X axis</li>\n<li>'2' - right side, viewing center from along +X axis</li>\n<li>'3' - anterior, viewing center from along -Z axis</li>\n<li>'4' - posterior, viewing center from along +Z axis</li>\n<li>'5' - superior, viewing center from along -Y axis</li>\n<li>'6' - inferior, viewing center from along +Y axis</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.KeyboardAxisCamera(scene, {\n       camera: camera\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardAxisCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this KeyboardAxisCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "KeyboardPanCamera": {
            "name": "KeyboardPanCamera",
            "shortname": "KeyboardPanCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/keyboardPanCamera.js",
            "line": 1,
            "description": "A **KeyboardPanCamera** pans a {{#crossLink \"Camera\"}}{{/crossLink}} using the W, S, A and D keys.\n\n## Overview\n\n<ul>\n<li>A KeyboardPanCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the target {{#crossLink \"Camera\"}}{{/crossLink}}.\n<li>Panning up and down involves translating the positions of the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}}\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} back and forth\nalong the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} vector.</li>\n<li>Panning forwards and backwards involves translating\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} back and forth along the\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vector.</li>\n<li>Panning left and right involves translating the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and\n{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} along the the vector perpendicular to the {{#crossLink \"Lookat/up:property\"}}{{/crossLink}}\nand {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vectors.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.KeyboardPanCamera(scene, {\n       camera: camera\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardRotateCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardPanCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "sensitivity",
                            "description": "Pan sensitivity factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this KeyboardPanCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "KeyboardRotateCamera": {
            "name": "KeyboardRotateCamera",
            "shortname": "KeyboardRotateCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 1,
            "description": "A **KeyboardRotateCamera** orbits a {{#crossLink \"Camera\"}}{{/crossLink}} about its point-of-interest using the keyboard's arrow keys.\n\n## Overview\n\n<ul>\n<li>A KeyboardRotateCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to its target {{#crossLink \"Camera\"}}{{/crossLink}}.\n<li>The point-of-interest is the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n<li>Orbiting involves rotating the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}\nabout {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n<li>Y-axis rotation is about the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} vector.</li>\n<li>Z-axis rotation is about the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} -&gt; {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vector.</li>\n<li>X-axis rotation is about the vector perpendicular to the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nand {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} vectors.</li>\n<li>In 'first person' mode, the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nposition will orbit the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} position, otherwise the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}\nwill orbit the {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.KeyboardRotateCamera(scene, {\n\n       camera: camera,\n\n       // \"First person\" mode rotates look about eye.\n       // By default however, we orbit eye about look.\n       firstPerson: false\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardRotateCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "sensitivity",
                            "description": "Orbit sensitivity factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "firstPerson",
                            "description": "Indicates whether this KeyboardRotateCamera is in \"first person\" mode.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this MousePanCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "KeyboardZoomCamera": {
            "name": "KeyboardZoomCamera",
            "shortname": "KeyboardZoomCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 1,
            "description": "A **KeyboardZoomCamera** zooms a {{#crossLink \"Camera\"}}{{/crossLink}} using the + and - keys.\n\n## Overview\n\n<ul>\n<li>A KeyboardZoomCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the target {{#crossLink \"Camera\"}}{{/crossLink}}.\n<li>Zooming involves translating the positions of the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}}\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} back and forth\nalong the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vector.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.KeyboardZoomCamera(scene, {\n       camera: camera\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardZoomCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardZoomCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "sensitivity",
                            "description": "Zoom sensitivity factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this KeyboardZoomCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "MousePanCamera": {
            "name": "MousePanCamera",
            "shortname": "MousePanCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/mousePanCamera.js",
            "line": 1,
            "description": "A **MousePanCamera** pans a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse.\n\n## Overview\n\n<ul>\n<li>A MousePanCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the target {{#crossLink \"Camera\"}}{{/crossLink}}.\n<li>Panning is done by dragging the mouse with both the left and right buttons down.</li>\n<li>Panning up and down involves translating the positions of the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}}\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} back and forth\nalong the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} vector.</li>\n<li>Panning forwards and backwards involves translating\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} back and forth along the\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vector.</li>\n<li>Panning left and right involves translating the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and\n{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} along the the vector perpendicular to the {{#crossLink \"Lookat/up:property\"}}{{/crossLink}}\nand {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vectors.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.MousePanCamera(scene, {\n       camera: camera\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MousePanCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MousePanCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "sensitivity",
                            "description": "Pan sensitivity factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this MousePanCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "MousePickObject": {
            "name": "MousePickObject",
            "shortname": "MousePickObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/mousePickObject.js",
            "line": 1,
            "description": "A **MousePickObject** picks {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} with mouse clicks.\n\n## Overview\n\nTODO\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene({ element: \"myDiv\" });\n\n// Create some GameObjects\n\nvar object1 = new XEO.GameObject(scene, {\n   id: \"object1\",\n   transform: new XEO.Translate(scene, { xyz: [-5, 0, 0] })\n});\n\nvar object2 = new XEO.GameObject(scene, {\n   id: \"object2\",\n   transform: new XEO.Translate(scene, { xyz: [0, 0, 0] })\n});\n\nvar object3 = new XEO.GameObject(scene, {\n   id: \"object3\",\n   transform: new XEO.Translate(scene, { xyz: [5, 0, 0] })\n});\n\n// Create a MousePickObject\nvar mousePickObject = new XEO.MousePickObject(scene, {\n\n   // We want the 3D World-space coordinates\n   // of each location we pick\n\n   rayPick: true\n});\n\n// Handle picked GameObjects\nmousePickObject.on(\"pick\", function(e) {\n   var object = e.object;\n   var canvasPos = e.canvasPos;\n   var primitiveIndex = e.primitiveIndex;\n});\n\n// Handle nothing picked\nmousePickObject.on(\"nopick\", function(e) {\n   var canvasPos = e.canvasPos;\n});\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MousePickObject.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Indicates whether or not this MousePickObject is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "rayPick",
                    "description": "Indicates whether this MousePickObject will find the 3D ray intersection whenever it picks a\n{{#crossLink \"GameObject\"}}{{/crossLink}}.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "extends": "Component"
        },
        "MouseRotateCamera": {
            "name": "MouseRotateCamera",
            "shortname": "MouseRotateCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/mouseRotateCamera.js",
            "line": 1,
            "description": "A **MouseRotateCamera** orbits a {{#crossLink \"Camera\"}}{{/crossLink}} about its point-of-interest using the mouse.\n\n## Overview\n\n<ul>\n<li>A MouseRotateCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the target {{#crossLink \"Camera\"}}{{/crossLink}}.\n<li>The point-of-interest is the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n<li>Orbiting involves rotating the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}\nabout {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n<li>Y-axis rotation is about the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} vector.</li>\n<li>Z-axis rotation is about the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} -&gt; {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vector.</li>\n<li>X-axis rotation is about the vector perpendicular to the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nand {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} vectors.</li>\n<li>In 'first person' mode, the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nposition will orbit the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} position, otherwise the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}\nwill orbit the {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.MouseRotateCamera(scene, {\n\n       camera: camera,\n\n       // \"First person\" mode rotates look about eye.\n       // By default however, we orbit eye about look.\n       firstPerson: false\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent Scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MouseRotateCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MouseRotateCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "sensitivity",
                            "description": "Mouse drag sensitivity factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "firstPerson",
                            "description": "Indicates whether this MouseRotateCamera is in \"first person\" mode.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this MouseRotateCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "MouseZoomCamera": {
            "name": "MouseZoomCamera",
            "shortname": "MouseZoomCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/controls/mouseZoomCamera.js",
            "line": 1,
            "description": "A **MouseZoomCamera** zooms a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse wheel.\n\n## Overview\n\n<ul>\n<li>A MouseZoomCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to the target {{#crossLink \"Camera\"}}{{/crossLink}}.\n<li>Zooming involves translating the positions of the {{#crossLink \"Lookat\"}}Lookat's{{/crossLink}}\n{{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} back and forth\nalong the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}-&gt;{{#crossLink \"Lookat/look:property\"}}{{/crossLink}} vector.</li>\n</ul>\n\n## Example\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar camera = new XEO.Camera(scene);\n\nvar control = new XEO.MouseZoomCamera(scene, {\n       camera: camera\n   });\n\nvar object = new XEO.GameObject(scene);\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MouseZoomCamera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MouseZoomCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "sensitivity",
                            "description": "Zoom sensitivity factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this MouseZoomCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Visibility": {
            "name": "Visibility",
            "shortname": "Visibility",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/culling/visibility.js",
            "line": 1,
            "description": "A **Visibility** toggles the visibility of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>A Visibility may be shared among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to toggle\ntheir visibility as a group.</li>\n</ul>\n\n<img src=\"../../../assets/images/Visibility.png\"></img>\n\n## Example\n\nThis example creates a Visibility that toggles the visibility of\ntwo {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Create a Visibility\nvar visibility = new XEO.Visibility(scene, {\n   visible: true\n});\n\n// Create two GameObjects whose visibility will be controlled by our Visibility\n\nvar object1 = new XEO.GameObject(scene, {\n   visibility: visibility\n});\n\nvar object2 = new XEO.GameObject(scene, {\n   visibility: visibility\n});\n\n// Subscribe to change on the Visibility's \"visible\" property\nvar handle = visibility.on(\"visible\", function(value) {\n   //...\n});\n\n// Hide our GameObjects by flipping the Visibility's \"visible\" property,\n// which will also call our handler\nvisibility.visible = false;\n\n// Unsubscribe from the Visibility again\nvisibility.off(handle);\n\n// When we destroy our Visibility, the GameObjects will fall back\n// on the Scene's default Visibility instance\nvisibility.destroy();\n````",
            "submodule": "culling",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Visibility in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Visibility.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "visible",
                            "description": "Flag which controls visibility of the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "CubicBezierCurve": {
            "name": "CubicBezierCurve",
            "shortname": "CubicBezierCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/curves/cubicBezierCurve.js",
            "line": 1,
            "description": "A **CubicBezierCurve** extends {{#crossLink \"Curve\"}}{{/crossLink}} to provide a cubic Bezier curve.\n\n## Overview\n\n<img style=\"border:1px solid;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/B%C3%A9zier_3_big.gif/240px-B%C3%A9zier_3_big.gif\"/>\n\n*[Cubic Bezier Curve from WikiPedia](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)*\n\n<ul>\n   <li>To build a complex path, you can combine an unlimited combination of CubicBezierCurves,\n{{#crossLink \"QuadraticBezierCurve\"}}QuadraticBezierCurves{{/crossLink}} and {{#crossLink \"SplineCurve\"}}SplineCurves{{/crossLink}}\nwithin a {{#crossLink \"Path\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example\n\n````javascript\n\nvar curve = new XEO.CubicBezierCurve({\n       v0: [-10, 0, 0],\n       v1: [-5, 15, 0],\n       v2: [20, 15, 0],\n       v3: [10, 0, 0]\n   });\n\ncurve.scene.on(\"tick\", function(e) {\n\n       curve.t = (e.time - e.startTime) * 0.01;\n\n       var point = curve.point;\n       var tangent = curve.tangent;\n\n       this.log(\"t=\" + curve.t + \", point=\" +\n           JSON.stringify(point) + \", tangent=\" +\n               JSON.stringify(tangent));\n   });\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CubicBezierCurve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "v0",
                            "description": "The starting point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v1",
                            "description": "The first control point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v2",
                            "description": "The middle control point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v3",
                            "description": "The ending point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this CubicBezierCurve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "Curve": {
            "name": "Curve",
            "shortname": "Curve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/curves/curve.js",
            "line": 1,
            "description": "A **Curve** is the abstract base class for various other curve classes.\n\n## Overview\n\nThe Curve is subclassed by the following component types:\n\n<ul>\n   <li>{{#crossLink \"SplineCurve\"}}{{/crossLink}}</li>\n   <li>{{#crossLink \"CubicBezierCurve\"}}{{/crossLink}}</li>\n   <li>{{#crossLink \"QuadraticBezierCurve\"}}{{/crossLink}}</li>\n   <li>{{#crossLink \"Path\"}}{{/crossLink}}</li>\n</u>",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Curve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "t",
                            "description": "Current position on this Curve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Path": {
            "name": "Path",
            "shortname": "Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/curves/path.js",
            "line": 1,
            "description": "A **Path** is a complex curved path constructed from various types of sub-curves.\n\n## Overview\n\nA Path can be constructed from the following {{#crossLink \"Curve\"}}{{/crossLink}} sub-classes:\n\n<ul>\n   <li>{{#crossLink \"SplineCurve\"}}{{/crossLink}}</li>\n   <li>{{#crossLink \"CubicBezierCurve\"}}{{/crossLink}}</li>\n   <li>{{#crossLink \"QuadraticBezierCurve\"}}{{/crossLink}}</li>\n</ul>\n\n## Example\n\n````javascript\n\nvar path = new XEO.Path({\n       curves: [\n           new XEO.CubicBezierCurve({\n               v0: [-10, 0, 0],\n               v1: [-5, 15, 0],\n               v2: [20, 15, 0],\n               v3: [10, 0, 0]\n           }),\n           new XEO.QuadraticBezierCurve({\n               v0: [-10, 0, 0],\n               v1: [20, 15, 0],\n               v2: [10, 0, 0]\n           }),\n           new XEO.SplineCurve({\n               points: [\n                   [-10, 0, 0],\n                   [-5, 15, 0],\n                   [20, 15, 0],\n                   [10, 0, 0]\n               ]\n           })\n       ]\n   });\n\npath.scene.on(\"tick\", function(e) {\n\n       path.t = (e.time - e.startTime) * 0.01;\n\n       var point = path.point;\n       var tangent = path.tangent;\n\n       this.log(\"t=\" + path.t + \", point=\" +\n           JSON.stringify(point) + \", tangent=\" +\n               JSON.stringify(tangent));\n   });\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Fly configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Path.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "curves",
                            "description": "IDs or instances of }{{/crossLink}} subtypes to add to this Path.",
                            "type": "#crossLink \"Curve\"",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this Path, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "QuadraticBezierCurve": {
            "name": "QuadraticBezierCurve",
            "shortname": "QuadraticBezierCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 1,
            "description": "A **QuadraticBezierCurve** extends {{#crossLink \"Curve\"}}{{/crossLink}} to provide a cubic Bezier curve.\n\n## Overview\n\n<img style=\"border:1px solid;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/B%C3%A9zier_2_big.gif/240px-B%C3%A9zier_2_big.gif\"/>\n\n*[Quadratic Bezier Curve from WikiPedia](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)*\n\n<ul>\n   <li>To build a complex path, you can combine an unlimited combination of QuadraticBezierCurves,\n{{#crossLink \"CubicBezierCurve\"}}CubicBezierCurves{{/crossLink}} and {{#crossLink \"SplineCurve\"}}SplineCurves{{/crossLink}}\nwithin a {{#crossLink \"Path\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example 1\n\nIn our first example, we'll define a QuadraticBezierCurve and update it on each scene tick,\nwhile logging the curve's changing properties.\n\n````javascript\nvar curve = new XEO.QuadraticBezierCurve({\n       v0: [-10, 0, 0],\n       v1: [20, 15, 0],\n       v2: [10, 0, 0]\n   });\n\ncurve.scene.on(\"tick\", function(e) {\n\n       curve.t = (e.time - e.startTime) * 0.01;\n\n       var point = curve.point;\n       var tangent = curve.tangent;\n\n       this.log(\"t=\" + curve.t + \", point=\" +\n           JSON.stringify(point) + \", tangent=\" +\n               JSON.stringify(tangent));\n   });\n````\n\n## Example 2\n\nIn the next example, we'll create a {{#crossLink \"GameObject\"}}{{/crossLink}} with a\n{{#crossLink \"PhongMaterial\"}}{{/crossLink}} whose diffuse color is bound to the\ninterpolated {{#crossLink \"QuadraticBezierCurve/point:property\"}}{{/crossLink}} property on the QuadraticBezierCurve.\n\nThen we'll animate the QuadraticBezierCurve's {{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}} property\nto update the diffuse color.\n\n````javascript\nvar curve = new XEO.QuadraticBezierCurve({\n       v0: [1, 0, 0],\n       v1: [0, 1, 0],\n       v2: [0, 0, 1]\n   });\n\n// Create a GameObject with a PhongMaterial\nvar material = new XEO.PhongMaterial({\n       diffuse: [0, 0, 0]\n   });\n\nvar object = new XEO.GameObject({\n       material: material\n   });\n\n// Bind the PhongMaterial diffuse color\n// to the QuadraticBezierCurve\ncurve.on(\"t\", function() {\n       material.diffuse = curve.point;\n   });\n\n// Animate the QuadraticBezierCurve, which in turn\n// updates the PhongMaterial diffuse color\nvar tick = object.scene.on(\"tick\", function (e) {\n       curve.t = (e.time - e.startTime) * 0.00005;\n  });\n````\n\n## Example 3\n\nIn the previous two examples, we relied on our QuadraticBezierCurves to remember their progress in their\n{{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}} and {{#crossLink \"QuadraticBezierCurve/point:property\"}}{{/crossLink}}\nproperties, which is useful when we want to wire components together into reactive event-driven networks, as we did with the\nPhongMaterial in the previous example.\n\nAs an alternative, we can instead sample the point and vector at a given *t* via calls\nto the QuadraticBezierCurve's {{#crossLink \"QuadraticBezierCurve/getPoint:method\"}}{{/crossLink}} and\n{{#crossLink \"Curve/getTangent:method\"}}{{/crossLink}} methods:\n\n````javascript\nvar curve = new XEO.QuadraticBezierCurve({\n       v0: [-10, 0, 0],\n       v1: [20, 15, 0],\n       v2: [10, 0, 0]\n   });\n\ncurve.scene.on(\"tick\", function(e) {\n\n       var t = (e.time - e.startTime) * 0.01;\n\n       var point = curve.getPoint(t);\n       var tangent = curve.getTangent(t);\n\n       this.log(\"t=\" + t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n   });\n````\n\n## Example 4\n\nWhen we want to build a {{#crossLink \"Geometry\"}}{{/crossLink}} from a QuadraticBezierCurve, we can sample points\nalong the curve using its {{#crossLink \"Curve/getPoints:method\"}}{{/crossLink}} method, as shown below.\n\nNote that we need to flatten the points array for consumption by the {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n````javascript\nvar curve = new XEO.QuadraticBezierCurve({\n       v0: [-10, 0, 0],\n       v1: [20, 15, 0],\n       v2: [10, 0, 0]\n   });\n\n// Geometry which creates a line-strip through fifty\n// points sampled at equidistant positions on our QuadraticBezierCurve\n\nvar geometry = new XEO.Geometry({\n   positions: XEO.math.flatten(curve.getPoints(50))\n});\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this QuadraticBezierCurve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "v0",
                            "description": "The starting point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v1",
                            "description": "The middle control point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v2",
                            "description": "The end point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this QuadraticBezierCurve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "SplineCurve": {
            "name": "SplineCurve",
            "shortname": "SplineCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/curves/splineCurve.js",
            "line": 1,
            "description": "A **SplineCurve** extends {{#crossLink \"Curve\"}}{{/crossLink}} to provide a spline curve.\n\n## Overview\n\n<img style=\"border:1px solid; background: white;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Quadratic_spline_six_segments.svg/200px-Quadratic_spline_six_segments.svg.png\"/>\n\n*[Spline Curve from Wikipedia](https://en.wikipedia.org/wiki/Spline_(mathematics))*\n\n<ul>\n   <li>To build a complex path, you can combine an unlimited combination of SplineCurves,\n{{#crossLink \"CubicBezierCurve\"}}CubicBezierCurves{{/crossLink}} and {{#crossLink \"QuadraticBezierCurve\"}}QuadraticBezierCurves{{/crossLink}}\nwithin a {{#crossLink \"Path\"}}{{/crossLink}}.</li>\n</ul>\n\n\n## Example 1\n\nCreate a SplineCurve, subscribe to updates on its {{#crossLink \"SplineCurve/point:property\"}}{{/crossLink}} and\n{{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} properties, then vary its {{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}}\nproperty over time:\n\n````javascript\n\nvar curve = new XEO.SplineCurve({\n       points: [\n           [-10, 0, 0],\n           [-5, 15, 0],\n           [20, 15, 0],\n           [10, 0, 0]\n       ]\n   });\n\ncurve.scene.on(\"tick\", function(e) {\n\n       curve.t = (e.time - e.startTime) * 0.01;\n\n       var point = curve.point;\n       var tangent = curve.tangent;\n\n       this.log(\"t=\" + curve.t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n   });\n````\n\n## Example 2\n\nAlternatively, we can randomly sample the point and vector at a given **t** with calls\nto the SplineCurve's {{#crossLink \"SplineCurve/getPoint:method\"}}{{/crossLink}} and\n{{#crossLink \"Curve/getTangent:method\"}}{{/crossLink}} methods:\n\n````javascript\nvar curve = new XEO.SplineCurve({\n       points: [\n           [-10, 0, 0],\n           [-5, 15, 0],\n           [20, 15, 0],\n           [10, 0, 0]\n       ]\n   });\n\ncurve.scene.on(\"tick\", function(e) {\n\n       var t = (e.time - e.startTime) * 0.01;\n\n       var point = curve.getPoint(t);\n       var tangent = curve.getTangent(t);\n\n       this.log(\"t=\" + t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n   });\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this SplineCurve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "points",
                            "description": "Control points on this SplineCurve.",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this SplineCurve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "BoundaryGeometry": {
            "name": "BoundaryGeometry",
            "shortname": "BoundaryGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/boundaryGeometry.js",
            "line": 1,
            "description": "A **BoundaryGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that shows the object-aligned wireframe bounding box (OBB)\nof a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this BoundaryGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoundaryGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "boundary",
                            "description": "ID or instance of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}",
                            "type": "Boundary3D",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "BoxGeometry": {
            "name": "BoxGeometry",
            "shortname": "BoxGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/boxGeometry.js",
            "line": 1,
            "description": "A **BoxGeometry** defines box-shaped geometry for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this BoxGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "xSize",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "ySize",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "zSize",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Cylinder": {
            "name": "Cylinder",
            "shortname": "Cylinder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/cylinderGeometry.js",
            "line": 1,
            "description": "A **Cylinder** defines cylindrical geometry for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Cylinder in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Cylinder.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "radiusTop",
                            "description": "Radius of top.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "radiusBottom",
                            "description": "Radius of bottom.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "height",
                            "description": "Height.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "radialSegments",
                            "description": "Number of segments around the Cylinder.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60"
                        },
                        {
                            "name": "heightSegments",
                            "description": "Number of vertical segments.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "openEnded",
                            "description": "Whether or not the Cylinder has solid caps on the ends.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Geometry": {
            "name": "Geometry",
            "shortname": "Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/geometry.js",
            "line": 1,
            "description": "A **Geometry** defines the geometric shape of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Contents\n\n<ul>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#defaultShape\">Default box shape</a></li>\n<li><a href=\"#sceneDefault\">Scene's default Geometry</a></li>\n<li><a href=\"#sharing\">Sharing among GameObjects</a></li>\n<li><a href=\"#triangles\">Defining a triangle mesh</a></li>\n<li><a href=\"#editing\">Editing Geometry</a></li>\n<li><a href=\"#backfaces\">Toggling backfaces on or off</li>\n<li><a href=\"#frontfaces\">Setting frontface vertex winding</li>\n</ul>\n\n## <a name=\"overview\">Overview</a>\n\n<ul>\n<li>Like everything in xeoEngine, all properties on a Geometry are dynamically editable.</li>\n<li>A Geometry's {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} type can be 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' or 'triangle-fan'\".</li>\n<li>Depending on the {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} type, a Geometry can have {{#crossLink \"Geometry/positions:property\"}}vertex positions{{/crossLink}},\n{{#crossLink \"Geometry/colors:property\"}}vertex colors{{/crossLink}}, {{#crossLink \"Geometry/uv:property\"}}UV coordinates{{/crossLink}},\n{{#crossLink \"Geometry/normals:property\"}}normal vectors{{/crossLink}}, as well as {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}},\nwhich specify how the vertices connect together to form the primitives.</li>\n<li>When no shape is specified (ie. no primitive type, vertex arrays and indices), a Geometry will default to a 2x2x2 box\nmade of triangles, with UV coordinates, vertex colors and normals. This default is used for most of the examples in this documentation.</li>\n<li>A {{#crossLink \"Scene\"}}{{/crossLink}} provides such a box as its default {{#crossLink \"Scene/geometry:property\"}}{{/crossLink}},\nfor {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to fall back on, when they are not explicitly attached to a Geometry.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Geometries create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Geometry.png\"></img>\n\n## <a name=\"defaultShape\">Default box shape</a>\n\nIf you create a Geometry with no specified shape, it will default to a 2x2x2 box defined as a triangle mesh.\n\n```` javascript\nvar geometry = new XEO.Geometry(scene); // 2x2x2 box\n\nvar object1 = new XEO.GameObject(scene, {\n   geometry: geometry\n});\n````\n\n## <a name=\"sceneDefault\">Scene's default Geometry</a>\n\nIf you create a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} with no Geometry, it will inherit its {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/geometry:property\"}}{{/crossLink}}, which is also a 2x2x2 box:\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar object1 = new XEO.GameObject(scene);\n````\n\n## <a name=\"sharing\">Sharing among GameObjects</a>\n\nxeoEngine components can be shared among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. For components like\nGeometry and {{#crossLink \"Texture\"}}{{/crossLink}}, this can provide significant memory\nand performance savings. To render the example below, xeoEngine will issue two draw WebGL calls, one for\neach {{#crossLink \"GameObject\"}}{{/crossLink}}, but will only need to bind the Geometry's arrays once on WebGL.\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar geometry = new XEO.Geometry(scene); // 2x2x2 box by default\n\n// Create two GameObjects which share our Geometry\n\nvar object1 = new XEO.GameObject(scene, {\n   geometry: geometry\n});\n\n// Offset the second Object slightly on the World-space\n// X-axis using a Translate modelling transform\n\nvar translate = new XEO.Translate(scene, {\n   xyz: [5, 0, 0\n});\n\nvar object2 = new XEO.GameObject(scene, {\n   geometry: geometry,\n   transform: translate\n});\n````\n\n## <a name=\"triangles\">Defining a triangle mesh</a>\n\nFinally, we'll create a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} with a Geometry that we've **explicitly**\nconfigured as a 2x2x2 box:\n\n```` javascript\nvar scene = new XEO.Scene();\n\n// Create a 2x2x2 box centered at the World-space origin\nvar geometry = new XEO.Geometry(scene, {\n\n       // Supported primitives are 'points', 'lines', 'line-loop', 'line-strip', 'triangles',\n       // 'triangle-strip' and 'triangle-fan'.primitive: \"triangles\",\n       primitive: \"triangles\",\n\n       // Vertex positions\n       positions : [\n\n           // Front face\n           -1.0, -1.0, 1.0,\n           1.0, -1.0, 1.0,\n           1.0, 1.0, 1.0,\n           -1.0, 1.0, 1.0,\n\n           // Back face\n           -1.0, -1.0, -1.0,\n           -1.0, 1.0, -1.0,\n            1.0, 1.0, -1.0,\n           1.0, -1.0, -1.0,\n\n           // Top face\n           -1.0, 1.0, -1.0,\n           -1.0, 1.0, 1.0,\n           1.0, 1.0, 1.0,\n           1.0, 1.0, -1.0,\n\n           // Bottom face\n           -1.0, -1.0, -1.0,\n           1.0, -1.0, -1.0,\n           1.0, -1.0, 1.0,\n           -1.0, -1.0, 1.0,\n\n           // Right face\n           1.0, -1.0, -1.0,\n           1.0, 1.0, -1.0,\n           1.0, 1.0, 1.0,\n           1.0, -1.0, 1.0,\n\n           // Left face\n           -1.0, -1.0, -1.0,\n           -1.0, -1.0, 1.0,\n           -1.0, 1.0, 1.0,\n           -1.0, 1.0, -1.0\n       ],\n\n       // Vertex colors\n       colors: [\n           1.0,  1.0,  1.0,  1.0,    // Front face: white\n           1.0,  0.0,  0.0,  1.0,    // Back face: red\n           0.0,  1.0,  0.0,  1.0,    // Top face: green\n           0.0,  0.0,  1.0,  1.0,    // Bottom face: blue\n           1.0,  1.0,  0.0,  1.0,    // Right face: yellow\n           1.0,  0.0,  1.0,  1.0     // Left face: purple\n       ],\n\n       // Vertex normals\n       normals: [\n           0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n           1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n           0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n           -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\n           0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0,\n           0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1\n       ],\n\n       // UV coordinates\n       uv: [\n           1, 1, 0, 1, 0, 0, 1, 0,\n           0, 1, 0, 0, 1, 0, 1, 1,\n           1, 0, 1, 1, 0, 1, 0, 0,\n           1, 1, 0, 1, 0, 0, 1, 0,\n           0, 0, 1, 0, 1, 1, 0, 1,\n           0, 0, 1, 0, 1, 1, 0, 1\n       ],\n\n       // Triangle indices\n       indices: [\n           0,  1,  2,      0,  2,  3,    // front\n           4,  5,  6,      4,  6,  7,    // back\n           8,  9,  10,     8,  10, 11,   // top\n           12, 13, 14,     12, 14, 15,   // bottom\n           16, 17, 18,     16, 18, 19,   // right\n           20, 21, 22,     20, 22, 23    // left\n       ]\n});\n\nvar object = new XEO.GameObject(scene, {\n   geometry: geometry\n});\n````\n## <a name=\"editing\">Editing Geometry</a>\n\nRecall that everything in xeoEngine is dynamically editable, including Geometry. Let's remove the front and back faces\nfrom our triangle mesh Geometry by updating its **indices** array:\n\n````javascript\ngeometry2.indices = [\n8,  9,  10,     8,  10, 11,   // top\n12, 13, 14,     12, 14, 15,   // bottom\n16, 17, 18,     16, 18, 19,   // right\n20, 21, 22,     20, 22, 23    // left\n];\n````\n\nNow let's make it wireframe by changing its primitive type from **faces** to **lines**:\n\n````javascript\ngeometry2.primitive = \"lines\";\n````\n\n## <a name=\"backfaces\">Toggling backfaces on or off</a>\n\nNow we'll attach a {{#crossLink \"Modes\"}}{{/crossLink}} to that last {{#crossLink \"GameObject\"}}{{/crossLink}}, so that\nwe can show or hide its {{#crossLink \"Geometry\"}}Geometry's{{/crossLink}} backfaces:\n\n```` javascript\nvar modes = new XEO.Modes(scene);\n\nobject.modes = modes;\n\n// Hide backfaces\n\nmodes.backfaces = false;\n\n````\n\n## <a name=\"frontfaces\">Setting frontface vertex winding</a>\n\nThe <a href=\"https://www.opengl.org/wiki/Face_Culling\" target=\"other\">vertex winding order</a> of each face determines\nwhether it's a frontface or a backface.\n\nBy default, xeoEngine considers faces to be frontfaces if they have a counter-clockwise\nwinding order, but we can change that by setting the {{#crossLink \"Modes\"}}{{/crossLink}}\n{{#crossLink \"Modes/frontface:property\"}}{{/crossLink}} property, like so:\n\n```` javascript\n// Set the winding order for frontfaces to clockwise\n// Options are \"ccw\" for counter-clockwise or \"cw\" for clockwise\n\nobject.frontface = \"cw\";\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Geometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "positions",
                            "description": "Positions array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "normals",
                            "description": "Normals array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv",
                            "description": "UVs array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "colors",
                            "description": "Vertex colors.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "tangents",
                            "description": "Vertex tangents.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "indices",
                            "description": "Indices array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "autoNormals",
                            "description": "Set true to automatically generate normal vectors from positions and indices.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "LatheGeometry": {
            "name": "LatheGeometry",
            "shortname": "LatheGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/latheGeometry.js",
            "line": 1,
            "description": "A **LatheGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that's defined as the revolution of a profile about an exis.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this LatheGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this LatheGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "points",
                            "description": "Profile points.",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "segments",
                            "description": "Number of revolution segments.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "4"
                        },
                        {
                            "name": "phiStart",
                            "description": "Angle in degrees at which revolution starts.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "phiLength",
                            "description": "Length of revolution in degrees.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "360"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "PathGeometry": {
            "name": "PathGeometry",
            "shortname": "PathGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "geometry",
            "namespace": "",
            "file": "src/geometry/pathGeometry.js",
            "line": 1,
            "description": "A path geometry.",
            "extends": "Geometry"
        },
        "PlaneGeometry": {
            "name": "PlaneGeometry",
            "shortname": "PlaneGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/planeGeometry.js",
            "line": 1,
            "description": "A **PlaneGeometry** defines a plane geometry for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this PlaneGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PlaneGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "xSize",
                            "description": "Dimension on the X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "ySize",
                            "description": "Dimension on the Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "xSegments",
                            "description": "Number of segments on the X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "ySegments",
                            "description": "Number of segments on the Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "SphereGeometry": {
            "name": "SphereGeometry",
            "shortname": "SphereGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/sphereGeometry.js",
            "line": 1,
            "description": "A **SphereGeometry** defines spherical geometry for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this SphereGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this SphereGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "radius",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "heightSegments",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "24"
                        },
                        {
                            "name": "widthSegments",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "18"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "TorusGeometry": {
            "name": "TorusGeometry",
            "shortname": "TorusGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/geometry/torusGeometry.js",
            "line": 1,
            "description": "A **TorusGeometry** defines torus-shaped geometry for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this TorusGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this TorusGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "radius",
                            "description": "The overall radius of the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "tube",
                            "description": "The tube radius of the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.3"
                        },
                        {
                            "name": "radialSegments",
                            "description": "The number of radial segments that make up the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "32"
                        },
                        {
                            "name": "tubeSegments",
                            "description": "The number of tubular segments that make up the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "24"
                        },
                        {
                            "name": "arc",
                            "description": "The length of the TorusGeometry's arc in degrees, where 360 is closed torus.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "Math.PI / 2.0"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Group": {
            "name": "Group",
            "shortname": "Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/grouping/group.js",
            "line": 1,
            "description": "A **Group** is a collection of {{#crossLink \"Component\"}}Components{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Supports addition and removal of {{#crossLink \"Component\"}}Components{{/crossLink}} by instance, ID or type.</li>\n</ul>\n\n<img src=\"../../../assets/images/Group.png\"></img>\n\n## Example\n\nIn this example we have:\n\n<ul>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}},\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} (that is the default box shape),\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above,</li>\n<li>two {{#crossLink \"Group\"}}Groups{{/crossLink}}, each containing a subset of all our components.</li>\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.PhongMaterial(scene, {\n    id: \"myMaterial\",\n    diffuse: [0.5, 0.5, 0.0]\n});\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject = new XEO.GameObject(scene, {\n   id: \"myObject\",\n   material: material,\n   geometry: geometry\n});\n\n// Our first group contains the Material, added by ID,\n// plus the Geometry and GameObject, both added by instance.\n\nvar group1 = new XEO.Group(scene, { // Initialize with three components\n   components: [\n       \"myMaterial\",\n       geometry,\n       gameObject\n   ]\n});\n\n// Our second Group includes the geometry, added by instance,\n// and the GameObject, added by type. If there were more than\n// one GameObject in the scene, then that type would ensure\n// that all the GameObjects were in the Group.\n\nvar group2 = new XEO.Group(scene);\n\ngroup2.add([  // Add two components\ngeometry,\n\"XEO.GameObject\",\n]);\n\n// We can iterate over the components in a Group like so:\n\ngroup1.iterate(\nfunction(component) {\n       //..\n   });\n\n// And remove components from a Group\n// by instance, ID or type:\n\ngroup1.remove(\"myMaterial\"); // Remove one component by ID\ngroup1.remove([geometry, gameObject]); // Remove two components by instance\n\ngroup2.remove(\"XEO.Geometry\"); // Remove all Geometries\n````\n\nTODO",
            "submodule": "grouping",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Group.",
                            "type": "String:Component",
                            "optional": true
                        },
                        {
                            "name": "components",
                            "description": "} Array of {{#crossLink \"Component\"}}{{/crossLink}} IDs or instances.",
                            "type": "Array of String|Component",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/importing/model.js",
            "line": 7,
            "description": "A **Model** component loads content from a <a href=\"https://github.com/KhronosGroup/glTF\" target = \"_other\">glTF</a> file.\n\n<ul><li>A Model component begins loading content into its {{#crossLink \"Scene\"}}{{/crossLink}} as soon as it's {{#crossLink \"Model/src:property\"}}{{/crossLink}}\nproperty is set to a file path.</li>\n<li>A Model keeps all the scene components it has loaded in a {{#crossLink \"Group\"}}{{/crossLink}}.</li>\n<li>You can set a Model's {{#crossLink \"Model/src:property\"}}{{/crossLink}} property to a new file path at any time, causing the Model\nto load components from the new file path (after destroying any components that it had loaded from the previous file path).</li>\n</ul>\n\n## Example\n\nFirst, create a Model, which immediately loads a glTF model into the default {{#crossLink \"Scene\"}}{{/crossLink}}:\n\n````javascript\nvar myModel = new XEO.Model({\n   src: \"models/gltf/gearbox/gearbox_assy.gltf\"\n});\n````\n\nThe Model has a {{#crossLink \"Group\"}}{{/crossLink}} which now contains all the scene components\nit created while loading the glTF file.\n\nLet's iterate over the {{#crossLink \"Group\"}}{{/crossLink}} and log the ID of each\n{{#crossLink \"GameObject\"}}{{/crossLink}} we find in there:\n\n````javascript\nmyModel.group.iterate(function(c) {\n    if (c.type === \"XEO.GameObject\") {\n        this.log(\"GameObject found: \" + c.id);\n    }\n});\n````\n\nLet's set the Model to a different file path:\n\n````javascript\nmyModel.src = \"models/gltf/buggy/buggy.gltf\"\n````\n\nOnce loaded, the {{#crossLink \"Group\"}}{{/crossLink}} will then contain an entirely different collection of scene\ncomponents, created from this new glTF file.\n\nFinally, a Model manages the lifecycle of it's components. Therefore, destroying a Model also destroys all the\ncomponents it loaded:\n\n````javascript\nmyModel.destroy();\n````",
            "submodule": "importing",
            "extends": "Component"
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/input/input.js",
            "line": 1,
            "description": "Publishes key and mouse events that occur on the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Scene\"}}{{/crossLink}} provides an Input on itself as a read-only property.</li>\n</ul>\n\n<img src=\"../../../assets/images/Input.png\"></img>\n\n## Example\n\nIn this example, we're subscribing to some mouse and key events that will occur on\na {{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n````javascript\nvar myScene = new XEO.Scene();\n\nvar input = myScene.input;\n\n// We'll save a handle to this subscription\n// to show how to unsubscribe, further down\nvar handle = input.on(\"mousedown\", function(coords) {\n      console.log(\"Mouse down at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseup\", function(coords) {\n      console.log(\"Mouse up at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseclicked\", function(coords) {\n     console.log(\"Mouse clicked at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"dblclick\", function(coords) {\n      console.log(\"Double-click at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"keydown\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is down\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is down\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is down\");\n              break;\n\n           default:\n              console.log(\"Some other key is down\");\n      }\n    });\n\ninput.on(\"keyup\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is up\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is up\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is up\");\n              break;\n\n           default:\n              console.log(\"Some other key is up\");\n       }\n    });\n\n// TODO: ALT and CTRL keys etc\n````\n\n### Unsubscribing from Events\n\nIn the snippet above, we saved a handle to one of our event subscriptions.\n\nWe can then use that handle to unsubscribe again, like this:\n\n````javascript\ninput.off(handle);\n````",
            "submodule": "input",
            "extends": "Component"
        },
        "AmbientLight": {
            "name": "AmbientLight",
            "shortname": "AmbientLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/lighting/ambientLight.js",
            "line": 1,
            "description": "An **AmbientLight** defines an ambient light source of fixed intensity and color that affects all attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}\n equally.\n## Overview\n<ul>\n <li>AmbientLights are grouped, along with other light source types, within\n {{#crossLink \"Lights\"}}Lights{{/crossLink}} components, which are attached to {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n <li>When the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} have {{#crossLink \"PhongMaterial\"}}PhongMaterials{{/crossLink}},\n AmbientLight {{#crossLink \"AmbientLight/color:property\"}}color{{/crossLink}} is multiplied by\n {{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}}.</li>\n <li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that AmbientLights create within xeoEngine's shaders.</li>\n </ul>\n<img src=\"../../../assets/images/AmbientLight.png\"></img>\n## Example\nIn this example we have\n <ul>\n <li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}},</li>\n <li>an AmbientLight,</li>\n <li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing the AmbientLight,</li>\n <li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n <li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n </ul>\n```` javascript\n var scene = new XEO.Scene();\n\nvar material = new XEO.PhongMaterial(scene, {\n    ambient: [0.3, 0.3, 0.3],\n    diffuse: [1, 1, 1],\n    specular: [1.1, 1],\n    shininess: 30\n });\n\n// Within xeoEngine's lighting calculations, the AmbientLight's\n // ambient color will be multiplied by the Material's ambient color\nvar ambientLight = new XEO.AmbientLight(scene, {\n    color: [0.7, 0.7, 0.7]\n });\n\nvar lights = new XEO.Lights(scene, {\n    lights: [\n        ambientLight\n    ]\n });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n    lights: lights,\n    material: material,\n    geometry: geometry\n });\n````\nAs with all components, we can observe and change properties on AmbientLights like so:\n````Javascript\n // Attach a change listener to a property\n var handle = ambientLight.on(\"color\",\n function(value) {\n            // Property value has changed\n    });\n\nambientLight.color = [0.6, 0.6, 0.6]; // Fires the change listener\n\nambientLight.off(handle); // Detach the change listener\n ````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this AmbientLight within the\n default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "AmbientLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AmbientLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color of this AmbientLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "DirLight": {
            "name": "DirLight",
            "shortname": "DirLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/lighting/dirLight.js",
            "line": 1,
            "description": "A **DirLight** is a directional light source that illuminates all attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} equally\nfrom a given direction.\n\n## Overview\n\n<ul>\n<li>DirLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>DirLights have a direction, but no position.</li>\n<li>DirLights may be defined in either **World** or **View** coordinate space. When in World-space, their direction\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their direction is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that DirLights create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/DirLight.png\"></img>\n\n## Example\n\nIn this example we have:\n\n<ul>\n<li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}},</li>\n<li>a DirLight that points along the negative diagonal of the View coordinate system,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing the DirLight,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_DirLight.html\"></iframe>\n\n```` javascript\nvar scene = new XEO.Scene();\n\n// A shiny PhongMaterial with quantities of reflected\n// ambient, diffuse and specular color\nvar material = new XEO.PhongMaterial(scene, {\n   ambient:    [0.3, 0.3, 0.3],\n   diffuse:    [0.7, 0.7, 0.7],\n   specular:   [1. 1, 1],\n   shininess:  30\n});\n\n// DirLight with color and intensity, pointing along\n// the negative diagonal within the View coordinate system\nvar dirLight = new XEO.DirLight(scene, {\n   dir:         [-1, -1, -1],\n   color:       [0.5, 0.7, 0.5],\n   intensity:   1.0,\n   space:      \"view\"  // Other option is \"world\", for World-space\n});\n\n// Lights which contains our DirLight\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       dirLight\n   ]\n});\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\n// Object which renders our Geometry, colored with\n// the Material and illuminated with the DirLight\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n});\n````\n\nAs with all components, we can observe and change properties on a DirLights, like so:\n\n````Javascript\n// Attach a change listener to a property\nvar handle = dirLight.on(\"color\",\nfunction(value) {\n       // Property value has changed\n   });\n\n// Set the property, which fires our change listener\ndirLight.color = [0.0, 0.3, 0.3];\n\n// Detach the change listener\ndirLight.off(handle);\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this DirLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The DirLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DirLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "dir",
                            "description": "A unit vector indicating the direction of illumination, given in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.0]"
                        },
                        {
                            "name": "color",
                            "description": "The color of this DirLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "intensity",
                            "description": "The intensity of this DirLight.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system the DirLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Lights": {
            "name": "Lights",
            "shortname": "Lights",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/lighting/lights.js",
            "line": 1,
            "description": "A **Lights** defines a group of light sources that illuminate attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\nA Lights may contain a virtually unlimited number of three types of light source:\n\n<ul>\n<li>{{#crossLink \"AmbientLight\"}}AmbientLight{{/crossLink}}s, which are fixed-intensity and fixed-color, and\naffect all the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} equally,</li>\n<li>{{#crossLink \"PointLight\"}}PointLight{{/crossLink}}s, which emit light that\noriginates from a single point and spreads outward in all directions, and </li>\n<li>{{#crossLink \"DirLight\"}}DirLight{{/crossLink}}s, which illuminate all the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} equally from a given direction</li>\n</ul>\n\n<img src=\"../../../assets/images/Lights.png\"></img>\n\n## Example\n\nIn this example we have a {{#crossLink \"GameObject\"}}{{/crossLink}} that has a {{#crossLink \"Geometry\"}}{{/crossLink}},\na {{#crossLink \"PhongMaterial\"}}{{/crossLink}} and a {{#crossLink \"Lights\"}}{{/crossLink}}. The {{#crossLink \"Lights\"}}{{/crossLink}}\ncontains an {{#crossLink \"AmbientLight\"}}{{/crossLink}}, a {{#crossLink \"DirLight\"}}{{/crossLink}} and a {{#crossLink \"PointLight\"}}{{/crossLink}}.\n\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.PhongMaterial(scene, {\n   ambient:    [0.3, 0.3, 0.3],\n   diffuse:    [0.7, 0.7, 0.7],\n   specular:   [1. 1, 1],\n   shininess:  30\n});\n\nvar ambientLight = new XEO.AmbientLight(scene, {\n   color: [0.7, 0.7, 0.7],\n   intensity:   1.0\n});\n\nvar dirLight = new XEO.DirLight(scene, {\n   dir:        [-1, -1, -1],\n   color:    [0.5, 0.7, 0.5],\n   intensity:   1.0,\n   space:      \"view\"\n});\n\nvar pointLight = new XEO.PointLight(scene, {\n   pos: [0, 100, 100],\n   color: [0.5, 0.7, 0.5],\n   intensity: [1.0, 1.0, 1.0],\n   constantAttenuation: 0,\n   linearAttenuation: 0,\n   quadraticAttenuation: 0,\n   space: \"view\"\n});\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       ambientLight,\n       dirLight,\n       pointLight\n   ]\n});\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n});\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Lights in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Lights.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "lights",
                            "description": "} Array of light source IDs or instances.",
                            "type": "Array of String|GameObject",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "PointLight": {
            "name": "PointLight",
            "shortname": "PointLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/lighting/pointLight.js",
            "line": 1,
            "description": "A **PointLight** defines a positional light source that originates from a single point and spreads outward in all directions, to illuminate\nattached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n\n<li>PointLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>PointLights have a position, but no direction.</li>\n\n<li>PointLights may be defined in either **World** or **View** coordinate space. When in World-space, their position\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their position is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.</li>\n\n<li>PointLights have {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.</li>\n\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that PointLights create within xeoEngine's shaders.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/PointLight.png\"></img>\n\n## Example\n\nIn this example we have\n<ul>\n<li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}},</li>\n<li>a PointLight,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing the PointLight,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n<iframe style=\"width: 600px; height: 400px\" src=\"../../examples/light_PointLight.html\"></iframe>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.PhongMaterial(scene, {\n       color: [1, 1, 1],\n       intensity: 1\n});\n\n// Our PointLight's intensity does not attenuate over distance.\n\nvar pointLight = new XEO.PointLight(scene, {\n       pos: [0, 100, 100],\n       color: [0.5, 0.7, 0.5],\n       intensity: 1\n       constantAttenuation: 0,\n       linearAttenuation: 0,\n       quadraticAttenuation: 0,\n       space: \"view\"\n});\n\nvar lights = new XEO.Lights(scene, {\n       lights: [\n           pointLight\n       ]\n});\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n       lights: lights,\n       material: material,\n       geometry: geometry\n });\n````\n\nAs with all components, we can <a href=\"XEO.Component.html#changeEvents\" class=\"crosslink\">observe and change properties</a> on PointLights like so:\n\n````Javascript\nvar handle = pointLight.on(\"color\", // Attach a change listener to a property\nfunction(value) {\n       // Property value has changed\n   });\n\npointLight.color = [0.4, 0.6, 0.4]; // Fires the change listener\n\npointLight.off(handle); // Detach the change listener\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "extends": "Component",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this PointLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PointLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Color of this PointLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "intensity",
                            "description": "Intensity of this PointLight.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "constantAttenuation",
                            "description": "Constant attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "linearAttenuation",
                            "description": "Linear attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "quadraticAttenuation",
                            "description": "Quadratic attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this PointLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "Fresnel": {
            "name": "Fresnel",
            "shortname": "Fresnel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/fresnel.js",
            "line": 1,
            "description": "A **Fresnel** specifies a Fresnel effect.\n\n## Overview\n\n<ul>\n<li>Fresnels are grouped within {{#crossLink \"Material\"}}Material{{/crossLink}}s, which are attached to\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Fresnels create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Fresnel.png\"></img>\n\n## Example\n\nThe example below has:\n<ul>\n<li>two Fresnels,</li>\n<li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} which applies the {{#crossLink \"Fresnel\"}}{{/crossLink}}s to diffuse and specular shading,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"PointLight\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that has the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar fresnel1 = new XEO.Fresnel(scene, {\n   edgeColor: [1.0, 1.0, 1.0],\n   centerColor: [0.0, 0.0, 0.0],\n   power: 4,\n   bias: 0.6\n});\n\nvar fresnel2 = new XEO.Fresnel(scene, {\n   edgeColor: [1.0, 1.0, 1.0],\n   centerColor: [0.0, 0.0, 0.0],\n   power: 4,\n   bias: 0.2\n});\n\nvar material = new XEO.PhongMaterial(scene, {\n   ambient: [0.3, 0.3, 0.3],\n   shininess: 30,\n   diffuseFresnel: fresnel1,\n   specularFresnel: fresnel3\n});\n\nvar light1 = new XEO.PointLight(scene, {\n   pos: [0, 100, 100],\n   diffuse: [0.5, 0.7, 0.5],\n   specular: [1.0, 1.0, 1.0]\n});\n\nvar light2 = new XEO.AmbientLight(scene, {\n   color: [0.5, 0.7, 0.5]\n});\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       light1,\n       light2\n   ]\n});\n\n// Geometry without parameters will default to a 2x2x2 box.\nvar geometry = new XEO.Geometry(scene);\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n});\n````",
            "submodule": "materials",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Fresnel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "edgeColor",
                            "description": "Color used on edges.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 0.0, 0.0, 0.0 ]"
                        },
                        {
                            "name": "centerColor",
                            "description": "Color used on center.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "edgeBias",
                            "description": "Bias at the edge.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "centerBias",
                            "description": "Bias at the center.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "power",
                            "description": "The power.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Material": {
            "name": "Material",
            "shortname": "Material",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/material.js",
            "line": 1,
            "description": "A **Material** defines the surface appearance of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nMaterial is the base class for:\n\n<ul>\n<li>{{#crossLink \"PBRMaterial\"}}{{/crossLink}} - Physically-based rendering (PBR) material.</li>\n<li>{{#crossLink \"PhongMaterial\"}}{{/crossLink}} - Blinn-Phong shading material.</li>\n<li>(more coming)</li>\n</ul>\n\n<img src=\"../../../assets/images/Material.png\"></img>",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Component"
        },
        "PBRMaterial": {
            "name": "PBRMaterial",
            "shortname": "PBRMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/pbrMaterial.js",
            "line": 1,
            "description": "A **PBRMaterial** is a {{#crossLink \"Material\"}}{{/crossLink}} that defines the appearance of\nattached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} using a physically-based rendering model.\n\n## Overview\n\n<ul>\n<li>Physically Based Rendering (PBR) is a method of shading and rendering that provides a more accurate representation\nof how light interacts with surfaces. It can be referred to as Physically Based Rendering (PBR) or Physically Based Shading (PBS).\nDepending on what aspect of the pipeline is being discussed, PBS is usually specific to shading concepts and PBR specific\nto rendering and lighting. However, both terms describe on a whole, the process of representing assets from a physically\naccurate standpoint. - *Wes McDermott, Allegorithmic PBR Guide, Vol. 2*</li>\n<li>The xeoEngine PBRMaterial is based on the once used in [Unreal Engine](https://docs.unrealengine.com/latest/INT/Engine/Rendering/Materials/PhysicallyBased/index.html)</li>\n</ul>\n\n<img src=\"../../../assets/images/PBRMaterial.png\"></img>\n\n### Material attributes\n\n* **{{#crossLink \"PBRMaterial/metallic:property\"}}{{/crossLink}}** - degree of metallicity in range ````[0..1]````, where ````0```` is fully dialectric (non-metal) and ````1```` is fully metallic.\n* **{{#crossLink \"PBRMaterial/color:property\"}}{{/crossLink}}** - base color.\n* **{{#crossLink \"PBRMaterial/colorMap:property\"}}{{/crossLink}}** - color map {{#crossLink \"Texture\"}}{{/crossLink}} to replace {{#crossLink \"PBRMaterial/color:property\"}}{{/crossLink}}.\n* **{{#crossLink \"PBRMaterial/emissive:property\"}}{{/crossLink}}** - emissive color.\n* **{{#crossLink \"PBRMaterial/emissiveMap:property\"}}{{/crossLink}}** - emissive map {{#crossLink \"Texture\"}}{{/crossLink}} to replace {{#crossLink \"PBRMaterial/emissive:property\"}}{{/crossLink}}.\n* **{{#crossLink \"PBRMaterial/opacity:property\"}}{{/crossLink}}** - opacity in range ````[0..1]````.\n* **{{#crossLink \"PBRMaterial/opacityMap:property\"}}{{/crossLink}}** - opacity map {{#crossLink \"Texture\"}}{{/crossLink}} to replace {{#crossLink \"PBRMaterial/opacity:property\"}}{{/crossLink}}.\n* **{{#crossLink \"PBRMaterial/roughness:property\"}}{{/crossLink}}** - surface roughness in range ````[0..1]````, where ````0```` is 100% smooth and ````1```` is 100% rough.\n* **{{#crossLink \"PBRMaterial/roughnessMap:property\"}}{{/crossLink}}** - roughness map {{#crossLink \"Texture\"}}{{/crossLink}} to replace {{#crossLink \"PBRMaterial/roughness:property\"}}{{/crossLink}}.\n* **{{#crossLink \"PBRMaterial/normalMap:property\"}}{{/crossLink}}** - normal map {{#crossLink \"Texture\"}}{{/crossLink}}.\n* **{{#crossLink \"PBRMaterial/specular:property\"}}{{/crossLink}}** - specular reflection color.\n* **{{#crossLink \"PBRMaterial/specularMap:property\"}}{{/crossLink}}** - specular map {{#crossLink \"Texture\"}}{{/crossLink}} to replace {{#crossLink \"PBRMaterial/specular:property\"}}{{/crossLink}}.\n\n\n## Example 1: Non-metallic material\n\nIn this example we have\n\n<ul>\n<li>a dialectric (non-metallic) PBRMaterial,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material1 = new XEO.PBRMaterial(scene, {\n   metallic: 0.0, // Default\n   color: [1.0, 0.8, 0.0],\n   specular: [1.0, 1.0, 1.0]\n});\n\nvar geometry = new XEO.Geometry(scene);  // Default box\n\nvar object = new XEO.GameObject(scene, {\n   material: material1,\n   geometry: geometry\n});\n````\n\n## Example 2: Metallic material\n\n```` javascript\nvar material2 = new XEO.PBRMaterial(scene, {\n   metallic: 1.0,\n   color: [1.0, 0.8, 0.0],\n   roughness: 0.3\n});\n````\n\n## Example 3: Metallic material with color map\n\n```` javascript\nvar colorMap = new XEO.Texture(scene, {\n   src: \"colorMap.jpg\"\n});\n\nvar material3 = new XEO.PBRMaterial(scene, {\n   metallic: 1.0,\n   colorMap: colorMap,\n   roughness: 0.3\n});\n````",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Material",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this PBRMaterial within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PBRMaterial configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Metadata to attach to this PBRMaterial.",
                            "type": "String:Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "metallic",
                            "description": "Scalar in range 0-1 that controls how metallic the PBRMaterial is.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.0"
                        },
                        {
                            "name": "color",
                            "description": "Base color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "colorMap",
                            "description": "A color map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the color property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PBRMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "emissive",
                            "description": "Emissive color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "emissiveMap",
                            "description": "An emissive map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the emissive property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PBRMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "opacity",
                            "description": "Scalar in range 0-1 that controls opacity, where 0 is completely transparent and 1 is completely opaque. Only applies while {{#crossLink \"Modes\"}}Modes{{/crossLink}} {{#crossLink \"Modes/transparent:property\"}}transparent{{/crossLink}} equals ````true````.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacityMap",
                            "description": "An opacity map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the opacity property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PBRMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "roughness",
                            "description": "Scalar in range 0-1 that controls roughness, where 0 is 100% glossiness and 1 is 100% roughness.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.0"
                        },
                        {
                            "name": "roughnessMap",
                            "description": "A roughness map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the roughness property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PBRMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "normalMap",
                            "description": "A normal map {{#crossLink \"Texture\"}}Texture{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PBRMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "specular",
                            "description": "Specular color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "specularMap",
                            "description": "A specular map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the specular property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PBRMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "PhongMaterial": {
            "name": "PhongMaterial",
            "shortname": "PhongMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/phongMaterial.js",
            "line": 1,
            "description": "A **PhongMaterial** is a {{#crossLink \"Material\"}}{{/crossLink}} that defines the surface appearance of\nattached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} using\nthe <a href=\"http://en.wikipedia.org/wiki/Phong_reflection_model\">Phong</a> lighting model.\n\n## Overview\n\n<ul>\n\n<li>These PhongMaterial properties, along with {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}},\n{{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} and {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}},\nspecify attributes that are to be **applied uniformly** across the surface of attached {{#crossLink \"Geometry\"}}Geometries{{/crossLink}}.</li>\n\n<li>Most of those attributes can be textured, **effectively replacing the values set for those properties**, by\nassigning {{#crossLink \"Texture\"}}Textures{{/crossLink}} to the PhongMaterial's\n{{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}}, {{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}},\n{{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}}, {{#crossLink \"PhongMaterial/opacityMap:property\"}}{{/crossLink}}\nand  {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}} properties.</li>\n\n<li>For example, the value of {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} will be ignored if your\nPhongMaterial also has a {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} set to a {{#crossLink \"Texture\"}}Texture{{/crossLink}}.\nThe {{#crossLink \"Texture\"}}Texture's{{/crossLink}} pixel colors directly provide the diffuse color of each fragment across the\n{{#crossLink \"Geometry\"}}{{/crossLink}} surface, ie. they are not multiplied by\nthe {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} for each pixel, as is done in many shading systems.</li>\n\n<li>When the {{#crossLink \"GameObject\"}}{{/crossLink}}'s {{#crossLink \"Geometry\"}}{{/crossLink}} has a\n{{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} set to \"lines\" or \"points\" then only the {{#crossLink \"PhongMaterial\"}}{{/crossLink}}'s\n{{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}}, {{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}},\n{{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} and {{#crossLink \"PhongMaterial/opacityMap:property\"}}{{/crossLink}}\nwill actually be applied, since those primitive types cannot be shaded.</li>\n\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that PhongMaterials create within xeoEngine's shaders.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Material.png\"></img>\n\n## Example\n\nIn this example we have\n\n<ul>\n<li>a {{#crossLink \"Texture\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Fresnel\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} which applies the {{#crossLink \"Texture\"}}{{/crossLink}} as a diffuse map and the {{#crossLink \"Fresnel\"}}{{/crossLink}} as a specular Fresnel effect,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"DirLight\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\nNote that the value for the {{#crossLink \"PhongMaterial\"}}PhongMaterial's{{/crossLink}} {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}}\nproperty is ignored and redundant, since we assign a {{#crossLink \"Texture\"}}{{/crossLink}} to the\n{{#crossLink \"PhongMaterial\"}}PhongMaterial's{{/crossLink}} {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} property.\nThe {{#crossLink \"Texture\"}}Texture's{{/crossLink}} pixel colors directly provide the diffuse color of each fragment across the\n{{#crossLink \"Geometry\"}}{{/crossLink}} surface.\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar diffuseMap = new XEO.Texture(scene, {\n   src: \"diffuseMap.jpg\"\n});\n\nvar fresnel = new XEO.Fresnel(scene, {\n   leftColor: [1.0, 1.0, 1.0],\n   rightColor: [0.0, 0.0, 0.0],\n   power: 4\n});\n\nvar material = new XEO.PhongMaterial(scene, {\n   ambient:         [0.3, 0.3, 0.3],\n   diffuse:         [0.5, 0.5, 0.0],   // Ignored, since we have assigned a Texture to diffuseMap, below\n   diffuseMap:      diffuseMap,\n   specular:        [1, 1, 1],\n   shininess:       80,\n   specularFresnel: fresnel\n});\n\nvar ambientLight = new XEO.AmbientLight(scene, {\n   color: [0.7, 0.7, 0.7]\n});\n\nvar dirLight = new XEO.DirLight(scene, {\n   dir:        [-1, -1, -1],\n   color:      [0.5, 0.7, 0.5],\n   intensity:  [1.0, 1.0, 1.0],\n   space:      \"view\"\n});\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       ambientLight,\n       dirLight\n   ]\n});\n\nvar geometry = new XEO.Geometry(scene); // Geometry without parameters will default to a 2x2x2 box.\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n});\n````",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Material",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this PhongMaterial within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PhongMaterial configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Metadata to attach to this PhongMaterial.",
                            "type": "String:Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "ambient",
                            "description": "PhongMaterial ambient color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "diffuse",
                            "description": "PhongMaterial diffuse color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "specular",
                            "description": "PhongMaterial specular color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "emissive",
                            "description": "PhongMaterial emissive color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 0.0, 0.0, 0.0 ]"
                        },
                        {
                            "name": "opacity",
                            "description": "Scalar in range 0-1 that controls opacity, where 0 is completely transparent and 1 is completely opaque.\nOnly applies while {{#crossLink \"Modes\"}}Modes{{/crossLink}} {{#crossLink \"Modes/transparent:property\"}}transparent{{/crossLink}} equals ````true````.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "shininess",
                            "description": "Scalar in range 0-128 that determines the size and sharpness of specular highlights.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "80"
                        },
                        {
                            "name": "reflectivity",
                            "description": "Scalar in range 0-1 that controls how much {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} is reflected.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "lineWidth",
                            "description": "Scalar that controls the width of lines for {{#crossLink \"Geometry\"}}{{/crossLink}} with {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} set to \"lines\".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "pointSize",
                            "description": "Scalar that controls the size of points for {{#crossLink \"Geometry\"}}{{/crossLink}} with {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} set to \"points\".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "diffuseMap",
                            "description": "A diffuse map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the diffuse property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "specularMap",
                            "description": "A specular map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the specular property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "emissiveMap",
                            "description": "An emissive map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the emissive property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "normalMap",
                            "description": "A normal map {{#crossLink \"Texture\"}}Texture{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "opacityMap",
                            "description": "An opacity map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the opacity property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "reflectivityMap",
                            "description": "A reflectivity control map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the reflectivity property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "diffuseFresnel",
                            "description": "A diffuse {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "specularFresnel",
                            "description": "A specular {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "emissiveFresnel",
                            "description": "An emissive {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "opacityFresnel",
                            "description": "An opacity {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "reflectivityFresnel",
                            "description": "A reflectivity {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "Reflect": {
            "name": "Reflect",
            "shortname": "Reflect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/reflect.js",
            "line": 5,
            "description": "A **Reflect** defines a reflection as a cubemap that is applied\nto attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nTODO",
            "submodule": "materials",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Reflect in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Reflect.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Texture": {
            "name": "Texture",
            "shortname": "Texture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/materials/texture.js",
            "line": 1,
            "description": "A **Texture** specifies a texture map.\n\n## Overview\n\n<ul>\n<li>Textures are grouped within {{#crossLink \"Material\"}}Material{{/crossLink}}s, which are attached to\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>To create a Texture from an image file, set the Texture's {{#crossLink \"Texture/src:property\"}}{{/crossLink}}\nproperty to the image file path.</li>\n<li>To create a Texture from an HTML DOM Image object, set the Texture's {{#crossLink \"Texture/image:property\"}}{{/crossLink}}\nproperty to the object.</li>\n<li>To render color images of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to a Texture, set the Texture's {{#crossLink \"Texture/target:property\"}}{{/crossLink}}\nproperty to a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} that is attached to those {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>Similarly, to render depth images of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to a Texture, set the Texture's {{#crossLink \"Texture/target:property\"}}{{/crossLink}}\nproperty to a {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} that is attached to those {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>For special effects, we often use rendered Textures in combination with {{#crossLink \"Shader\"}}Shaders{{/crossLink}} and {{#crossLink \"Stage\"}}Stages{{/crossLink}}.</li>\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Textures create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Texture.png\"></img>\n\n## Example\n\nThe example below has:\n<ul>\n<li>three Textures,</li>\n<li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} which applies the {{#crossLink \"Texture\"}}{{/crossLink}}s as diffuse, normal and specular maps,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"PointLight\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that has the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar texture1 = new XEO.Texture(scene, {\n   src: \"diffuseMap.jpg\"\n});\n\nvar texture2 = new XEO.Texture(scene, {\n   src: \"normalMap.jpg\"\n});\n\nvar texture3 = new XEO.Texture(scene, {\n   src: \"specularMap.jpg\"\n});\n\nvar material = new XEO.PhongMaterial(scene, {\n   ambient: [0.3, 0.3, 0.3],\n   shininess: 30,\n   diffuseMap: texture1,\n   normalMap: texture2,\n   specularMap: texture3\n});\n\nvar light1 = new XEO.PointLight(scene, {\n   pos: [0, 100, 100],\n   color: [0.5, 0.7, 0.5]\n});\n\nvar light2 = new XEO.AmbientLight(scene, {\n   color: [0.5, 0.7, 0.5]\n});\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       light1,\n       light2\n   ]\n});\n\n// Geometry without parameters will default to a 2x2x2 box.\nvar geometry = new XEO.Geometry(scene);\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n});\n````",
            "submodule": "materials",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Texture in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID for this Texture, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Texture.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to image file to load into this Texture. See the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "image",
                            "description": "HTML Image object to load into this Texture. See the {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property for more info.",
                            "type": "HTMLImageElement",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "target",
                            "description": "Instance or ID of a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} or\n{{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} to source this Texture from. See the {{#crossLink \"Texture/target:property\"}}{{/crossLink}} property for more info.",
                            "type": "String | XEO.ColorTarget | XEO.DepthTarget",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "minFilter",
                            "description": "How the texture is sampled when a texel covers less than one pixel. See the {{#crossLink \"Texture/minFilter:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"linearMipmapLinear\""
                        },
                        {
                            "name": "magFilter",
                            "description": "How the texture is sampled when a texel covers more than one pixel. See the {{#crossLink \"Texture/magFilter:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"linear\""
                        },
                        {
                            "name": "wrapS",
                            "description": "Wrap parameter for texture coordinate *S*. See the {{#crossLink \"Texture/wrapS:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"repeat\""
                        },
                        {
                            "name": "wrapT",
                            "description": "Wrap parameter for texture coordinate *S*. See the {{#crossLink \"Texture/wrapT:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"repeat\""
                        },
                        {
                            "name": "translate",
                            "description": "2D translation vector that will be added to texture's *S* and *T* coordinates.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0]"
                        },
                        {
                            "name": "scale",
                            "description": "2D scaling vector that will be applied to texture's *S* and *T* coordinates.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1,1]"
                        },
                        {
                            "name": "rotate",
                            "description": "Rotation, in degrees, that will be applied to texture's *S* and *T* coordinates.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "XEO.math.math": {
            "name": "XEO.math.math",
            "shortname": "math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math",
            "file": "src/math/math.js",
            "line": 58,
            "description": "This utility object provides math functions that are used within xeoEngine. These functions are also part xeoEngine's\npublic API and are therefore available for you to use within your application code."
        },
        "GameObject": {
            "name": "GameObject",
            "shortname": "GameObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/objects/gameObject.js",
            "line": 1,
            "description": "A **GameObject** is an GameObject within a xeoEngine {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n## Overview\n\nSee the {{#crossLink \"Scene\"}}Scene{{/crossLink}} class documentation for more information on GameObjects.</li>\n\n<img src=\"../../../assets/images/GameObject.png\"></img>\n\n\n## Boundaries\n\n#### Local-space\n\nA GameObject provides its Local-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}}.</li>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar geometry = new XEO.Geometry(myScene, {\n     //...\n });\n\nvar object = new XEO.GameObject(myScene, {\n      geometry: myGeometry,\n      transform: translate\n });\n\n// Get the Local-space Boundary3D\nvar localBoundary = object.localBoundary;\n\n// Get Local-space object-aligned bounding box (OBB),\n// which is an array of eight vertices that describes\n// the box that is aligned with the GameObject's Geometry\nvar obb = localBoundary.obb;\n\n// Get the Local-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = localBoundary.aabb;\n\n// get the Local-space center of the GameObject:\nvar center = localBoundary.center;\n\n````\n\n#### World-space\n\nA GameObject provides its World-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntransformation by the GameObject's {{#crossLink \"GameObject/transform:property\"}}Modelling transform{{/crossLink}}.</li>\n\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar geometry = new XEO.Geometry(myScene, {\n     //...\n });\n\nvar translate = new XEO.Translate(scene, {\n   xyz: [-5, 0, 0] // Translate along -X axis\n});\n\nvar object = new XEO.GameObject(myScene, {\n      geometry: myGeometry,\n      transform: translate\n });\n\n// Get the World-space Boundary3D\nvar worldBoundary = object.worldBoundary;\n\n// Get World-space object-aligned bounding box (OBB),\n// which is an array of eight vertices that describes\n// the box that is aligned with the GameObject\nvar obb = worldBoundary.obb;\n\n// Get the World-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = worldBoundary.aabb;\n\n// get the World-space center of the GameObject:\nvar center = worldBoundary.center;\n\n````\n\n#### View-space\n\nA GameObject also provides its View-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry/positions:property\"}}Geometry positions{{/crossLink}} after\ntheir transformation by the {{#crossLink \"Camera/view:property\"}}View{{/crossLink}} and\n{{#crossLink \"GameObject/transform:property\"}}Modelling{{/crossLink}} transforms.</li>\n\n```` javascript\n// Get the View-space Boundary3D\nvar viewBoundary = object.viewBoundary;\n\n// Get View-space object-aligned bounding box (OBB),\n// which is an array of eight vertices that describes\n// the box that is aligned with the GameObject\nvar obb = viewBoundary.obb;\n\n// Get the View-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = viewBoundary.aabb;\n\n// get the View-space center of the GameObject:\nvar center = viewBoundary.center;\n\n````\n\n#### View-space\n\nA GameObject also provides its Canvas-space boundary as a {{#crossLink \"Boundary2D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry/positions:property\"}}Geometry positions{{/crossLink}} after\ntheir transformation by the {{#crossLink \"GameObject/transform:property\"}}Modelling{{/crossLink}},\n{{#crossLink \"Camera/view:property\"}}View{{/crossLink}} and {{#crossLink \"Camera/project:property\"}}Projection{{/crossLink}} transforms.</li>\n\n```` javascript\n// Get the Canvas-space Boundary2D\nvar canvasBoundary = object.canvasBoundary;\n\n// Get the Canvas-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = canvasBoundary.aabb;\n\n// get the Canvas-space center of the GameObject:\nvar center = canvasBoundary.center;\n\n````",
            "submodule": "objects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this GameObject within xeoEngine's default {{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this GameObject.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to attach to this GameObject.  Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "clips",
                            "description": "ID or instance of a {{#crossLink \"Clips\"}}Clips{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/clips:property\"}}clips{{/crossLink}}.",
                            "type": "String|Clips",
                            "optional": true
                        },
                        {
                            "name": "colorTarget",
                            "description": "ID or instance of a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/colorTarget:property\"}}colorTarget{{/crossLink}}.",
                            "type": "String|ColorTarget",
                            "optional": true
                        },
                        {
                            "name": "depthTarget",
                            "description": "ID or instance of a {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/depthTarget:property\"}}depthTarget{{/crossLink}}.",
                            "type": "String|DepthTarget",
                            "optional": true
                        },
                        {
                            "name": "depthBuf",
                            "description": "ID or instance of a {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, depth {{#crossLink \"Scene/depthBuf:property\"}}depthBuf{{/crossLink}}.",
                            "type": "String|DepthBuf",
                            "optional": true
                        },
                        {
                            "name": "visibility",
                            "description": "ID or instance of a {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/visibility:property\"}}visibility{{/crossLink}}.",
                            "type": "String|Visibility",
                            "optional": true
                        },
                        {
                            "name": "modes",
                            "description": "ID or instance of a {{#crossLink \"Modes\"}}Modes{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/modes:property\"}}modes{{/crossLink}}.",
                            "type": "String|Modes",
                            "optional": true
                        },
                        {
                            "name": "geometry",
                            "description": "ID or instance of a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/geometry:property\"}}geometry{{/crossLink}}, which is a 2x2x2 box.",
                            "type": "String|Geometry",
                            "optional": true
                        },
                        {
                            "name": "layer",
                            "description": "ID or instance of a {{#crossLink \"Layer\"}}Layer{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/layer:property\"}}layer{{/crossLink}}.",
                            "type": "String|Layer",
                            "optional": true
                        },
                        {
                            "name": "lights",
                            "description": "ID or instance of a {{#crossLink \"Lights\"}}Lights{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/lights:property\"}}lights{{/crossLink}}.",
                            "type": "String|Lights",
                            "optional": true
                        },
                        {
                            "name": "material",
                            "description": "ID or instance of a {{#crossLink \"Material\"}}Material{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/material:property\"}}material{{/crossLink}}.",
                            "type": "String|Material",
                            "optional": true
                        },
                        {
                            "name": "morphTargets",
                            "description": "ID or instance of a {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault instance, {{#crossLink \"Scene/morphTargets:property\"}}morphTargets{{/crossLink}}.",
                            "type": "String|MorphTargets",
                            "optional": true
                        },
                        {
                            "name": "reflect",
                            "description": "ID or instance of a {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/reflect:property\"}}reflection{{/crossLink}}.",
                            "type": "String|Reflect",
                            "optional": true
                        },
                        {
                            "name": "shader",
                            "description": "ID or instance of a {{#crossLink \"Shader\"}}Shader{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/shader:property\"}}shader{{/crossLink}}.",
                            "type": "String|Shader",
                            "optional": true
                        },
                        {
                            "name": "shaderParams",
                            "description": "ID or instance of a {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/shaderParams:property\"}}shaderParams{{/crossLink}}.",
                            "type": "String|ShaderParams",
                            "optional": true
                        },
                        {
                            "name": "stage",
                            "description": "ID or instance of of a {{#crossLink \"Stage\"}}Stage{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}}.",
                            "type": "String|Stage",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "ID or instance of a modelling transform to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/transform:property\"}}transform{{/crossLink}} (which is an identity matrix which performs no transformation).",
                            "type": "String|Transform",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ColorBuf": {
            "name": "ColorBuf",
            "shortname": "ColorBuf",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/colorBuf.js",
            "line": 1,
            "description": "A **ColorBuf** configures the WebGL color buffer for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n\n<li>A ColorBuf configures **the way** that pixels are written to the WebGL color buffer.</li>\n<li>ColorBuf is not to be confused with {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}}, which stores rendered pixel\ncolors for consumption by {{#crossLink \"Texture\"}}Textures{{/crossLink}}, used when performing *render-to-texture*.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/ColorBuf.png\"></img>\n\n## Example\n\nIn this example we're configuring the WebGL color buffer for a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThis example scene contains:\n\n<ul>\n<li>a ColorBuf that enables blending and sets the color mask,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar colorBuf = new XEO.ColorBuf(scene, {\n   blendEnabled: true,\n   colorMask: [true, true, true, true]\n});\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject = new XEO.GameObject(scene, {\n   colorBuf: colorBuf,\n   geometry: geometry\n});\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this ColorBuf within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "ColorBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ColorBuf.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "blendEnabled",
                            "description": "Indicates if blending is enabled.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "colorMask",
                            "description": "The color mask,",
                            "type": "Array of Boolean",
                            "optional": true,
                            "optdefault": "[true, true, true, true]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ColorTarget": {
            "name": "ColorTarget",
            "shortname": "ColorTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/colorTarget.js",
            "line": 1,
            "description": "A **ColorTarget** is a  <a href=\"http://en.wikipedia.org/wiki/Render_Target\" target=\"other\">render target</a>  that\ncaptures the colors of the pixels rendered for the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>ColorTargets are typically used when *rendering-to-texture*.</li>\n<li>A ColorTarget provides the pixel colors as a dynamic color image that may be consumed by {{#crossLink \"Texture\"}}Textures{{/crossLink}}.</li>\n<li>ColorTarget is not to be confused with {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}}, which configures ***how*** the pixel colors are written with respect to the WebGL color buffer.</li>\n<li>Use {{#crossLink \"Stage\"}}Stages{{/crossLink}} when you need to ensure that a ColorTarget is rendered before\nthe {{#crossLink \"Texture\"}}Textures{{/crossLink}} that consume it.</li>\n<li>For special effects, we often use ColorTargets and {{#crossLink \"Texture\"}}Textures{{/crossLink}} in combination\nwith {{#crossLink \"DepthTarget\"}}DepthTargets{{/crossLink}} and {{#crossLink \"Shader\"}}Shaders{{/crossLink}}.</li>\n</ul>\n\n<img src=\"../../../assets/images/ColorTarget.png\"></img>\n\n## Example\n\nIn this example we essentially have one {{#crossLink \"GameObject\"}}{{/crossLink}}\nthat's rendered to a {{#crossLink \"Texture\"}}{{/crossLink}}, which is then applied to a second {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThe scene contains:\n\n<ul>\n<li>a ColorTarget,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape,\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}} pixel color values to the ColorTarget,</li>\n<li>a {{#crossLink \"Texture\"}}{{/crossLink}} that sources its pixels from the ColorTarget,</li>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}} that includes the {{#crossLink \"Texture\"}}{{/crossLink}}, and</li>\n<li>a second {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}}, with the {{#crossLink \"Material\"}}{{/crossLink}} applied to it.</li>\n</ul>\n\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar colorTarget = new XEO.ColorTarget(scene);\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\n// First Object renders to the ColorTarget\n\nvar object1 = new XEO.GameObject(scene, {\n   geometry: geometry,\n   colorTarget: colorTarget\n});\n\nvar texture = new XEO.Texture(scene, {\n   target: colorTarget\n});\n\nvar material = new XEO.PhongMaterial(scene, {\n   textures: [\n       texture\n   ]\n});\n\n// Second Object is textured with the\n// image of the first Object\n\nvar object2 = new XEO.GameObject(scene, {\n   geometry: geometry,  // Reuse our simple box geometry\n   material: material\n});\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this ColorTarget within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "ColorTarget configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ColorTarget.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Indicates if this ColorTarget is active or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "size",
                            "description": "Optional fixed size for the ColorTarget's pixel buffer. When this is null, the buffer\nwill dynamically resize to the canvas.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "DepthBuf": {
            "name": "DepthBuf",
            "shortname": "DepthBuf",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/depthBuf.js",
            "line": 1,
            "description": "A **DepthBuf** configures the WebGL depth buffer for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>A DepthBuf configures **the way** that pixel depths are written to the WebGL depth buffer</li>\n<li>DepthBuf is not to be confused with {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}}, which stores rendered pixel\ndepths for consumption by {{#crossLink \"Texture\"}}Textures{{/crossLink}}, used when performing *render-to-texture*.</li>\n</ul>\n\n<img src=\"../../../assets/images/DepthBuf.png\"></img>\n\n## Example\n\nIn this example we're configuring the WebGL depth buffer for a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThe scene contains:\n\n<ul>\n<li>a DepthBuf that configures the clear depth and depth comparison function,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Create a DepthBuf that configures the WebGL depth buffer to set pixels depths to 0.5\n// whenever it is cleared, and to use the \"less\" depth comparison function\nvar depthBuf = new XEO.DepthBuf(scene, {\n   clearDepth: 0.5,\n   depthFunc: \"less\"\n});\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\n// Create a Object that renders the Geometry to the depth buffer,\n// as configured by our DepthBuf\nvar gameObject = new XEO.GameObject(scene, {\n   depthBuf: depthBuf,\n   geometry: geometry\n});\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this DepthBuf\nwithin the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DepthBuf.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "clearDepth",
                            "description": "The clear depth.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "depthFunc",
                            "description": "The depth function.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"less\""
                        },
                        {
                            "name": "active",
                            "description": "True when this DepthBuf is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "DepthTarget": {
            "name": "DepthTarget",
            "shortname": "DepthTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/depthTarget.js",
            "line": 1,
            "description": "A **DepthTarget** is a  <a href=\"http://en.wikipedia.org/wiki/Render_Target\" target=\"other\">render target</a>  that\ncaptures the depths of the pixels rendered for the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>DepthTargets are typically used when *rendering-to-texture*.</li>\n<li>A DepthTarget provides the pixel depths as a dynamic color-encoded image that may be fed into {{#crossLink \"Texture\"}}Textures{{/crossLink}}.</li>\n<li>DepthTarget is not to be confused with {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}}, which configures ***how*** the pixel depths are written with respect to the WebGL depth buffer.</li>\n<li>Use {{#crossLink \"Stage\"}}Stages{{/crossLink}} when you need to ensure that a DepthTarget is rendered before\nthe {{#crossLink \"Texture\"}}Textures{{/crossLink}} that consume it.</li>\n<li>For special effects, we often use DepthTargets and {{#crossLink \"Texture\"}}Textures{{/crossLink}} in combination\nwith {{#crossLink \"DepthTarget\"}}DepthTargets{{/crossLink}} and {{#crossLink \"Shader\"}}Shaders{{/crossLink}}.</li>\n</ul>\n\n<img src=\"../../../assets/images/DepthTarget.png\"></img>\n\n## Example\n\nIn the example below, we essentially have one {{#crossLink \"GameObject\"}}{{/crossLink}}\nthat renders its pixel Z-depth values to a {{#crossLink \"Texture\"}}{{/crossLink}}, which is then applied\nto a second {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThe scene contains:\n\n<ul>\n<li>a DepthTarget,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape,\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}} fragment depth values to the DepthTarget,</li>\n<li>a {{#crossLink \"Texture\"}}{{/crossLink}} that sources its pixels from the DepthTarget,</li>\n<li>a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} that includes the {{#crossLink \"Texture\"}}{{/crossLink}}, and</li>\n<li>a second {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}}, with the {{#crossLink \"Material\"}}{{/crossLink}} applied to it.</li>\n</ul>\n\nThe pixel colours in the DepthTarget will be depths encoded into RGBA, so will look a little weird when applied directly to the second\n{{#crossLink \"GameObject\"}}{{/crossLink}} as a {{#crossLink \"Texture\"}}{{/crossLink}}. In practice the {{#crossLink \"Texture\"}}{{/crossLink}}\nwould carry the depth values into a custom {{#crossLink \"Shader\"}}{{/crossLink}}, which would then be applied to the second {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box.\n\nvar depthTarget = new XEO.DepthTarget(scene);\n\n// First Object renders its pixel depth values to our DepthTarget\nvar object1 = new XEO.GameObject(scene, {\n   depthTarget: depthTarget\n});\n\n// Texture consumes our DepthTarget\nvar texture = new XEO.Texture(scene, {\n   target: depthTarget\n});\n\n// Material contains our Texture\nvar material = new XEO.PhongMaterial(scene, {\n   textures: [\n       texture\n   ]\n});\n\n// Second Object is effectively textured with the color-encoded\n// pixel depths of the first Object\nvar object2 = new XEO.GameObject(scene, {\n   geometry: geometry,  // Reuse our simple box geometry\n   material: material\n});\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this DepthTarget within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthTarget configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DepthTarget.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Indicates if this DepthTarget is active or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Layer": {
            "name": "Layer",
            "shortname": "Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/layer.js",
            "line": 1,
            "description": "A **Layer** specifies the render order of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within their {{#crossLink \"Stage\"}}Stages{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>When xeoEngine renders a {{#crossLink \"Scene\"}}Scene{{/crossLink}}, each {{#crossLink \"Stage\"}}Stage{{/crossLink}} within that will render its bin\nof {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in turn, from the lowest priority {{#crossLink \"Stage\"}}Stage{{/crossLink}} to the highest.</li>\n\n<li>{{#crossLink \"Stage\"}}Stages{{/crossLink}} are typically used for ordering the render-to-texture steps in posteffects pipelines.</li>\n\n<li>You can control the render order of the individual {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} ***within*** a {{#crossLink \"Stage\"}}Stage{{/crossLink}}\nby associating them with {{#crossLink \"Layer\"}}Layers{{/crossLink}}.</li>\n\n<li>{{#crossLink \"Layer\"}}Layers{{/crossLink}} are typically used to <a href=\"https://www.opengl.org/wiki/Transparency_Sorting\" target=\"_other\">transparency-sort</a> the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within {{#crossLink \"Stage\"}}Stages{{/crossLink}}.</li>\n\n\n<li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} not explicitly attached to a Layer are implicitly\nattached to the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/layer:property\"}}layer{{/crossLink}}. which has\na {{#crossLink \"Layer/priority:property\"}}{{/crossLink}} value of zero.</li>\n\n<li>You can use Layers without defining any {{#crossLink \"Stage\"}}Stages{{/crossLink}} if you simply let your\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} fall back on the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}}. which has a {{#crossLink \"Stage/priority:property\"}}{{/crossLink}} value of zero.</li>\n</ul>\n\n<img src=\"../../../assets/images/Layer.png\"></img>\n\n## Example\n\nIn this example we'll use Layers to perform <a href=\"https://www.opengl.org/wiki/Transparency_Sorting\" target=\"_other\">transparency sorting</a>,\nwhich ensures that transparent objects are rendered farthest-to-nearest, so that they alpha-blend correctly with each other.\n\nWe want to render the three nested boxes shown below, in which the innermost box is opaque and blue,\nthe box enclosing that is transparent and yellow, and the outermost box is transparent and green. We need the boxes to\nrender in order innermost-to-outermost, in order to blend transparencies correctly.\n\n<img src=\"../../assets/images/transparencySort.jpg\"></img>\n\nOur scene has one {{#crossLink \"Stage\"}}{{/crossLink}}, just for completeness. As mentioned earlier, you don't have to\ncreate this because the {{#crossLink \"Scene\"}}{{/crossLink}} will provide its default {{#crossLink \"Stage\"}}{{/crossLink}}.\nThen, within that {{#crossLink \"Stage\"}}{{/crossLink}}, we create a {{#crossLink \"GameObject\"}}{{/crossLink}} for each box,\neach assigned to a different prioritised {{#crossLink \"Layer\"}}{{/crossLink}} to ensure that they are rendered in the right order.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// View transform\nvar lookat = new XEO.Lookat(scene, {\n   eye: [0,0,10]\n});\n\n// Camera, using Scene's default projection transform\nvar camera = new XEO.Camera(scene, {\n   view: lookat\n});\n\n// A Stage, just for completeness\n// We could instead just implicitly use the Scene's default Stage\nvar stage = new XEO.Stage(scene, {\n   priority: 0\n});\n\n// Geometry with no parameters defaults to a 2x2x2 box\nvar geometry = new XEO.Geometry(scene);\n\n//-----------------------------------------------------------------------------\n// Innermost box\n// Blue and opaque, in Layer with render order 0, renders first\n//-----------------------------------------------------------------------------\n\nvar layer1 = new XEO.Layer(scene, {\n   priority: 1\n});\n\nvar material1 = new XEO.PhongMaterial(scene, {\n   diffuse: [0.2, 0.2, 1.0],\n   opacity: 1.0\n});\n\nvar object1 = new XEO.GameObject(scene, {\n   camera: camera,\n   geometry: geometry,\n   stage: stage,\n   layer: layer1,\n   material: material1\n});\n\n//-----------------------------------------------------------------------------\n// Middle box\n// Red and transparent, in Layer with render order 2, renders next\n//-----------------------------------------------------------------------------\n\nvar layer2 = new XEO.Layer(scene, {\n   priority: 2\n});\n\nvar material2 = new XEO.PhongMaterial(scene, {\n   diffuse: [1, 0.2, 0.2],\n   opacity: 0.2\n});\n\nvar scale2 = new XEO.Scale(scene, {\n   xyz: [6, 6, 6]\n});\n\nvar object2 = new XEO.GameObject(scene, {\n   camera: camera,\n   geometry: geometry,\n   stage: stage,\n   layer: layer2,\n   material: material2,\n   scale: scale2\n});\n\n//-----------------------------------------------------------------------------\n// Outermost box\n// Green and transparent, in Layer with render order 3, renders last\n//-----------------------------------------------------------------------------\n\nvar layer3 = new XEO.Layer(scene, {\n   priority: 3\n});\n\nvar material3 = new XEO.PhongMaterial(scene, {\n   diffuse: [0.2, 1, 0.2],\n   opacity: 0.2\n});\n\nvar scale3 = new XEO.Scale(scene, {\n   xyz: [9, 9, 9]\n});\n\nvar object3 = new XEO.GameObject(scene, {\n   camera: camera,\n   geometry: geometry,\n   stage: stage,\n   layer: layer3,\n   material: material3,\n   scale: scale3\n});\n\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Layer.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "priority",
                            "description": "The rendering priority,",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Modes": {
            "name": "Modes",
            "shortname": "Modes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/modes.js",
            "line": 1,
            "description": "A **Modes** toggles various xeoEngine modes and capabilities for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n\n<li>Though the rendering modes are defined by various different components attached to the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}},\nModes components provide a single point through which you can toggle them on or off.</li>\n\n<li>A Modes may be shared among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to toggle\nrendering modes for them as a group.</li>\n\n<li>See <a href=\"Shader.html#inputs\">Shader Inputs</a> for the variables that Modes create within xeoEngine's shaders.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Modes.png\"></img>\n\n## Example\n\nIn this example we have a Modes that toggles rendering modes for\ntwo {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. The properties of the Modes are initialised to their\ndefault values.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Create a Modes with default properties\nvar modes = new XEO.Modes(scene, {\n   pickable: true,             // Enable picking\n   clipping true,              // Enable effect of XEO.Clip components\n   transparent : false,        // Disable transparency\n   backfaces : true,           // Render backfaces\n   frontface : \"ccw\"\n});\n\n// Create two GameObjects whose rendering modes will be controlled by our Modes\n\nvar object1 = new XEO.GameObject(scene, {\n      modes: modes\n});\n\nvar object2 = new XEO.GameObject(scene, {\n      modes: modes\n});\n\n// Subscribe to change on the Modes' \"backfaces\" property\nvar handle = modes.on(\"backfaces\", function(value) {\n      //...\n});\n\n// Hide backfaces on our GameObjects by flipping the Modes' \"backfaces\" property,\n// which will also call our handler\nmodes.backfaces = false;\n\n// Unsubscribe from the Modes again\nmodes.off(handle);\n\n// When we destroy our Modes, the GameObjects will fall back\n// on the Scene's default Modes instance\nmodes.destroy();\n\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Modes in the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Modes.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pickable",
                            "description": "Whether to enable picking.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "clipping",
                            "description": "Whether to enable clipping by {{#crossLink \"Clips\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "transparent",
                            "description": "Whether to enable the transparency effect created by {{#crossLink \"Material\"}}Material{{/crossLink}}s when they have\n{{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} < 1.0. This mode will set attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} transparent (ie. to be rendered in a\ntransparency pass with blending enabled etc), while\nthe {{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} will indicate the **degree** of their transparency\n(ie. where opacity of 0.0 indicates maximum translucency and opacity of 1.0 indicates minimum translucency).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "backfaces",
                            "description": "Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "frontface",
                            "description": "The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "\"ccw\""
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Stage": {
            "name": "Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/rendering/stage.js",
            "line": 1,
            "description": "A **Stage** is a bin of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that is rendered in a specified priority with respect to\nother Stages in the same {{#crossLink \"Scene\"}}{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>When the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} renders, each Stage renders its bin\nof {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in turn, from the lowest priority Stage to the highest.</li>\n\n<li>Stages are typically used for ordering the render-to-texture steps in posteffects pipelines.</li>\n\n<li>You can control the render order of the individual {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} ***within*** a Stage\nby associating them with {{#crossLink \"Layer\"}}Layers{{/crossLink}}.</li>\n\n<li>{{#crossLink \"Layer\"}}Layers{{/crossLink}} are typically used to <a href=\"https://www.opengl.org/wiki/Transparency_Sorting\" target=\"_other\">transparency-sort</a> the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within Stages.</li>\n\n<li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} not explicitly attached to a Stage are implicitly\nattached to the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}}. which has\na {{#crossLink \"Stage/priority:property\"}}{{/crossLink}} value of zero.</li>\n\n</ul>\n\n<img src=\"../../../assets/images/Stage.png\"></img>\n\n## Example\n\nIn this example we're performing render-to-texture using {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} and\n{{#crossLink \"Texture\"}}Texture{{/crossLink}} components.\n\nNote how we use two prioritized Stages, to ensure that the {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} is\nrendered ***before*** the {{#crossLink \"Texture\"}}Texture{{/crossLink}} that consumes it.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// First stage: an Object that renders to a ColorTarget\n\nvar stage1 = new XEO.Stage(scene, {\n      priority: 0\n });\n\nvar geometry = new XEO.Geometry(scene); // Geometry with no parameters defaults to a 2x2x2 box\n\nvar colorTarget = new XEO.ColorTarget(scene);\n\nvar object1 = new XEO.GameObject(scene, {\n      stage: stage1,\n      geometry: geometry,\n      colorTarget: colorTarget\n });\n\n\n// Second stage: an Object with a Texture that sources from the ColorTarget\n\nvar stage2 = new XEO.Stage(scene, {\n      priority: 1\n });\n\nvar texture = new XEO.Texture(scene, {\n      target: colorTarget\n });\n\nvar material = new XEO.PhongMaterial(scene, {\n      textures: [\n          texture\n      ]\n });\n\nvar geometry2 = new XEO.Geometry(scene);\n\nvar object2 = new XEO.GameObject(scene, {\n      stage: stage2,\n      material: material,\n      geometry: geometry2\n });\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Stage in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Stage.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "priority",
                            "description": "The rendering priority for the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "pickable",
                            "description": "Indicates whether attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are pickable.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Task": {
            "name": "Task",
            "shortname": "Task",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/reporting/task.js",
            "line": 1,
            "description": "A **Task** represents an asynchronously-running process within a {{#crossLink \"Tasks\"}}Tasks{{/crossLink}}.\n\n## Overview\n\nSee the {{#crossLink \"Tasks\"}}{{/crossLink}} documentation for more information.</li>\n\n<img src=\"../../../assets/images/Task.png\"></img>",
            "submodule": "reporting",
            "extends": "Component"
        },
        "Tasks": {
            "name": "Tasks",
            "shortname": "Tasks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/reporting/tasks.js",
            "line": 1,
            "description": "A **Tasks** tracks general asynchronous tasks running within a {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} has a Tasks component, available via the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Scene/tasks:property\"}}tasks{{/crossLink}} property,\nwithin which it will create and destroy {{#crossLink \"Task\"}}Task{{/crossLink}} components to indicate what processes\nit's running internally.</li>\n\n<li>You can also manage your own {{#crossLink \"Task\"}}Task{{/crossLink}} components within that, to indicate what\napplication-level processes you are running.</li>\n</ul>\n\n<img src=\"../../../assets/images/Tasks.png\"></img>\n\n## Example\n\nThis example shows how to manage tasks and subscribe to their life cycles.\n\n````Javascript\n// Create a Scene\nvar scene = new XEO.Scene();\n\n// Get the Tasks tracker\nvar tasks = scene.tasks;\n\n// Subscribe to all task creations\ntasks.on(\"started\", function(task) {\n    console.log(\"Task started: \" + task.id +\", \" + task.description);\n});\n\n// Subscribe to all task completions\ntasks.on(\"completed\", function(task) {\n     console.log(\"Task completed: \" + task.id +\", \" + task.description);\n});\n\n// Subscribe to all task failures\ntasks.on(\"failed\", function(task) {\n    console.log(\"Task failed: \" + task.id +\", \" + task.description);\n});\n\n// Create and start Task \"foo\"\nvar taskFoo = tasks.create({\n    id: \"foo\", // Optional, unique ID generated automatically when omitted\n    description: \"Loading something\"\n});\n\n// Create and start Task \"bar\"\nvar taskBar = tasks.create({\n    id: \"bar\",\n    description: \"Loading something else\"\n});\n\n// Subscribe to completion of Task \"foo\"\ntaskFoo.on(\"completed\", function(task) {\n    console.log(\"Task completed: \" + task.id +\", \" + task.description);\n});\n\n// Subscribe to failure of a specific task\ntaskFoo.on(\"failed\", function(task) {\n    console.log(\"Task failed: \" + task.id +\", \" + task.description);\n});\n\n// Set Task \"foo\" as completed, via the Tasks\n// Fires the \"completed\" handler we registered above, also fires \"completed\" on the Task itself\ntasks.setCompleted(\"foo\");\n\n// Set Task \"bar\" as failed, this time directly on the Task in question\nmyTask2.setFailed();\n\n````",
            "submodule": "reporting",
            "is_constructor": 1,
            "extends": "Component"
        },
        "Shader": {
            "name": "Shader",
            "shortname": "Shader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/shaders/shader.js",
            "line": 1,
            "description": "A **Shader** specifies a custom GLSL shader to apply when rendering attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Normally you would rely on xeoEngine to automatically generate shaders for you, however the Shader component allows you to author them manually.</li>\n<li>You can use xeoEngine's reserved uniform and variable names in your Shaders to read all the WebGL state that's set by other\ncomponents on the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n<li>Use Shaders in combination with {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} components when you need to share\nthe same Shaders among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} while setting the Shaders' uniforms\ndifferently for each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.</li>\n<li>Use {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}}, {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}}\nand {{#crossLink \"Texture\"}}Texture{{/crossLink}} components to connect the output of one Shader as input into another Shader.</li>\n</ul>\n\n<img src=\"../../../assets/images/Shader.png\"></img>\n\n## Example\n\nThis example shows the simplest way to use a Shader, where we're just going to render a ripply water\npattern to a screen-aligned quad.\n\n<img src=\"../../assets/images/shaderExample1.png\"></img>\n\nIn our scene definition, we have an  {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that has a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} that is our\nscreen-aligned quad, plus a Shader that will render the fragments of that quad with our cool rippling water pattern.\nFinally, we animate the rippling by periodically updating the Shader's \"time\" uniform.\n\n````javascript\n\nvar scene = new XEO.Scene();\n\n// Shader that's used by our Object. Note the 'xeo_aPosition' and 'xeo_aUV attributes',\n// which will receive the positions and UVs from the Geometry. Also note the 'time'\n// uniform, which we'll be animating via Shader#setParams.\n\nvar shader = new XEO.Shader(scene, {\n\n      // Vertex shading stage\n      vertex: [\n          \"attribute vec3 xeo_aPosition;\",\n          \"attribute vec2 xeo_aUV;\",\n          \"varying vec2 vUv;\",\n          \"void main () {\",\n          \"    gl_Position = vec4(xeo_aPosition, 1.0);\",\n          \"    vUv = xeo_aUV;\",\n          \"}\"\n      ],\n\n      // Fragment shading stage\n      fragment: [\n          \"precision mediump float;\",\n\n          \"uniform float time;\",\n          \"varying vec2 vUv;\",\n\n          \"void main( void ) {\",\n          \"    vec2 sp = vUv;\",\n          \"    vec2 p = sp*5.0 - vec2(10.0);\",\n          \"    vec2 i = p;\",\n          \"    float c = 1.0;\",\n          \"    float inten = 0.10;\",\n          \"    for (int n = 0; n < 10; n++) {\",\n          \"        float t = time * (1.0 - (3.0 / float(n+1)));\",\n          \"        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\",\n          \"        c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\",\n          \"    }\",\n          \"    c /= float(10);\",\n          \"    c = 1.5-sqrt(c);\",\n          \"    gl_FragColor = vec4(vec3(c*c*c*c), 999.0) + vec4(0.0, 0.3, 0.5, 1.0);\",\n          \"}\"\n      ],\n\n      // Initial value for the 'time' uniform in the fragment stage.\n      params: {\n          time: 0.0\n      }\n });\n\n// A screen-aligned quad\nvar quad = new XEO.Geometry(scene, {\n      primitive:\"triangles\",\n      positions:[ 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0 ],\n      normals:[ -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0 ],\n      uv:[ 1, 1, 0, 1, 0, 0, 1, 0 ],\n      indices:[ 0, 1, 2, 0, 2, 3 ]\n });\n\nvar object = new XEO.GameObject(scene, {\n      shader: shader,\n      geometry: quad\n });\n\n````\nNow let's animate the \"time\" parameter on the Shader, to make the water ripple:\n\n```` javascript\nscene.on(\"tick\", function(params) {\n           shader.setParams({\n               time: params.timeElapsed\n           });\n       });\n````\n\n## <a name=\"inputs\">Shader Inputs</a>\n\nxeoEngine provides the following inputs for your shaders.\n\n#### Attributes\n\n*Attributes are used only in vertex shaders*\n\n| Attribute  | Description | Depends on  |\n|---|---|\n| attribute vec3 xeo_aPosition   | Geometry vertex positions | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} |\n| attribute vec2 xeo_aUV         | Geometry vertex UV coordinates | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/uv:property\"}}{{/crossLink}}  |\n| attribute vec3 xeo_aNormal     | Geometry vertex normals | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}}  |\n| attribute vec4 xeo_aColor      | Geometry vertex colors  | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}}  |\n| attribute vec4 xeo_aTangent    | Geometry vertex tangents, for normal mapping | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} and {{#crossLink \"Geometry/uv:property\"}}{{/crossLink}}  |\n\n#### Uniforms\n\n*Uniforms are used in vertex and fragment shaders*\n\n| Uniform  | Description | Depends on  |\n|---|---|\n| uniform mat4  xeo_uModelMatrix                                   | Modelling transform matrix | {{#crossLink \"Transform\"}}{{/crossLink}} |\n| uniform mat4  xeo_uModelNormalMatrix                             | Modelling transform normal matrix | {{#crossLink \"Geometry/normals:property\"}}Geometry normals{{/crossLink}} and {{#crossLink \"Transform\"}}{{/crossLink}} |\n| uniform mat4  xeo_uViewMatrix                                    | View transform matrix | {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} |\n| uniform mat4  xeo_uViewNormalMatrix                              | View transform normal matrix | {{#crossLink \"Geometry/normals:property\"}}Geometry normals{{/crossLink}} and {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} |\n| uniform mat4  xeo_uProjMatrix                                    | Projection transform matrix | {{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n| uniform float xeo_uZNear                                         | Near clipping plane |{{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n| uniform float xeo_uZFar                                          | Far clipping plane |{{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n|---|---|\n| uniform vec3  xeo_uLightAmbientColor                             | Color of the first {{#crossLink \"AmbientLight\"}}{{/crossLink}} in {{#crossLink \"Lights\"}}{{/crossLink}}| {{#crossLink \"AmbientLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightColor&lt;***N***&gt;                    | Diffuse color of {{#crossLink \"DirLight\"}}{{/crossLink}} or {{#crossLink \"PointLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"DirLight\"}}{{/crossLink}} or {{#crossLink \"PointLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightIntensity&lt;***N***&gt;                   | Specular color of {{#crossLink \"DirLight\"}}{{/crossLink}} or {{#crossLink \"PointLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"DirLight\"}}{{/crossLink}} or {{#crossLink \"PointLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightDir&lt;***N***&gt;                        | Direction of {{#crossLink \"DirLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"DirLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightPos&lt;***N***&gt;                        | Position of {{#crossLink \"PointLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"PointLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightConstantAttenuation&lt;***N***&gt;        | Constant attenuation factor for {{#crossLink \"PointLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"PointLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightLinearAttenuation&lt;***N***&gt;          | Linear attenuation factor for {{#crossLink \"PointLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"PointLight\"}}{{/crossLink}} |\n| uniform vec3 xeo_uLightQuadraticAttenuation&lt;***N***&gt;       | Quadratic attenuation factor for {{#crossLink \"PointLight\"}}{{/crossLink}} at index ***N*** in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"PointLight\"}}{{/crossLink}} |\n|---|---|\n| uniform vec3 xeo_uDiffuse;       |  | {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} |\n| uniform vec3 xeo_uSpecular;       |  | {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} |\n| uniform vec3 xeo_uEmissive;       |  | {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} |\n| uniform float xeo_uOpacity;       |  | {{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} |\n| uniform float xeo_uShininess;       |  | {{#crossLink \"PhongMaterial/shininess:property\"}}{{/crossLink}} |\n| uniform float xeo_uDiffuseFresnelBias;       |  | {{#crossLink \"Fresnel/bias:property\"}}{{/crossLink}} |\n\n#### Varying\n\n*Varying types are used in fragment shaders*\n\n| Varying | Description | Depends on  |\n|---|---|\n| varying vec4 xeo_vWorldPosition | |\n| varying vec4 xeo_vViewPosition | |\n| varying vec4 xeo_vColor | |\n\n#### Samplers\n\n*Samplers are used in fragment shaders*\n\n| Varying | Description | Depends on  |\n|---|---|",
            "submodule": "shaders",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Shader in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Shader.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "vertex",
                            "description": "GLSL Depends on code for the vertex shading staging.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "fragment",
                            "description": "GLSL source code for the fragment shading staging.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "params",
                            "description": "{Object} Values for uniforms defined in the vertex and/or fragment stages.",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ShaderParams": {
            "name": "ShaderParams",
            "shortname": "ShaderParams",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/shaders/shaderParams.js",
            "line": 1,
            "description": "A **ShaderParams** sets uniform values for {{#crossLink \"Shader\"}}Shaders{{/crossLink}} on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Use ShaderParams components when you need to share the same {{#crossLink \"Shader\"}}Shaders{{/crossLink}} among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}},\nwhile setting the {{#crossLink \"Shader\"}}Shaders{{/crossLink}}' uniforms differently for each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.</li>\n</ul>\n\n<img src=\"../../../assets/images/ShaderParams.png\"></img>\n\n## Example\n\nThis example shows the simplest way to use a {{#crossLink \"Shader\"}}Shader{{/crossLink}}, where we're just going to render a ripply water\npattern to a screen-aligned quad. As with all our examples, we're just creating the\nessential components while falling back on the <a href=\"XEO.Scene.html#defaults\" class=\"crosslink\">Scene's default components</a>\nfor everything else.\n\n<img src=\"../../assets/images/shaderParamsExample1.png\"></img>\n\nIn our scene definition, we have an  {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that has a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} that is our\nscreen-aligned quad, plus a {{#crossLink \"Shader\"}}Shader{{/crossLink}} that will render the fragments of that quad with our cool rippling water pattern.\nFinally, we animate the rippling by periodically updating the {{#crossLink \"Shader\"}}Shader{{/crossLink}}'s \"time\" uniform.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Shader that's shared by both our GameObjects. Note the 'xeo_aPosition' and 'xeo_aUV attributes',\n// which will receive the positions and UVs from the Geometry components. Also note the 'time'\n// uniform, which we'll be animating via the ShaderParams components.\n\nvar shader = new XEO.Shader(scene, {\n\n      // Vertex shading stage\n      vertex: [\n          \"attribute vec3 xeo_aPosition;\",\n          \"attribute vec2 xeo_aUV;\",\n          \"varying vec2 vUv;\",\n          \"void main () {\",\n          \"    gl_Position = vec4(xeo_aPosition, 1.0);\",\n          \"    vUv = xeo_aUV;\",\n          \"}\"\n      ],\n\n      // Fragment shading stage\n      fragment: [\n          \"precision mediump float;\",\n\n          \"uniform float time;\",\n          \"varying vec2 vUv;\",\n\n          \"void main( void ) {\",\n          \"    vec2 sp = vUv;\",\n          \"    vec2 p = sp*5.0 - vec2(10.0);\",\n          \"    vec2 i = p;\",\n          \"    float c = 1.0;\",\n          \"    float inten = 0.10;\",\n          \"    for (int n = 0; n < 10; n++) {\",\n          \"        float t = time * (1.0 - (3.0 / float(n+1)));\",\n          \"        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\",\n          \"        c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\",\n          \"    }\",\n          \"    c /= float(10);\",\n          \"    c = 1.5-sqrt(c);\",\n          \"    gl_FragColor = vec4(vec3(c*c*c*c), 999.0) + vec4(0.0, 0.3, 0.5, 1.0);\",\n          \"}\"\n      ],\n\n      // Initial values for the 'time' uniform in the fragment stage.\n      params: {\n          time: 0.0\n      }\n });\n\n// First Object using our Shader, with a quad covering the left half of the canvas,\n// along with its own ShaderParams to independently set its own values for the Shader's uniforms.\n\nvar quad1 = new XEO.Geometry(scene, {\n      primitive:\"triangles\",\n      positions:[ 1, 1, 0, 0, 1, 0, 0, -1, 0, 1, -1, 0 ],\n      normals:[ -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0 ],\n      uv:[ 1, 1, 0, 1, 0, 0, 1, 0 ],\n      indices:[ 0, 1, 2, 0, 2, 3 ]\n });\n\nvar shaderParams1 = new XEO.ShaderParams(scene, {\n      params: {\n          time: 0.0\n      }\n });\n\nvar object1 = new XEO.GameObject(scene, {\n      shader: shader,\n      geometry: quad1,\n      shaderParams1: shaderParams1\n });\n\n// Second Object using the Shader, with a quad covering the right half of the canvas,\n// along with its own ShaderParams to independently set its own values for the Shader's uniforms.\n\nvar quad2 = new XEO.Geometry(scene, {\n      primitive:\"triangles\",\n      positions:[ 1, 1, 0, 0, 1, 0, 0, -1, 0, 1, -1, 0 ],\n      normals:[ -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0 ],\n      uv:[ 1, 1, 0, 1, 0, 0, 1, 0 ],\n      indices:[ 0, 1, 2, 0, 2, 3 ]\n });\n\nvar shaderParams2 = new XEO.ShaderParams(scene, {\n      params: {\n          time: 0.0\n      }\n });\n\nvar object2 = new XEO.GameObject(scene, {\n      shader: shader,\n      geometry2: quad2,\n      shaderParams2: shaderParams2\n });\n\n````\nNow let's animate the \"time\" parameter on the Shader, for each Object independently:\n\n```` javascript\nscene.on(\"tick\", function(params) {\n\n           shaderParams1.setParams({\n               time: params.timeElapsed\n           });\n\n           shaderParams2.setParams({\n               time: params.timeElapsed  * 0.5\n           });\n       });\n````",
            "submodule": "shaders",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this ShaderParams in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ShaderParams.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "description": "{Object} The {{#crossLink \"Shader\"}}Shader{{/crossLink}} parameter values.",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Billboard": {
            "name": "Billboard",
            "shortname": "Billboard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/billboard.js",
            "line": 1,
            "description": "A **Billboard** causes associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to be always aligned towards the viewpoint.\n## Overview\nTODO\n<img src=\"../../../assets/images/Billboard.png\"></img>\n## Example\nTODO",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Billboard in the default\n {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Billboard.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Indicates if this Billboard is active or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "spherical",
                            "description": "Indicates if this Billboard is spherical (true) or cylindrical (false).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Quaternion": {
            "name": "Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/quaternion.js",
            "line": 1,
            "description": "A **Quaternion** applies a rotation transformation to associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n## Overview\n<ul>\n <li>Quaternion is a sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}.</li>\n <li>Instances of Transform and its sub-classes may be connected into hierarchies.</li>\n <li>A {{#crossLink \"GameObject\"}}{{/crossLink}} would be connected to a leaf Transform\n within a hierarchy, and would be transformed by each Transform on the path up to the root, in that order.</li>\n <li>See <a href=\"./Shader.html#inputs\">Shader Inputs</a> for the variables that Transform create within xeoEngine's shaders.</li>\n </ul>\n<img src=\"../../../assets/images/Quaternion.png\"></img>\n## Example\nIn this example we have two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n Quaternion, {{#crossLink \"Translate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\n The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\nvar scene = new XEO.Scene();\n\nvar quaternion = new XEO.Quaternion(scene, {\n    xyzw: [0, 0, 0, 1], // Unit quaternion\n});\n\nvar translate1 = new XEO.Translate(scene, {\n   parent: quaternion,\n   xyz: [-5, 0, 0] // Translate along -X axis\n});\n\nvar translate2 = new XEO.Translate(scene, {\n   parent: quaternion,\n   xyz: [5, 0, 0] // Translate along +X axis\n});\n\nvar scale = new XEO.Scale(scene, {\n   parent: translate2,\n   xyz: [1, 2, 1] // Scale x2 on Y axis\n});\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject1 = new XEO.GameObject(scene, {\n   transform: translate1,\n   geometry: geometry\n});\n\nvar gameObject2 = new XEO.GameObject(scene, {\n   transform: scale,\n   geometry: geometry\n});\n ````\n\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n\n````javascript\nvar scale2 = new XEO.Scale(scene, {\n   parent: translate1,\n   xyz: [1, 1, 2] // Scale x2 on Z axis\n});\n\ngameObject2.transform = scale2;\n ````\n\nAnd just for fun, we'll start spinning the Quaternion:\n\n````javascript\n// Rotate 0.2 degrees about Y-axis on each frame\nscene.on(\"tick\", function(e) {\n    quaternion.rotate([0, 1, 0, 0.2]);\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Quaternion in the default\n {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Quaternion.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "xyzw",
                            "description": "The initial Quaternion elements.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0,0,0,1]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Rotate": {
            "name": "Rotate",
            "shortname": "Rotate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/rotate.js",
            "line": 1,
            "description": "A **Rotate** rotates associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} about an axis vector.\n## Overview\n<ul>\n <li>Rotate is a sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n <li>Instances of Transform and its sub-classes may be connected into hierarchies.</li>\n <li>A {{#crossLink \"GameObject\"}}{{/crossLink}} would be connected to a leaf Transform\n within a hierarchy, and would be transformed by each Transform on the path up to the root, in that order.</li>\n <li>See <a href=\"./Shader.html#inputs\">Shader Inputs</a> for the variables that Transform create within xeoEngine's shaders.</li>\n </ul>\n\n<img src=\"../../../assets/images/Rotate.png\"></img>\n## Example\nIn this example we have two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n Rotate, {{#crossLink \"Translate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\n The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\n var scene = new XEO.Scene();\nvar rotate = new XEO.Rotate(scene, {\n    xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n    angle: 30\n});\nvar translate1 = new XEO.Translate(scene, {\n    parent: rotate,\n    xyz: [-5, 0, 0] // Translate along -X axis\n});\nvar translate2 = new XEO.Translate(scene, {\n    parent: rotate,\n    xyz: [5, 0, 0] // Translate along +X axis\n});\nvar scale = new XEO.Scale(scene, {\n    parent: translate2,\n    xyz: [1, 2, 1] // Scale x2 on Y axis\n});\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\nvar gameObject1 = new XEO.GameObject(scene, {\n    transform: translate1,\n    geometry: geometry\n});\nvar gameObject2 = new XEO.GameObject(scene, {\n    transform: scale,\n    geometry: geometry\n});\n ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\n var scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n});\ngameObject2.transform = scale2;\n ````\nAnd just for fun, we'll start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n````javascript\n // Rotate 0.2 degrees on each frame\n scene.on(\"tick\", function(e) {\n    rotate.angle += 0.2;\n});\n ````",
            "submodule": "transforms",
            "extends": "Transform"
        },
        "Scale": {
            "name": "Scale",
            "shortname": "Scale",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/scale.js",
            "line": 1,
            "description": "A **Scale** applies a scaling transformation to associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n## Overview\n<ul>\n <li>Scale is a sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n <li>Instances of Transform and its sub-classes may be connected into hierarchies.</li>\n <li>A {{#crossLink \"GameObject\"}}{{/crossLink}} would be connected to a leaf Transform\n within a hierarchy, and would be transformed by each Transform on the path up to the root, in that order.</li>\n <li>See <a href=\"./Shader.html#inputs\">Shader Inputs</a> for the variables that Transform create within xeoEngine's shaders.</li>\n </ul>\n<<img src=\"../../../assets/images/Scale.png\"></img>\n## Example\nIn this example we have two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n {{#crossLink \"Rotate\"}}{{/crossLink}}, {{#crossLink \"Translate\"}}{{/crossLink}} and Scale transforms.\n The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\n var scene = new XEO.Scene();\nvar rotate = new XEO.Rotate(scene, {\n    xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n    angle: 30\n});\nvar translate1 = new XEO.Translate(scene, {\n    parent: rotate,\n    xyz: [-5, 0, 0] // Translate along -X axis\n});\nvar translate2 = new XEO.Translate(scene, {\n    parent: rotate,\n    xyz: [5, 0, 0] // Translate along +X axis\n});\nvar scale = new XEO.Scale(scene, {\n    parent: translate2,\n    xyz: [1, 2, 1] // Scale x2 on Y axis\n});\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\nvar gameObject1 = new XEO.GameObject(scene, {\n    transform: translate1,\n    geometry: geometry\n});\nvar gameObject2 = new XEO.GameObject(scene, {\n    transform: scale,\n    geometry: geometry\n});\n ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\nvar scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n});\ngameObject2.transform = scale2;\n ````\nAnd just for fun, we'll start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n````javascript\n // Rotate 0.2 degrees on each frame\n scene.on(\"tick\", function(e) {\n    rotate.angle += 0.2;\n});\n ````",
            "submodule": "transforms",
            "extends": "Transform"
        },
        "Stationary": {
            "name": "Stationary",
            "shortname": "Stationary",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/stationary.js",
            "line": 1,
            "description": "A **Stationary** causes associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to (TODO).\n## Overview\nTODO\n<img src=\"../../../assets/images/Stationary.png\"></img>\n## Example\nTODO",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Stationary in the default\n {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Stationary.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Indicates if this Stationary is active or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Transform": {
            "name": "Transform",
            "shortname": "Transform",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/transform.js",
            "line": 1,
            "description": "A **Transform** defines a modelling matrix to transform attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Sub-classes of Transform are: {{#crossLink \"Translate\"}}{{/crossLink}},\n{{#crossLink \"Scale\"}}{{/crossLink}}, {{#crossLink \"Rotate\"}}{{/crossLink}}, and {{#crossLink \"Quaternion\"}}{{/crossLink}}</li>\n<li>Instances of Transform and its sub-classes may be connected into hierarchies.</li>\n<li>A {{#crossLink \"GameObject\"}}{{/crossLink}} would be connected to a leaf Transform\nwithin a hierarchy, and would be transformed by each Transform on the path up to the root, in that order.</li>\n<li>See <a href=\"./Shader.html#inputs\">Shader Inputs</a> for the variables that Transform create within xeoEngine's shaders.</li>\n</ul>\n\n<img src=\"../../../assets/images/Transform.png\"></img>\n\n## Example\n\nTODO\n\n<img src=\"../../../assets/images/transformHierarchy.png\"></img>\n\n````javascript\n\n// Position of entire table\n\nvar tablePos = new XEO.Translate({\n       xyz: [0, 6, 0]\n   });\n\n// Orientation of entire table\n\nvar tableRotate = new XEO.Rotate({\n       xyz: [1, 1, 1],\n       angle: 0,\n       parent: tablePos\n   });\n\n// Red table leg\n\nvar tableLg1 = new XEO.GameObject({\n       transform: new XEO.Scale({\n           xyz: [1, 3, 1],\n           parent: new XEO.Translate({\n               xyz: [-4, -6, -4],\n               parent: tableRotate\n           })\n       }),\n       material: new XEO.PhongMaterial({\n           diffuse: [1, 0.3, 0.3]\n       })\n   });\n\n// Green table leg\n\nvar tableLeg2 = new XEO.GameObject({\n       transform: new XEO.Scale({\n           xyz: [1, 3, 1],\n           parent: new XEO.Translate({\n               xyz: [4, -6, -4],\n               parent: tableRotate\n           })\n       }),\n       material: new XEO.PhongMaterial({\n           diffuse: [0.3, 1.0, 0.3]\n       })\n   });\n\n// Blue table leg\n\nvar tableLeg3 = new XEO.GameObject({\n       transform: new XEO.Scale({\n           xyz: [1, 3, 1],\n           parent: new XEO.Translate({\n               xyz: [4, -6, 4],\n               parent: tableRotate\n           })\n       }),\n       material: new XEO.PhongMaterial({\n           diffuse: [0.3, 0.3, 1.0]\n       })\n   });\n\n// Yellow table leg\n\nvar tableLeg4 = new XEO.GameObject({\n       transform: new XEO.Scale({\n           xyz: [1, 3, 1],\n           parent: new XEO.Translate({\n               xyz: [-4, -6, 4],\n               parent: tableRotate\n           })\n       }),\n       material: new XEO.PhongMaterial({\n           diffuse: [1.0, 1.0, 0.0]\n       })\n   });\n\n// Purple table top\n\nvar tableTop = new XEO.GameObject({\n       transform: new XEO.Scale({\n           xyz: [6, 0.5, 6],\n           parent: new XEO.Translate({\n               xyz: [0, -3, 0],\n               parent: tableRotate\n           })\n       }),\n       material: new XEO.PhongMaterial({\n           diffuse: [1.0, 0.3, 1.0]\n       })\n   });\n\n// Zoom camera out a bit\n// Get the Camera from one of the GameObjects\n\ntableTop.camera.view.zoom(10);\n\n// Spin the entire table\n\nvar angle = 0;\n\nscene.on(\"tick\", function () {\n\n       angle += 0.5;\n\n       tableRotate.angle = angle;\n   });\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Transform in the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}}  when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Transform by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Transform.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent Transform within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "matrix",
                            "description": "One-dimensional, sixteen element array of elements for the Transform, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Translate": {
            "name": "Translate",
            "shortname": "Translate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/transforms/translate.js",
            "line": 1,
            "description": "A **Translate** translates associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n## Overview\n<ul>\n<li>Translate is a sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n <li>Instances of Transform and its sub-classes may be connected into hierarchies.</li>\n <li>A {{#crossLink \"GameObject\"}}{{/crossLink}} would be connected to a leaf Transform\n within a hierarchy, and would be transformed by each Transform on the path up to the root, in that order.</li>\n <li>See <a href=\"./Shader.html#inputs\">Shader Inputs</a> for the variables that Transform create within xeoEngine's shaders.</li>\n </ul>\n</ul>\n<img src=\"../../../assets/images/Translate.png\"></img>\n## Example\nThis example has two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n {{#crossLink \"Rotate\"}}{{/crossLink}}, Translate and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\n The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\n var scene = new XEO.Scene();\nvar rotate = new XEO.Rotate(scene, {\n    xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n    angle: 30\n});\nvar translate1 = new XEO.Translate(scene, {\n    parent: rotate,\n    xyz: [-5, 0, 0] // Translate along -X axis\n});\nvar translate2 = new XEO.Translate(scene, {\n    parent: rotate,\n    xyz: [5, 0, 0] // Translate along +X axis\n});\nvar scale = new XEO.Scale(scene, {\n    parent: translate2,\n    xyz: [1, 2, 1] // Scale x2 on Y axis\n});\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\nvar gameObject1 = new XEO.GameObject(scene, {\n    transform: translate1,\n    geometry: geometry\n});\nvar gameObject2 = new XEO.GameObject(scene, {\n    transform: scale,\n    geometry: geometry\n});\n ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\n var scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n});\ngameObject2.transform = scale2;\n ````\nAnd just for fun, we'll start updating the second {{#crossLink \"Translate\"}}{{/crossLink}}:\n````javascript\n // Rotate 0.2 degrees on each frame\n scene.on(\"tick\", function(e) {\n    var xyz = translate2.xyz;\n    xyz[0] += 0.2;\n    translate2.xyz = xyz;\n});\n ````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Translate in the default\n {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Translate.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "xyzw",
                            "description": "The translation vector",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/component.js",
            "line": 1,
            "description": "**Component** is the base class for all xeoEngine components.\n## Contents\n<Ul>\n <li><a href=\"#ids\">Component IDs</a></li>\n <li><a href=\"#componentProps\">Properties</a></li>\n <li><a href=\"#metadata\">Metadata</a></li>\n <li><a href=\"#logging\">Logging</a></li>\n <li><a href=\"#destruction\">Destruction</a></li>\n </ul>\n## <a name=\"ids\">Component IDs</a>\nEvery Component has an ID that's unique within the parent {{#crossLink \"Scene\"}}{{/crossLink}}. xeoEngine generates\n the IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\n scene comprised of {{#crossLink \"Scene\"}}{{/crossLink}}, {{#crossLink \"Material\"}}{{/crossLink}}, {{#crossLink \"Geometry\"}}{{/crossLink}} and\n {{#crossLink \"GameObject\"}}{{/crossLink}} components, while letting xeoEngine generate its own ID for\n the {{#crossLink \"Geometry\"}}{{/crossLink}}:\n````javascript\n // The Scene is a Component too\n var scene = new XEO.Scene({\n    id: \"myScene\"\n});\nvar material = new XEO.PhongMaterial(scene, {\n    id: \"myMaterial\"\n});\nvar geometry = new XEO.Geometry(scene, {\n    id: \"myGeometry\"\n});\n// Let xeoEngine automatically generate the ID for our Object\n var object = new XEO.GameObject(scene, {\n    material: material,\n    geometry: geometry\n});\n ````\nWe can then find those components like this:\n````javascript\n // Find the Scene\n var theScene = XEO.scenes[\"myScene\"];\n// Find the Material\n var theMaterial = theScene.components[\"myMaterial\"];\n ````\n## <a name=\"componentProps\">Properties</a>\nAlmost every property on a xeoEngine Component fires a change event when you update it. For example, we can subscribe\n to the {{#crossLink \"PhongMaterial/diffuse:event\"}}{{/crossLink}} event that a\n {{#crossLink \"Material\"}}{{/crossLink}} fires when its {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}}\n property is updated, like so:\n````javascript\n // Bind a change callback to a property\n var handle = material.on(\"diffuse\", function(diffuse) {\n    console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n});\n// Change the property value, which fires the callback\n material.diffuse = [ 0.0, 0.5, 0.5 ];\n// Unsubscribe from the property change event\n material.off(handle);\n ````\nWe can also subscribe to changes in the way components are attached to each other, since components are properties\n of other components. For example, we can subscribe to the '{{#crossLink \"Object/material:event\"}}{{/crossLink}}' event that a\n {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} fires when its {{#crossLink \"Object/material:property\"}}{{/crossLink}}\n property is set to a different {{#crossLink \"Material\"}}Material{{/crossLink}}:\n```` javascript\n // Bind a change callback to the Object's Material\n object1.on(\"material\", function(material) {\n    console.log(\"Object's Material has changed to: \" + material.id);\n});\n// Now replace that Material with another\n object1.material = new XEO.PhongMaterial({\n    id: \"myOtherMaterial\",\n    diffuse: [ 0.3, 0.3, 0.6 ]\n    //..\n});\n ````\n## <a name=\"metadata\">Metadata</a>\nYou can set optional **metadata** on your Components, which can be anything you like. These are intended\n to help manage your components within your application code or content pipeline. You could use metadata to attach\n authoring or version information, like this:\n````javascript\n // Scene with authoring metadata\n var scene = new XEO.Scene({\n    id: \"myScene\",\n    meta: {\n        title: \"My awesome 3D scene\",\n        author: \"@xeolabs\",\n        date: \"February 13 2015\"\n    }\n});\n// Material with descriptive metadata\n var material = new XEO.PhongMaterial(scene, {\n    id: \"myMaterial\",\n    diffuse: [1, 0, 0],\n    meta: {\n        description: \"Bright red color with no textures\",\n        version: \"0.1\",\n        foo: \"bar\"\n    }\n});\n ````\nAs with all properties, you can subscribe and change the metadata like this:\n````javascript\n // Subscribe to changes to the Material's metadata\n material.on(\"meta\", function(value) {\n    console.log(\"Metadata changed: \" + JSON.stringify(value));\n});\n// Change the Material's metadata, firing our change handler\n material.meta = {\n    description: \"Bright red color with no textures\",\n    version: \"0.2\",\n    foo: \"baz\"\n};\n ````\n## <a name=\"logging\">Logging</a>\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n````javascript\n material.log(\"Everything is fine, situation normal.\");\n material.warn(\"Wait, whats that red light?\");\n material.error(\"Aw, snap!\");\n ````\nThe logged messages will look like this in the console:\n````text\n [LOG]   myMaterial: Everything is fine, situation normal.\n [WARN]  myMaterial: Wait, whats that red light..\n [ERROR] myMaterial: Aw, snap!\n ````\n## <a name=\"destruction\">Destruction</a>\nGet notification of destruction directly on the Components:\n````javascript\n material.on(\"destroyed\", function() {\n    this.log(\"Component was destroyed: \" + this.id);\n});\n ````\nOr get notification of destruction of any Component within its {{#crossLink \"Scene\"}}{{/crossLink}}, indiscriminately:\n````javascript\n scene.on(\"componentDestroyed\", function(component) {\n    this.log(\"Component was destroyed: \" + component.id);\n});\n ````\nThen destroy a component like this:\n````javascript\n material.destroy();\n ````\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\n will then automatically link to the {{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/material:property\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Component\n within the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Component.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "isDefault",
                            "description": "Set true when this is one of xeoEngine's default components.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Scene": {
            "name": "Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/scene.js",
            "line": 1,
            "description": "A **Scene** models a 3D scene as a fully-editable and serializable <a href=\"http://gameprogrammingpatterns.com/component.html\" target=\"_other\">component-object</a> graph.\n\n## Contents\n\n<Ul>\n<li><a href=\"#sceneStructure\">Scene Structure</a></li>\n<li><a href=\"#sceneCanvas\">The Scene Canvas</a></li>\n<li><a href=\"#findingByID\">Finding Scenes and Components by ID</a></li>\n<li><a href=\"#defaults\">The Default Scene</a></li>\n<li><a href=\"#savingAndLoading\">Saving and Loading Scenes</a></li>\n</ul>\n\n## <a name=\"sceneStructure\">Scene Structure</a>\n\nA Scene contains a soup of instances of various {{#crossLink \"Component\"}}Component{{/crossLink}} subtypes, such as\n{{#crossLink \"GameObject\"}}GameObject{{/crossLink}}, {{#crossLink \"Camera\"}}Camera{{/crossLink}}, {{#crossLink \"Material\"}}Material{{/crossLink}},\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} etc.  Each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} has a link to one of each of the other types,\nand the same component instances can be shared among many {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n*** Under the hood:*** Within xeoEngine, each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} represents a draw call,\nwhile its components define all the WebGL state that will be bound for that call. To render a Scene, xeoEngine traverses\nthe graph to bind the states and make the draw calls, while using many optimizations for efficiency (eg. draw list caching and GL state sorting).\n\n<img src=\"../../../assets/images/Scene.png\"></img>\n\n#### Default Components\n\nA Scene provides its own default *flyweight* instance of each component type\n(except for {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}). Each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} you create\nwill implicitly link to a default instance for each type of component that you don't explicitly link it to. For example, when you create a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} without\na {{#crossLink \"Lights\"}}Lights{{/crossLink}}, the {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} will link to the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/lights:property\"}}{{/crossLink}}. This mechanism\nprovides ***training wheels*** to help you learn the API, and also helps keep examples simple, where many of the examples in this\ndocumentation are implicitly using those defaults when they are not central to discussion.\n\nAt the bottom of the diagram above, the blue {{#crossLink \"Material\"}}Material{{/crossLink}},\n{{#crossLink \"Geometry\"}}Geometry{{/crossLink}} and {{#crossLink \"Camera\"}}Camera{{/crossLink}} components\nrepresent some of the defaults provided by our Scene. For brevity, the diagram only shows those three\ntypes of component (there are actually around two dozen).\n\nNote that we did not link the second {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} to a\n{{#crossLink \"Material\"}}Material{{/crossLink}}, causing it to be implicitly linked to our Scene's\ndefault {{#crossLink \"Material\"}}Material{{/crossLink}}. That {{#crossLink \"Material\"}}Material{{/crossLink}}\nis the only default our {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are falling back on in this example, with other\ndefault component types, such as the {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} and the {{#crossLink \"Camera\"}}Camera{{/crossLink}},\nhanging around dormant until a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} is linked to them.\n\nNote also how the same {{#crossLink \"Camera\"}}Camera{{/crossLink}} is linked to both of our\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. Whenever we update that\n{{#crossLink \"Camera\"}}Camera{{/crossLink}}, it's going to affect both of those\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in one shot. Think of the defaults as the Scene's ***global*** component\ninstances, which you may optionally override on a per-{{#crossLink \"GameObject\"}}GameObject{{/crossLink}} basis with your own\ncomponent instances. In many Scenes, for example, you might not even bother to create your own {{#crossLink \"Camera\"}}Camera{{/crossLink}} and just\nlet all your {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} fall back on the default one.\n\n## Example\n\nHere's the JavaScript for the diagram above. As mentioned earlier, note that we only provide components for our {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} when we need to\noverride the default components that the Scene would have provided them, and that the same component instances may be shared among multiple Objects.\n\n```` javascript\nvar scene = new XEO.Scene({\n      id: \"myScene\"   // ID is optional on all components\n });\n\nvar material = new XEO.PhongMaterial(myScene, {\n      id: \"myMaterial\",         // We'll use this ID to show how to find components by ID\n      diffuse: [ 0.6, 0.6, 0.7 ],\n      specular: [ 1.0, 1.0, 1.0 ]\n  });\n\nvar geometry = new XEO.Geometry(myScene, {\n      primitive: \"triangles\",\n      positions: [...],\n      normals: [...],\n      uvs: [...],\n      indices: [...]\n });\n\nvar camera = new XEO.Camera(myScene);\n\nvar object1 = new XEO.GameObject(myScene, {\n      material: myMaterial,\n      geometry: myGeometry,\n      camera: myCamera\n });\n\n// Second object uses Scene's default Material\nvar object3 = new XEO.GameObject(myScene, {\n      geometry: myGeometry,\n      camera: myCamera\n });\n````\n\n## <a name=\"sceneCanvas\">The Scene Canvas</a>\n\nSee the {{#crossLink \"Canvas\"}}{{/crossLink}} component.\n\n## <a name=\"findingByID\">Finding Scenes and Components by ID</a>\n\nWe can have as many Scenes as we want, and can find them by ID on the {{#crossLink \"XEO\"}}XEO{{/crossLink}} object's {{#crossLink \"XEO/scenes:property\"}}scenes{{/crossLink}} map:\n\n````javascript\nvar theScene = XEO.scenes[\"myScene\"];\n````\n\nLikewise we can find a Scene's components within the Scene itself, such as the {{#crossLink \"Material\"}}Material{{/crossLink}} we\ncreated earlier:\n\n````javascript\nvar theMaterial = myScene.components[\"myMaterial\"];\n````\n\n## <a name=\"defaults\">The Default Scene</a>\n\nWhen you create components without specifying a Scene for them, xeoEngine will put them in its default Scene.\n\nFor example:\n\n```` javascript\nvar material2 = new XEO.PhongMaterial({\n   diffuse: { r: 0.6, g: 0.6, b: 0.7 },\n   specular: { 1.0, 1.0, 1.0 }\n});\n\nvar geometry2 = new XEO.Geometry({\n    primitive: \"triangles\",\n    positions: [...],\n    normals: [...],\n    uvs: [...],\n    indices: [...]\n});\n\nvar camera = new XEO.Camera();\n\nvar object1 = new XEO.GameObject({\n    material: material2,\n    geometry: geometry2,\n    camera: camera2\n});\n````\n\nYou can then obtain the default Scene from the {{#crossLink \"XEO\"}}XEO{{/crossLink}} object's\n{{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} property:\n\n````javascript\nvar theScene = XEO.scene;\n````\n\nor from one of the components we just created:\n````javascript\nvar theScene = material2.scene;\n````\n\n***Note:*** xeoEngine creates the default Scene as soon as you either\ncreate your first Sceneless {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} or reference the\n{{#crossLink \"XEO\"}}XEO{{/crossLink}} object's {{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} property. Expect to\nsee the HTML canvas for the default Scene magically appear in the page when you do that.\n\n## <a name=\"savingAndLoading\">Saving and Loading Scenes</a>\n\nThe entire runtime state of a Scene can be serialized and deserialized to and from JSON. This means you can create a\nScene, then save it and restore it again to exactly how it was when you saved it.\n\n````javascript\n// Serialize the scene to JSON\nvar json = myScene.json;\n\n// Create another scene from that JSON, in a fresh canvas:\nvar myOtherScene = new XEO.Scene({\n     json: json\n });\n\n````\n\n***Note:*** this will save your {{#crossLink \"Geometry\"}}Geometry{{/crossLink}}s' array properties\n({{#crossLink \"Geometry/positions:property\"}}positions{{/crossLink}}, {{#crossLink \"Geometry/normals:property\"}}normals{{/crossLink}},\n{{#crossLink \"Geometry/indices:property\"}}indices{{/crossLink}} etc) as JSON arrays, which may stress your browser\nif those arrays are huge.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Scene parameters",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all Scenes in xeoEngine, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Scene.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "canvasId",
                            "description": "ID of existing HTML5 canvas in the DOM - creates a full-page canvas automatically if this is omitted",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "components",
                            "description": "JSON array containing parameters for {{#crossLink \"Component\"}}Component{{/crossLink}} subtypes to immediately create within the Scene.",
                            "type": "Array(Object)",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "XEO": {
            "name": "XEO",
            "shortname": "XEO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "XEO",
            "file": "src/xeo.js",
            "line": 1,
            "description": "The xeoEngine namespace.",
            "mainName": "XEO",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "static": 1,
            "author": "xeolabs / http://xeolabs.com/"
        }
    },
    "classitems": [
        {
            "file": "src/_renderer/chunks/chunk.js",
            "line": 5,
            "description": "A chunk of WebGL state changes to render a XEO.renderer.State.",
            "access": "private",
            "tagname": "",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunk.js",
            "line": 13,
            "description": "Initialises the chunk.",
            "params": [
                {
                    "name": "id",
                    "description": "Chunk ID",
                    "type": "Number"
                },
                {
                    "name": "program",
                    "description": "Program to render this chunk",
                    "type": "XEO.renderer.Program"
                },
                {
                    "name": "state",
                    "description": "The state rendered by this chunk",
                    "type": "XEO.renderer.State"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 5,
            "description": "Manages creation, reuse and destruction of {@link XEO.renderer.Chunk}s.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 12,
            "description": "Sub-classes of {@link XEO.renderer.Chunk} provided by this factory",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 17,
            "description": "Creates a chunk type.",
            "params": [
                {
                    "name": "params",
                    "description": "Members to augment the chunk class prototype with",
                    "props": [
                        {
                            "name": "type",
                            "description": "Type name for the new chunk class"
                        },
                        {
                            "name": "draw",
                            "description": "Method to render the chunk in draw render"
                        },
                        {
                            "name": "pickObject",
                            "description": ""
                        },
                        {
                            "name": "pickPrimitive",
                            "description": ""
                        }
                    ]
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 54,
            "description": "Gets a chunk from this factory.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 98,
            "description": "Releases a chunk back to this factory.",
            "params": [
                {
                    "name": "chunk",
                    "description": "Chunk to release",
                    "type": "XEO.renderer.Chunk"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 121,
            "description": "Restores the chunks in this factory after a WebGL context recovery.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/clipsChunk.js",
            "line": 5,
            "description": "Create display state chunk type for draw and pick render of user clipping planes",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/colorBufferChunk.js",
            "line": 5,
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/depthBufferChunk.js",
            "line": 5,
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/geometryChunk.js",
            "line": 5,
            "description": "Create display state chunk type for draw and pick render of geometry",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/chunks/renderTargetChunk.js",
            "line": 5,
            "description": "Create display state chunk type for draw and pick render of renderTarget",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 5,
            "description": "Buffer for vertices and indices",
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL"
                },
                {
                    "name": "type",
                    "description": "Eg. ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER"
                },
                {
                    "name": "data",
                    "description": "WebGL array wrapper"
                },
                {
                    "name": "numItems",
                    "description": "Count of items in array wrapper"
                },
                {
                    "name": "itemSize",
                    "description": "Size of each item"
                },
                {
                    "name": "usage",
                    "description": "Eg. STATIC_DRAW"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 17,
            "description": "True when this buffer is allocated and ready to go",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 41,
            "description": "Allocates this buffer",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 70,
            "description": "Updates data within this buffer, reallocating if needed.",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 105,
            "description": "Binds this buffer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 117,
            "description": "Unbinds this buffer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 129,
            "description": "Destroys this buffer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/attribute.js",
            "line": 5,
            "description": "An attribute within a {@link XEO.renderer.webgl.Shader}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 22,
            "description": "Wrapper for a WebGL program",
            "params": [
                {
                    "name": "stats",
                    "description": "Collects runtime statistics"
                },
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "vertex",
                    "description": "Source code for vertex shader"
                },
                {
                    "name": "fragment",
                    "description": "Source code for fragment shader"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 36,
            "description": "True when successfully allocated",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 42,
            "description": "True when successfully compiled",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 48,
            "description": "True when successfully linked",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 54,
            "description": "True when successfully validated",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 60,
            "description": "Contains error log on failure to allocate, compile, validate or link",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 7,
            "description": "True as soon as this buffer is allocated and ready to go",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 12,
            "description": "The HTMLCanvasElement",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 17,
            "description": "WebGL context",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 22,
            "description": "Buffer resources, set up in #_touch",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 27,
            "description": "True while this buffer is bound",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 32,
            "description": "Optional explicit buffer size - when omitted, buffer defaults to canvas size",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 38,
            "description": "Sets custom dimensions for this buffer.\n\nBuffer dynamically re-sizes to canvas when size is null.",
            "params": [
                {
                    "name": "size",
                    "description": "Two-element size vector",
                    "type": "Array of Number"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 49,
            "description": "Called after WebGL context is restored.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 59,
            "description": "Binds this buffer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 174,
            "description": "Clears this renderbuffer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 185,
            "description": "Reads buffer pixel at given coordinates",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 196,
            "description": "Unbinds this renderbuffer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 204,
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 232,
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 5,
            "description": "A vertex/fragment shader in a program",
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "type",
                    "description": "gl.VERTEX_SHADER | gl.FRAGMENT_SHADER"
                },
                {
                    "name": "source",
                    "description": "Source code for shader"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 14,
            "description": "True if this shader successfully allocated. When false,\n#error will contain WebGL the error log.",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 21,
            "description": "True if this shader successfully compiled. When false,\n#error will contain WebGL the error log.",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 28,
            "description": "Saves the WebGL error log when this shader failed to allocate or compile.",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 34,
            "description": "The GLSL for this shader.",
            "type": "{Array of String}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 40,
            "description": "WebGL handle to this shader's GPU resource",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/webgl/webgl.js",
            "line": 7,
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 5,
            "description": "An object within a XEO.renderer.Renderer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 10,
            "description": "ID for this object, unique among all objects in the Renderer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 15,
            "description": "Hash code for this object, unique among all objects in the Renderer",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 20,
            "description": "State sort key, computed from #layer, #program and #material",
            "type": "Number",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 26,
            "description": "Sequence of state chunks applied to render this object",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 31,
            "description": "Shader programs that render this object, also used for (re)computing #sortKey",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 36,
            "description": "State for the XEO.renderer.Stage that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 41,
            "description": "State for the XEO.renderer.Modes that this object was compiled from, used for visibility cull",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 46,
            "description": "State for the XEO.renderer.Layer that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 51,
            "description": "State for the XEO.renderer.Material that this object was compiled from, used for (re)computing #sortKey",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 7,
            "description": "Vertex and fragment shaders for pick and draw",
            "params": [
                {
                    "name": "stats",
                    "description": "Collects runtime statistics",
                    "type": "*"
                },
                {
                    "name": "hash",
                    "description": "Hash code which uniquely identifies the capabilities of the program, computed from hashes on the {@link Scene_Core}s that the {@link XEO.renderer.ProgramSource} composed to render",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "Sourcecode from which the the program is compiled in {@link #build}",
                    "type": "XEO.renderer.ProgramSource"
                },
                {
                    "name": "gl",
                    "description": "WebGL context",
                    "type": "WebGLRenderingContext"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 19,
            "description": "Hash code for this program's capabilities, same as the hash on {@link #source}",
            "type": "String",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 25,
            "description": "Source code for this program's shaders",
            "type": "renderer.ProgramSource",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 31,
            "description": "WebGL context on which this program's shaders are allocated",
            "type": "WebGLRenderingContext",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 37,
            "description": "The drawing program",
            "type": "webgl.Program",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 43,
            "description": "The object picking program",
            "type": "webgl.Program",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 49,
            "description": "The primitive picking program",
            "type": "webgl.Program",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 55,
            "description": "The count of display objects using this program",
            "type": "Number",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 61,
            "description": "True when successfully allocated",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 67,
            "description": "True when successfully compiled",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 73,
            "description": "True when successfully linked",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 79,
            "description": "True when successfully validated",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 85,
            "description": "Contains error log on failure to allocate, compile, validate or link",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 95,
            "description": "Creates the render and pick programs.\n This is also re-called to re-create them after WebGL context loss.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 5,
            "description": "Manages {@link XEO.renderer.ProgramState} instances.",
            "params": [
                {
                    "name": "stats",
                    "description": "Collects runtime statistics"
                },
                {
                    "name": "cfg",
                    "description": "Configs"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 20,
            "description": "Get a program that fits the given set of states.\nReuses any free program in the pool that matches the given hash.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 53,
            "description": "Release a program back to the pool.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 74,
            "description": "Rebuild all programs in the pool after WebGL context was lost and restored.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 5,
            "description": "Source code for pick and draw shader programs, to be compiled into one or more {@link XEO.renderer.Program}s",
            "params": [
                {
                    "name": "hash",
                    "description": "Hash code identifying the rendering capabilities of the programs",
                    "type": "String"
                },
                {
                    "name": "vertexPickObject",
                    "description": "Vertex shader source for object picking.",
                    "type": "String"
                },
                {
                    "name": "fragmentPickObject",
                    "description": "Fragment shader source for object picking.",
                    "type": "String"
                },
                {
                    "name": "vertexPickPrimitive",
                    "description": "Vertex shader source for primitive picking.",
                    "type": "String"
                },
                {
                    "name": "fragmentPickPrimitive",
                    "description": "Fragment shader source for primitive picking.",
                    "type": "String"
                },
                {
                    "name": "vertexDraw",
                    "description": "Vertex shader source for drawing.",
                    "type": "String"
                },
                {
                    "name": "fragmentDraw",
                    "description": "Fragment shader source for drawing.",
                    "type": "String"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 21,
            "description": "Hash code identifying the capabilities of the {@link XEO.renderer.Program} that is compiled from this source",
            "type": "String",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 27,
            "description": "Vertex shader source for object picking",
            "type": "{Array of String]",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 33,
            "description": "Fragment shader source for object picking.",
            "type": "{Array of String}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 39,
            "description": "Vertex shader source for primitive picking.",
            "type": "{Array of String]",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 45,
            "description": "Fragment shader source for primitive picking.",
            "type": "{Array of String}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 51,
            "description": "Vertex shader source for drawing.",
            "type": "{Array of String}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 57,
            "description": "Fragment shader source for drawing.",
            "type": "{Array of String}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 63,
            "description": "Count of {@link XEO.renderer.Program}s compiled from this program source code",
            "type": "Number",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSourceFactory.js",
            "line": 5,
            "description": "Manages creation, sharing and recycle of {@link XEO.renderer.ProgramSource} instances",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSourceFactory.js",
            "line": 26,
            "description": "Get source code for a program to render the given states.\nAttempts to reuse cached source code for the given hash.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/programSourceFactory.js",
            "line": 98,
            "description": "Releases program source code back to this factory.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 7,
            "description": "Renderer compiled from a {@link SceneJS.Scene}, providing methods to render and pick.\n\n <p>A Renderer is a container of {@link XEO.renderer.Object}s which are created (or updated) by a depth-first\n <b>compilation traversal</b> of a {@link SceneJS.Scene}.</b>\n\n <h2>Rendering Pipeline</h2>\n\n <p>Conceptually, a Renderer implements a pipeline with the following stages:</p>\n\n <ol>\n <li>Create or update {@link XEO.renderer.Object}s during scene compilation</li>\n <li>Organise the {@link XEO.renderer.Object} into an <b>object list</b></li>\n <li>Determine the GL state sort order for the object list</li>\n <li>State sort the object list</li>\n <li>Create a <b>draw list</b> containing {@link XEO.renderer.Chunk}s belonging to the {@link XEO.renderer.Object}s in the object list</li>\n <li>Render the draw list to draw the image</li>\n </ol>\n\n <p>An update to the scene causes the pipeline to be re-executed from one of these stages, and SceneJS is designed\n so that the pipeline is always re-executed from the latest stage possible to avoid redoing work.</p>\n\n <p>For example:</p>\n\n <ul>\n <li>when an object is created or updated, we need to (re)do stages 2, 3, 4, 5 and 6</li>\n <li>when an object is made invisible, we need to redo stages 5 and 6</li>\n <li>when an object is assigned to a different scene render layer (works like a render bin), we need to redo\n stages 3, 4, 5, and 6</li>\n<li>when the colour of an object changes, or maybe when the viewpoint changes, we simplt redo stage 6</li>\n </ul>\n\n <h2>Object Creation</h2>\n <p>The object soup (stage 1) is constructed by a depth-first traversal of the scene graph, which we think of as\n \"compiling\" the scene graph into the Renderer. As traversal visits each scene component, the component's state core is\n set on the Renderer (such as {@link #flags}, {@link #layer}, {@link #renderer} etc), which we think of as the\n cores that are active at that instant during compilation. Each of the scene's leaf components is always\n a {@link SceneJS.Geometry}, and when traversal visits one of those it calls {@link #buildObject} to create an\n object in the soup. For each of the currently active cores, the object is given a {@link XEO.renderer.Chunk}\n containing the WebGL calls for rendering it.</p>\n\n <p>The object also gets a shader (implemented by {@link XEO.renderer.Program}), taylored to render those state cores.</p>\n\n <p>Limited re-compilation may also be done on portions of a scene that have been added or sufficiently modified. When\n traversal visits a {@link SceneJS.Geometry} for which an object already exists in the display, {@link #buildObject}\n may update the {@link XEO.renderer.Chunk}s on the object as required for any changes in the core soup since the\n last time the object was built. If differences among the cores require it, then {@link #buildObject} may also replace\n the object's {@link XEO.renderer.Program} in order to render the new core soup configuration.</p>\n\n <p>So in summary, to each {@link XEO.renderer.Object} it builds, {@link #buildObject} creates a list of\n {@link XEO.renderer.Chunk}s to render the set of component state cores that are currently set on the {@link XEO.Renderer}.\n When {@link #buildObject} is re-building an existing object, it may replace one or more {@link XEO.renderer.Chunk}s\n for state cores that have changed from the last time the object was built or re-built.</p>\n\n <h2>Object Destruction</h2>\n <p>Destruction of a scene graph branch simply involves a call to {@link #removeObject} for each {@link SceneJS.Geometry}\n in the branch.</p>\n\n <h2>Draw List</h2>\n <p>The draw list is actually comprised of two lists of state chunks: a \"pick\" list to render a pick buffer\n for colour-indexed GPU picking, along with a \"draw\" list for normal image rendering. The chunks in these lists\n are held in the state-sorted order of their objects in #_objectList, with runs of duplicate states removed.</p>\n\n <p>After a scene update, we set a flag on the display to indicate the stage we will need to redo from. The pipeline is\n then lazy-redone on the next call to #render or #pick.</p>",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 96,
            "description": "Indicates if the canvas is transparent",
            "type": "{boolean}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 136,
            "description": "Visibility render state.",
            "itemtype": "property",
            "name": "visibility",
            "type": "{renderer.Visibility}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 143,
            "description": "Modes render state.",
            "itemtype": "property",
            "name": "modes",
            "type": "{renderer.Modes}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 150,
            "description": "Render state for an effects layer.",
            "itemtype": "property",
            "name": "layer",
            "type": "{renderer.Layer}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 157,
            "description": "Render state for an effects pipeline stage.",
            "itemtype": "property",
            "name": "stage",
            "type": "{renderer.Layer}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 164,
            "description": "Depth buffer render state.",
            "itemtype": "property",
            "name": "depthBuf",
            "type": "{renderer.DepthBuf}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 171,
            "description": "Color buffer render state.",
            "itemtype": "property",
            "name": "colorBuf",
            "type": "{renderer.ColorBuf}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 178,
            "description": "Lights render state.",
            "itemtype": "property",
            "name": "lights",
            "type": "{renderer.Lights}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 185,
            "description": "Material render state.",
            "itemtype": "property",
            "name": "material",
            "type": "{renderer.Material}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 192,
            "description": "Environmental reflection render state.",
            "itemtype": "property",
            "name": "reflection",
            "type": "{renderer.Reflect}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 199,
            "description": "Modelling transform render state.",
            "itemtype": "property",
            "name": "modelTransform",
            "type": "{renderer.ModelTransform}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 206,
            "description": "View transform render state.",
            "itemtype": "property",
            "name": "viewTransform",
            "type": "{renderer.ViewTransform}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 213,
            "description": "Projection transform render state.",
            "itemtype": "property",
            "name": "projTransform",
            "type": "{renderer.ProjTransform}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 220,
            "description": "Billboard render state.",
            "itemtype": "property",
            "name": "billboard",
            "type": "{renderer.Billboard}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 227,
            "description": "Stationary render state.",
            "itemtype": "property",
            "name": "stationary",
            "type": "{renderer.Stationary}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 234,
            "description": "Color target render state.",
            "itemtype": "property",
            "name": "colorTarget",
            "type": "{renderer.RenderTarget}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 241,
            "description": "Depth target render state.",
            "itemtype": "property",
            "name": "depthTarget",
            "type": "{renderer.RenderTarget}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 248,
            "description": "Cross-section planes render state.",
            "itemtype": "property",
            "name": "clips",
            "type": "{renderer.Clips}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 255,
            "description": "Morph targets render state.",
            "itemtype": "property",
            "name": "morphTargets",
            "type": "{renderer.MorphTargets}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 262,
            "description": "Custom shader render state.",
            "itemtype": "property",
            "name": "shader",
            "type": "{renderer.Shader}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 269,
            "description": "Render state providing custom shader params.",
            "itemtype": "property",
            "name": "shaderParams",
            "type": "{renderer.Shader}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 276,
            "description": "Geometry render state.",
            "itemtype": "property",
            "name": "geometry",
            "type": "{renderer.Geometry}",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 286,
            "description": "Flags the object list as needing to be rebuilt from renderer objects\non the next call to {@link #render} or {@link #pick}. Setting this\nwill cause the rendering pipeline to be executed from stage #2\n(see class comment), causing object list rebuild, state order\ndetermination, state sort, draw list construction and image render.",
            "type": "Boolean",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 296,
            "description": "Flags the object list as needing state orders to be (re)computed on the\nnext call to {@link #render} or {@link #pick}. Setting this will cause\nthe rendering pipeline to be executed from stage #3 (see class comment),\ncausing state order determination, state sort, draw list construction\nand image render.",
            "type": "Boolean",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 306,
            "description": "Flags the object list as needing to be state-sorted on the next call\nto {@link #render} or {@link #pick}.Setting this will cause the\nrendering pipeline to be executed from stage #4 (see class comment),\ncausing state sort, draw list construction and image render.",
            "type": "Boolean",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 315,
            "description": "Flags the draw list as needing to be rebuilt from the object list on\nthe next call to {@link #render} or {@link #pick}.  Setting this will\ncause the rendering pipeline to be executed from stage #5\n(see class comment), causing draw list construction and image render.",
            "type": "Boolean",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 324,
            "description": "Flags the image as needing to be redrawn from the draw list on the\nnext call to {@link #render} or {@link #pick}. Setting this will\ncause the rendering pipeline to be executed from stage #6\n(see class comment), causing the image render.",
            "type": "Boolean",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 334,
            "description": "Reallocates WebGL resources for objects within this renderer.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 358,
            "description": "Internally creates (or updates) a {@link XEO.renderer.Object} of the given\nID from whatever component state cores are currently set on this {@link XEO.Renderer}.\nThe object is created if it does not already exist in the display, otherwise\nit is updated with the current states, possibly replacing states already\nreferenced by the object.",
            "params": [
                {
                    "name": "objectId",
                    "description": "ID of object to create or update",
                    "type": "String"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 481,
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 540,
            "description": "Removes an object from this Renderer",
            "params": [
                {
                    "name": "objectId",
                    "description": "ID of object to remove",
                    "type": "String"
                }
            ],
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 577,
            "description": "Renders a new frame, if neccessary.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 616,
            "description": "Builds the object list from the object map",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 628,
            "description": "Generates object state sort keys",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 649,
            "description": "State-sorts the object list",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 659,
            "description": "Logs the object list",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 672,
            "description": "Builds the draw list, which is the list of draw state-chunks to apply to WebGL\nto render the visible objects in the object list for the next frame.\nPreserves the state sort order of the object list among the draw chunks.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 848,
            "description": "Appends an object to the draw and pick lists.",
            "params": [
                {
                    "name": "object",
                    "description": ""
                },
                {
                    "name": "pickable",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 910,
            "description": "Logs the contents of the draw list to the console.",
            "access": "private",
            "tagname": "",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 940,
            "description": "Logs the contents of the pick list to the console.",
            "access": "private",
            "tagname": "",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 969,
            "description": "Attempts to pick an object at the given canvas coordinates.",
            "params": [
                {
                    "name": "params",
                    "description": "Picking params.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Hit result, if any.",
                "type": "*"
            },
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 1062,
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "*",
                    "props": [
                        {
                            "name": "clear",
                            "description": "Set true to clear the color, depth and stencil buffers first",
                            "type": "Boolean"
                        },
                        {
                            "name": "pickObject",
                            "description": "",
                            "type": "Boolean"
                        },
                        {
                            "name": "rayPick",
                            "description": "",
                            "type": "Boolean"
                        },
                        {
                            "name": "object",
                            "description": "",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 1194,
            "description": "Destroys this Renderer.",
            "class": "CameraFlight"
        },
        {
            "file": "src/_renderer/states.js",
            "line": 1,
            "description": "Renderer states",
            "class": "CameraFlight"
        },
        {
            "file": "src/_utils/map.js",
            "line": 7,
            "description": "Generic map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "class": "CameraFlight",
            "module": "XEO"
        },
        {
            "file": "src/_utils/map.js",
            "line": 13,
            "description": "Items in this map",
            "class": "CameraFlight",
            "module": "XEO"
        },
        {
            "file": "src/_utils/map.js",
            "line": 21,
            "description": "Adds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "class": "CameraFlight",
            "module": "XEO"
        },
        {
            "file": "src/_utils/map.js",
            "line": 53,
            "description": "Removes the item of the given ID from the map and returns it",
            "class": "CameraFlight",
            "module": "XEO"
        },
        {
            "file": "src/animation/cameraFlight.js",
            "line": 107,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraFlight",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlight.js",
            "line": 145,
            "description": "Begins flying this CameraFlight's {{#crossLink \"Camera\"}}{{/crossLink}} to the given target.\n\n<ul>\n    <li>When the target is a boundary, the {{#crossLink \"Camera\"}}{{/crossLink}} will fly towards the target\n    and stop when the target fills most of the canvas.</li>\n    <li>When the target is an explicit {{#crossLink \"Camera\"}}{{/crossLink}} position, given as ````eye````, ````look```` and ````up````\n     vectors, then this CameraFlight will interpolate the {{#crossLink \"Camera\"}}{{/crossLink}} to that target and stop there.</li>",
            "itemtype": "method",
            "name": "flyTo",
            "params": [
                {
                    "name": "params",
                    "description": "Either a parameters object or a {{#crossLink \"Component\"}}{{/crossLink}} subtype that has a {{#crossLink \"WorldBoundary\"}}{{/crossLink}}.",
                    "type": "*|Component",
                    "props": [
                        {
                            "name": "arc",
                            "description": "indicating how much the\n{{#crossLink \"Camera/eye:property\"}}Camera's eye{{/crossLink}} position will\nswing away from its {{#crossLink \"Camera/eye:property\"}}look{{/crossLink}} position as it flies to the target.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0]   Factor in range [0..1"
                        },
                        {
                            "name": "component",
                            "description": "ID or instance of a component to fly to.",
                            "type": "String|Component",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "World-space axis-aligned bounding box (AABB) target to fly to.",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Position to fly the eye position to.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "look",
                            "description": "Position to fly the look position to.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "up",
                            "description": "Position to fly the up vector to.",
                            "type": "Array of Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Callback fired on arrival",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "scope",
                    "description": "Optional scope for callback",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "CameraFlight",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlight.js",
            "line": 391,
            "description": "Fired whenever this CameraFlight's {{#crossLink \"CameraFlight/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFlight",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 55,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 73,
            "description": "Flag which indicates whether the viewing direction is free to move around.\n\nFires a {{#crossLink \"MouseRotateCamera/freeRotate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "freeRotate",
            "default": "false",
            "type": "Boolean",
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 90,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/freeRotate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "freeRotate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 103,
            "description": "The Camera for this CameraPath.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/camera:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"CameraPath/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 118,
            "description": "Fired whenever this CameraPaths's {{#crossLink \"CameraPath/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 133,
            "description": "The Curve for this CameraPath.\n\nFires a {{#crossLink \"CameraPath/path:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "path",
            "type": "{Path}",
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraPath.js",
            "line": 153,
            "description": "Fired whenever this CameraPaths's {{#crossLink \"CameraPath/path:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "path",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraPath",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 47,
            "description": "The morph targets.\n\nTODO",
            "itemtype": "property",
            "name": "targets",
            "default": "[]",
            "type": "Array",
            "class": "MorphTargets",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 60,
            "description": "Fired whenever this MorphTarget's  {{#crossLink \"MorphTargets/targets:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "targets",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MorphTargets",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 72,
            "description": "The morph factor",
            "itemtype": "property",
            "name": "factor",
            "default": "0",
            "type": "Number",
            "class": "MorphTargets",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 83,
            "description": "Fired whenever this MorphTarget's  {{#crossLink \"MorphTargets/factor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "factor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MorphTargets",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 101,
            "description": "JSON representation of this component",
            "itemtype": "property",
            "name": "json",
            "type": "Object",
            "class": "MorphTargets",
            "module": "XEO",
            "submodule": "animation"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 94,
            "description": "Fired whenever this Boundary2D's {{#crossLink \"Boundary2D/abb:property\"}}{{/crossLink}} abd {{#crossLink \"Boundary2D/center:property\"}}{{/crossLink}}.\nproperties change.",
            "itemtype": "event",
            "name": "updated",
            "class": "Boundary2D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 132,
            "description": "2D Canvas-space axis-aligned bounding box (AABB).",
            "itemtype": "property",
            "name": "aabb",
            "final": 1,
            "type": "{*}",
            "class": "Boundary2D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 151,
            "description": "2D Canvas-space center point.",
            "itemtype": "property",
            "name": "center",
            "final": 1,
            "type": "{Array of Number}",
            "class": "Boundary2D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 170,
            "description": "When true, shows a helper DIV that indicates the boundary.",
            "itemtype": "property",
            "name": "shown",
            "type": "{Boolean}",
            "class": "Boundary2D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 225,
            "description": "Fired whenever this Boundary2d's\n{{#crossLink \"Boundary2d/shown:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shown",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Boundary2D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 105,
            "description": "Fired whenever this Boundary3D's {{#crossLink \"Boundary3D/obb:property\"}}{{/crossLink}},\n{{#crossLink \"Boundary3D/aabb:property\"}}{{/crossLink}} or {{#crossLink \"Boundary3D/center:property\"}}{{/crossLink}}.\nproperties change.",
            "itemtype": "event",
            "name": "updated",
            "class": "Boundary3D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 142,
            "description": "3D oriented bounding box (OBB).",
            "itemtype": "property",
            "name": "obb",
            "final": 1,
            "type": "{*}",
            "class": "Boundary3D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 161,
            "description": "3D axis-aligned bounding box (AABB).",
            "itemtype": "property",
            "name": "aabb",
            "final": 1,
            "type": "{*}",
            "class": "Boundary3D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 180,
            "description": "3D center point.",
            "itemtype": "property",
            "name": "center",
            "final": 1,
            "type": "{Array of Number}",
            "class": "Boundary3D",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/groupBoundary.js",
            "line": 82,
            "description": "The {{#crossLink \"Group\"}}{{/crossLink}} attached to this GroupBoundary.\n\nFires a {{#crossLink \"GroupBoundary/group:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "group",
            "type": "Group",
            "class": "GroupBoundary",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/groupBoundary.js",
            "line": 106,
            "description": "Fired whenever this GroupBoundary's {{#crossLink \"GroupBoundary/group:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "group",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GroupBoundary",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/groupBoundary.js",
            "line": 132,
            "description": "World-space 3D boundary enclosing all the components contained in {{#crossLink \"GroupBoundary/group:property\"}}{{/crossLink}}.\n\nIf you call {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} on this boundary, then\nthis property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime you reference it.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "GroupBoundary",
            "module": "XEO",
            "submodule": "boundaries"
        },
        {
            "file": "src/camera/camera.js",
            "line": 109,
            "description": "The projection transform component for this Camera.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/project:property\"}}project{{/crossLink}}, which is\na {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\n\nFires a {{#crossLink \"Camera/project:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "project",
            "type": "Perspective|XEO.Ortho|XEO.Frustum",
            "class": "Camera",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/camera.js",
            "line": 133,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/project:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "project",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/camera.js",
            "line": 160,
            "description": "The viewing transform component for this Camera.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/view:property\"}}view{{/crossLink}}, which is\na {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.\n\nFires a {{#crossLink \"Camera/view:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "view",
            "type": "Lookat",
            "class": "Camera",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/camera.js",
            "line": 184,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/view:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "view",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 111,
            "description": "Position of this Frustum's left plane on the View-space X-axis.\n\nFires a {{#crossLink \"Frustum/left:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "left",
            "default": "-1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 128,
            "description": "Fired whenever this Frustum's {{#crossLink \"Frustum/left:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "left",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 142,
            "description": "Position of this Frustum's right plane on the View-space X-axis.\n\nFires a {{#crossLink \"Frustum/right:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "right",
            "default": "1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 159,
            "description": "Fired whenever this Frustum's {{#crossLink \"Frustum/right:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "right",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 173,
            "description": "Position of this Frustum's top plane on the View-space Y-axis.\n\nFires a {{#crossLink \"Frustum/top:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "top",
            "default": "1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 190,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/top:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "top",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 204,
            "description": "Position of this Frustum's bottom plane on the View-space Y-axis.\n\nFires a {{#crossLink \"Frustum/bottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "bottom",
            "default": "-1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 221,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/bottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "bottom",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 235,
            "description": "Position of this Frustum's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Frustum/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 252,
            "description": "Fired whenever this Frustum's {{#crossLink \"Frustum/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 266,
            "description": "Position of this Frustum's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Frustum/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 283,
            "description": "Fired whenever this Frustum's  {{#crossLink \"Frustum/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 297,
            "description": "The elements of this Frustum's projection transform matrix.\n\nFires a {{#crossLink \"Frustum/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "type": "{Float64Array}",
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/frustum.js",
            "line": 342,
            "description": "Fired whenever this Frustum's  {{#crossLink \"Lookat/matrix:property\"}}{{/crossLink}} property is regenerated.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 97,
            "description": "Rotate 'eye' about 'look', around the 'up' vector",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 115,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 139,
            "description": "Rotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 159,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 183,
            "description": "Pans the camera along X and Y axis.",
            "params": [
                {
                    "name": "pan",
                    "description": "The pan vector"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 235,
            "description": "Increments/decrements zoom factor, ie. distance between eye and look.",
            "params": [
                {
                    "name": "delta",
                    "description": ""
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 252,
            "description": "Position of this Lookat's eye.\n\nFires an {{#crossLink \"Lookat/eye:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "eye",
            "default": "[0,0,-10]",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 275,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "eye",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 289,
            "description": "Position of this Lookat's point-of-interest.\n\nFires a {{#crossLink \"Lookat/look:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "look",
            "default": "[0,0,0]",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 312,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "look",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 326,
            "description": "Direction of the \"up\" vector.\nFires an {{#crossLink \"Lookat/up:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "[0,1,0]",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 347,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "up",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 361,
            "description": "The elements of this Lookat's view transform matrix.\n\nFires a {{#crossLink \"Lookat/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "type": "{Float64Array}",
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/lookat.js",
            "line": 405,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/matrix:property\"}}{{/crossLink}} property is updated.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 110,
            "description": "Position of this Ortho's left plane on the View-space X-axis.\n\nFires a {{#crossLink \"Ortho/left:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "left",
            "default": "-1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 127,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/left:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "left",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 141,
            "description": "Position of this Ortho's right plane on the View-space X-axis.\n\nFires a {{#crossLink \"Ortho/right:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "right",
            "default": "1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 158,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/right:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "right",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 172,
            "description": "Position of this Ortho's top plane on the View-space Y-axis.\n\nFires a {{#crossLink \"Ortho/top:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "top",
            "default": "1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 189,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/top:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "top",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 203,
            "description": "Position of this Ortho's bottom plane on the View-space Y-axis.\n\nFires a {{#crossLink \"Ortho/bottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "bottom",
            "default": "-1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 220,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/bottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "bottom",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 234,
            "description": "Position of this Ortho's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Ortho/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 251,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 265,
            "description": "Position of this Ortho's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Ortho/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 282,
            "description": "Fired whenever this Ortho's {{#crossLink \"Ortho/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 296,
            "description": "The elements of this Ortho's projection transform matrix.\n\nFires a {{#crossLink \"Ortho/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "type": "{Float64Array}",
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/ortho.js",
            "line": 336,
            "description": "Fired whenever this Frustum's  {{#crossLink \"Lookat/matrix:property\"}}{{/crossLink}} property is regenerated.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 106,
            "description": "Fired whenever this Perspective's {{#crossLink \"Perspective/matrix:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 117,
            "description": "The angle, in degrees on the Y-axis, of this Perspective's field-of-view.\n\nFires a {{#crossLink \"Perspective/fovy:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fovy",
            "default": "60.0",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 136,
            "description": "Fired whenever this Perspective's {{#crossLink \"Perspective/fovy:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fovy",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 150,
            "description": "Position of this Perspective's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Perspective/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 169,
            "description": "Fired whenever this Perspective's   {{#crossLink \"Perspective/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 182,
            "description": "Position of this Perspective's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Perspective/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 201,
            "description": "Fired whenever this Perspective's  {{#crossLink \"Perspective/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/camera/perspective.js",
            "line": 215,
            "description": "The elements of this Perspective's projection transform matrix.\n\nFires a {{#crossLink \"Perspective/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "type": "{Float64Array}",
            "class": "Perspective",
            "module": "XEO",
            "submodule": "camera"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 110,
            "description": "The HTML canvas. When the {{#crossLink \"Viewer\"}}{{/crossLink}} was configured with the ID of an existing canvas within the DOM,\nthen this property will be that element, otherwise it will be a full-page canvas that this Canvas has\ncreated by default, with a z-index of -10000.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 121,
            "description": "A transparent HTML DIV overlaid over the {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}}, with a z-index\nof 100000.\n\nThe parent {{#crossLink \"Scene\"}}{{/crossLink}}'s {{#crossLink \"Input\"}}{{/crossLink}} will relay mouse\nevents from this DIV, instead of from the {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}}.\n\nWhen you need to have various HTML elements floating around over\nthe {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}}, then if you give those a z-index that lies between\nthat of the {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}} and this DIV, your elements will not\ninterfere with those events.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 139,
            "description": "The WebGL rendering context.",
            "itemtype": "property",
            "name": "gl",
            "type": "{WebGLRenderingContext}",
            "final": 1,
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 148,
            "description": "Attributes for the WebGL context",
            "type": "{{}|*}",
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 216,
            "description": "Fired wheneber the WebGL context has been lost",
            "itemtype": "event",
            "name": "webglContextLost",
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 229,
            "description": "Fired whenever the WebGL context has been restored again after having previously being lost",
            "itemtype": "event",
            "name": "webglContextRestored",
            "params": [
                {
                    "name": "value",
                    "description": "The WebGL context object"
                }
            ],
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 256,
            "description": "Fired whenever the canvas has resized",
            "itemtype": "event",
            "name": "resized",
            "params": [
                {
                    "name": "width",
                    "description": "The new canvas width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new canvas height",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "The new canvas aspect ratio",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 294,
            "description": "Creates a canvas in the DOM",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 323,
            "description": "Creates an invisible DIV over the canvas",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 353,
            "description": "Initialises the WebGL context",
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 375,
            "description": "Fired whenever the canvas failed to get a WebGL context, which probably means that WebGL\nis either unsupported or has been disabled.",
            "itemtype": "event",
            "name": "webglContextFailed",
            "class": "Canvas",
            "module": "XEO",
            "submodule": "canvas"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 146,
            "description": "The current mode of this Clip.\n\nPossible states are:\n\n<ul>\n<li>\"disabled\" - inactive</li>\n<li>\"inside\" - clipping fragments that fall within the half-space on the origin-side of the Clip plane</li>\n<li>\"outside\" - clipping fragments that fall on the other side of the Clip plane from the origin</li>\n</ul>\n\nFires a {{#crossLink \"Clip/mode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "mode",
            "default": "\"disabled\"",
            "type": "String",
            "class": "Clip",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 171,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/mode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "mode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Clip",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 185,
            "description": "A vector emanating from the World-space origin that indicates the orientation of this Clip plane.\n\nThe Clip plane will be oriented perpendicular to this vector.\n\nFires a {{#crossLink \"Clip/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Clip",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 204,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Clip",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 218,
            "description": "The position of this Clip along the vector indicated by {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.\n\nThis is the distance of the Clip plane from the World-space origin.\n\nFires a {{#crossLink \"Clip/dist:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dist",
            "default": "1.0",
            "type": "Number",
            "class": "Clip",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 237,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/dist:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dist",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Clip",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clips.js",
            "line": 151,
            "description": "The clipping planes contained within this Clips.\n\nFires a {{#crossLink \"Clips/clips:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clips",
            "default": "[]",
            "type": "Array(XEO.Clip)",
            "class": "Clips",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clips.js",
            "line": 243,
            "description": "Fired whenever this Clips' {{#crossLink \"Clips/clips:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clips",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of XEO.Clip"
                }
            ],
            "class": "Clips",
            "module": "XEO",
            "submodule": "clipping"
        },
        {
            "file": "src/configs/configs.js",
            "line": 78,
            "description": "Sets a property on this Configs.\n\nFires an event with the same name as the property. Existing subscribers to the event will be\nnotified immediately of the property value. Like all events on a Component, this Configs will\nretain the event, to notify any subscribers that are attached subsequently.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The property value",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Configs",
            "module": "XEO",
            "submodule": "configs"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 75,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 84,
            "description": "Indicates that only one instance of a CameraControl may be active within\nits {{#crossLink \"Scene\"}}{{/crossLink}} at a time. When a CameraControl is activated, that has\na true value for this flag, then any other active CameraControl will be deactivated first.",
            "itemtype": "property",
            "name": "exclusive",
            "type": "Boolean",
            "final": 1,
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 114,
            "description": "The {{#crossLink \"KeyboardAxisCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "keyboardAxis",
            "final": 1,
            "type": "KeyboardAxisCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 125,
            "description": "The {{#crossLink \"KeyboardRotateCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "keyboardOrbit",
            "final": 1,
            "type": "KeyboardRotateCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 136,
            "description": "The {{#crossLink \"MouseRotateCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "mouseOrbit",
            "final": 1,
            "type": "MouseRotateCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 147,
            "description": "The {{#crossLink \"KeyboardPanCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "keyboardPan",
            "final": 1,
            "type": "KeyboardPanCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 158,
            "description": "The {{#crossLink \"MousePanCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "mousePan",
            "final": 1,
            "type": "MousePanCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 169,
            "description": "The {{#crossLink \"KeyboardZoomCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "keyboardZoom",
            "final": 1,
            "type": "KeyboardZoomCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 180,
            "description": "The {{#crossLink \"MouseZoomCamera\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "mouseZoom",
            "final": 1,
            "type": "MouseZoomCamera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 191,
            "description": "The {{#crossLink \"MousePickObject\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "mousePickObject",
            "final": 1,
            "type": "MousePickObject",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 209,
            "description": "The {{#crossLink \"CameraFlight\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "cameraFlight",
            "final": 1,
            "type": "CameraFlight",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 290,
            "description": "Flag which indicates whether this CameraControl is in \"first person\" mode.\n\nIn \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,\nthe eye rotates about the look.\n\nFires a {{#crossLink \"KeyboardRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 313,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 329,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled by this CameraControl.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraControl. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 343,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 374,
            "description": "Flag which indicates whether this CameraControl is active or not.\n\nFires an {{#crossLink \"CameraControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 404,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 56,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "KeyboardAxisCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 85,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardAxisCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardAxisCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardAxisCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "KeyboardAxisCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 101,
            "description": "Fired whenever this KeyboardAxisCamera's {{#crossLink \"KeyboardAxisCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardAxisCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 119,
            "description": "Flag which indicates whether this KeyboardAxisCamera is active or not.\n\nFires an {{#crossLink \"KeyboardAxisCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardAxisCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 171,
            "description": "Fired whenever this KeyboardAxisCamera's {{#crossLink \"KeyboardAxisCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardAxisCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 54,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 78,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardPanCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardPanCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardPanCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 94,
            "description": "Fired whenever this KeyboardPanCamera's {{#crossLink \"KeyboardPanCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 108,
            "description": "The sensitivity of this KeyboardPanCamera.\n\nFires a {{#crossLink \"KeyboardPanCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 123,
            "description": "Fired whenever this KeyboardPanCamera's  {{#crossLink \"KeyboardPanCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 137,
            "description": "Flag which indicates whether this KeyboardPanCamera is active or not.\n\nFires an {{#crossLink \"KeyboardPanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 220,
            "description": "Fired whenever this KeyboardPanCamera's {{#crossLink \"KeyboardPanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardPanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 62,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 86,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardRotateCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardRotateCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardRotateCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 102,
            "description": "Fired whenever this KeyboardRotateCamera's {{#crossLink \"KeyboardRotateCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 116,
            "description": "The sensitivity of this KeyboardRotateCamera.\n\nFires a {{#crossLink \"KeyboardRotateCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "1.0",
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 131,
            "description": "Fired whenever this KeyboardRotateCamera's  {{#crossLink \"KeyboardRotateCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 145,
            "description": "Flag which indicates whether this KeyboardRotateCamera is in \"first person\" mode.\n\nA KeyboardRotateCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to its\ntarget {{#crossLink \"Camera\"}}{{/crossLink}}. In 'first person' mode, the\n{{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nposition orbits the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} position, otherwise\nthe {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} orbits {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n\nFires a {{#crossLink \"KeyboardRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 168,
            "description": "Fired whenever this KeyboardRotateCamera's {{#crossLink \"KeyboardRotateCamera/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 181,
            "description": "Flag which indicates whether this KeyboardRotateCamera is active or not.\n\nFires an {{#crossLink \"KeyboardRotateCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 265,
            "description": "Fired whenever this KeyboardRotateCamera's {{#crossLink \"KeyboardRotateCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 48,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 72,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardZoomCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardZoomCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardZoomCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 88,
            "description": "Fired whenever this KeyboardZoomCamera's {{#crossLink \"KeyboardZoomCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 102,
            "description": "The sensitivity of this KeyboardZoomCamera.\n\nFires a {{#crossLink \"KeyboardZoomCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 117,
            "description": "Fired whenever this KeyboardZoomCamera's  {{#crossLink \"KeyboardZoomCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 131,
            "description": "Flag which indicates whether this KeyboardZoomCamera is active or not.\n\nFires an {{#crossLink \"KeyboardZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 194,
            "description": "Fired whenever this KeyboardZoomCamera's {{#crossLink \"KeyboardZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 55,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 82,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this MousePanCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MousePanCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"MousePanCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 98,
            "description": "Fired whenever this MousePanCamera's {{#crossLink \"MousePanCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 112,
            "description": "The sensitivity of this MousePanCamera.\n\nFires a {{#crossLink \"MousePanCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 127,
            "description": "Fired whenever this MousePanCamera's  {{#crossLink \"MousePanCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 141,
            "description": "Flag which indicates whether this MousePanCamera is active or not.\n\nFires an {{#crossLink \"MousePanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 227,
            "description": "Fired whenever this MousePanCamera's {{#crossLink \"MousePanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePanCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 71,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 89,
            "description": "Flag which indicates whether this MousePickObject is active or not.\n\nFires a {{#crossLink \"MousePickObject/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 142,
            "description": "Fired whenever a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} is picked.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "objectId",
                    "description": "The ID of the picked {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "canvasPos",
                    "description": "The Canvas-space coordinate that was picked.",
                    "type": "Array of Number"
                },
                {
                    "name": "worldPos",
                    "description": "When {{#crossLink \"MousePickObject/rayPick\"}}{{/crossLink}} is true,\nprovides the World-space coordinate that was ray-picked on the surface of the\n{{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.",
                    "type": "Array of Number"
                }
            ],
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 155,
            "description": "Fired whenever an attempt to pick {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} picks empty space.",
            "itemtype": "event",
            "name": "nopick",
            "params": [
                {
                    "name": "canvasPos",
                    "description": "The Canvas-space coordinate at which the pick was attempted.",
                    "type": "Array of Number"
                }
            ],
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 174,
            "description": "Fired whenever this MousePickObject's {{#crossLink \"MousePickObject/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 188,
            "description": "Indicates whether this MousePickObject will try to pick a {{#crossLink \"Geometry\"}}{{/crossLink}} primitive\nwhenever it picks a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nWhen true, this MousePickObject will try to return the primitive index in a\n{{#crossLink \"MousePickObject/picked:event\"}}{{/crossLink}} event.\n\nFires a {{#crossLink \"MousePickObject/rayPick:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "rayPick",
            "type": "Boolean",
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickObject.js",
            "line": 212,
            "description": "Fired whenever this MousePickObject's {{#crossLink \"MousePickObject/rayPick:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "rayPick",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePickObject",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 61,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 88,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this MouseRotateCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MouseRotateCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"MouseRotateCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 104,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 118,
            "description": "The sensitivity of this MouseRotateCamera.\n\nFires a {{#crossLink \"MouseRotateCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 133,
            "description": "Fired whenever this MouseRotateCamera's  {{#crossLink \"MouseRotateCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 147,
            "description": "Flag which indicates whether this MouseRotateCamera is in \"first person\" mode.\n\nA MouseRotateCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to its\ntarget {{#crossLink \"Camera\"}}{{/crossLink}}. In 'first person' mode, the\n{{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nposition orbits the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} position, otherwise\nthe {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} orbits {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.</li>\n\nFires a {{#crossLink \"MouseRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 170,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 183,
            "description": "Flag which indicates whether this MouseRotateCamera is active or not.\n\nFires an {{#crossLink \"MouseRotateCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 288,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseRotateCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 48,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 73,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this MouseZoomCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MouseZoomCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"MouseZoomCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 89,
            "description": "Fired whenever this MouseZoomCamera's {{#crossLink \"MouseZoomCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 103,
            "description": "The sensitivity of this MouseZoomCamera.\n\nFires a {{#crossLink \"MouseZoomCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 118,
            "description": "Fired whenever this MouseZoomCamera's  {{#crossLink \"MouseZoomCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 132,
            "description": "Indicates whether this MouseZoomCamera is active or not.\n\nFires an {{#crossLink \"MouseZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 241,
            "description": "Fired whenever this MouseZoomCamera's {{#crossLink \"MouseZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseZoomCamera",
            "module": "XEO",
            "submodule": "controls"
        },
        {
            "file": "src/culling/visibility.js",
            "line": 83,
            "description": "Indicates whether this Visibility makes attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} visible or not.\n\nFires a {{#crossLink \"Visibility/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "Visibility",
            "module": "XEO",
            "submodule": "culling"
        },
        {
            "file": "src/culling/visibility.js",
            "line": 100,
            "description": "Fired whenever this Visibility's {{#crossLink \"Visibility/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Visibility",
            "module": "XEO",
            "submodule": "culling"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 61,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 84,
            "description": "Starting point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v0",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 97,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v0:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v0",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 111,
            "description": "First control point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v1:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v1",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 124,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v1:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v1",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 138,
            "description": "Second control point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v2",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 151,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v2:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v2",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 165,
            "description": "End point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v3:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v3",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 178,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v3:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v3",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 192,
            "description": "Current position of progress along this CubicBezierCurve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"CubicBezierCurve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 210,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 224,
            "description": "Point on this CubicBezierCurve at position {{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/cubicBezierCurve.js",
            "line": 238,
            "description": "Returns point on this CubicBezierCurve at the given position.",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get point at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "CubicBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 32,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 48,
            "description": "Progress along this Curve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"Curve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 67,
            "description": "Fired whenever this Curve's\n{{#crossLink \"Curve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 82,
            "description": "Tangent on this Curve at position {{#crossLink \"Curve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 96,
            "description": "Length of this Curve.",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 110,
            "description": "Returns a normalized tangent vector on this Curve at the given position.",
            "itemtype": "method",
            "name": "getTangent",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get tangent at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Normalized tangent vector",
                "type": "Array of Number"
            },
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/curve.js",
            "line": 148,
            "description": "Samples points on this Curve, at the given number of equally-spaced divisions.",
            "itemtype": "method",
            "name": "getPoints",
            "params": [
                {
                    "name": "divisions",
                    "description": "The number of divisions.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Array of sampled 3D points.",
                "type": "Array of Array"
            },
            "class": "Curve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 73,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 107,
            "description": "Adds a {{#crossLink \"Curve\"}}{{/crossLink}} to this Path.\n\nFires a {{#crossLink \"Path/curves:event\"}}{{/crossLink}} event on change.",
            "params": [
                {
                    "name": "curve",
                    "description": "The {{#crossLink \"Curve\"}}{{/crossLink}} to add.",
                    "type": "Curve"
                }
            ],
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 120,
            "description": "Fired whenever this Path's\n{{#crossLink \"Path/curves:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "curves",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 131,
            "description": "The {{#crossLink \"Curve\"}}Curves{{/crossLink}} in this Path.\n\nFires a {{#crossLink \"Path/curves:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "curves",
            "default": "[]",
            "type": "{{Array of Spline, Path, QuadraticBezierCurve or CubicBezierCurve}}",
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 241,
            "description": "Current point of progress along this Path.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"Path/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 259,
            "description": "Fired whenever this Path's\n{{#crossLink \"Path/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 273,
            "description": "Point on this Path corresponding to the current value of {{#crossLink \"Path/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 286,
            "description": "Length of this Path, which is the cumulative length of all {{#crossLink \"Curve/t:property\"}}Curves{{/crossLink}}\ncurrently in {{#crossLink \"Path/curves:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/path.js",
            "line": 302,
            "description": "Gets a point on this Path corresponding to the given progress position.",
            "params": [
                {
                    "name": "t",
                    "description": "Indicates point of progress along this curve, in the range [0..1].",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "Path",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 150,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 172,
            "description": "Starting point on this QuadraticBezierCurve.\n\nFires a {{#crossLink \"QuadraticBezierCurve/v0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v0",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 185,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/v0:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v0",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 199,
            "description": "Middle control point on this QuadraticBezierCurve.\n\nFires a {{#crossLink \"QuadraticBezierCurve/v1:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v1",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 212,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/v1:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v1",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 226,
            "description": "End point on this QuadraticBezierCurve.\n\nFires a {{#crossLink \"QuadraticBezierCurve/v2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v2",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 239,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/v2:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v2",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 253,
            "description": "Progress along this QuadraticBezierCurve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"QuadraticBezierCurve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 271,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 286,
            "description": "Point on this QuadraticBezierCurve at position {{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/quadraticBezierCurve.js",
            "line": 300,
            "description": "Returns point on this QuadraticBezierCurve at the given position.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get point at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "QuadraticBezierCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 90,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 110,
            "description": "Control points on this SplineCurve.\n\nFires a {{#crossLink \"SplineCurve/points:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "points",
            "default": "[]",
            "type": "Array(Number)",
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 125,
            "description": "Fired whenever this SplineCurve's\n{{#crossLink \"SplineCurve/points:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "points",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 139,
            "description": "Progress along this SplineCurve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"SplineCurve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 157,
            "description": "Fired whenever this SplineCurve's\n{{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 171,
            "description": "Point on this SplineCurve at position {{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/curves/splineCurve.js",
            "line": 185,
            "description": "Returns point on this SplineCurve at the given position.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get point at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "SplineCurve",
            "module": "XEO",
            "submodule": "curves"
        },
        {
            "file": "src/geometry/boundaryGeometry.js",
            "line": 72,
            "description": "The {{#crossLink \"Boundary3D\"}}{{/crossLink}} we are showing.\n\nFires a {{#crossLink \"BoundaryGeometry/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "Boundary3D",
            "type": "Boundary3D",
            "class": "BoundaryGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boundaryGeometry.js",
            "line": 96,
            "description": "Fired whenever this BoundaryGeometry's  {{#crossLink \"BoundaryGeometry/boundary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "boundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoundaryGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boundaryGeometry.js",
            "line": 140,
            "description": "The {{#crossLink \"Boundary3D\"}}{{/crossLink}} we are showing.\n\nFires a {{#crossLink \"BoundaryGeometry/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "Boundary3D",
            "type": "Boundary3D",
            "class": "BoundaryGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boundaryGeometry.js",
            "line": 164,
            "description": "Assign to an Axis-aligned bounding-box",
            "itemtype": "property",
            "name": "aabb",
            "type": "Boundary3D",
            "class": "BoundaryGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 43,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 125,
            "description": "The BoxGeometry's size on the X-axis.\n\nFires a {{#crossLink \"BoxGeometry/xsize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSize",
            "default": "1",
            "type": "Number",
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 153,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/xSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 167,
            "description": "The BoxGeometry's size on the Y-axis.\n\nFires a {{#crossLink \"BoxGeometry/ySize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ySize",
            "default": "1",
            "type": "Number",
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 195,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/ySize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ySize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 209,
            "description": "The BoxGeometry's size on the Z-axis.\n\nFires a {{#crossLink \"BoxGeometry/zSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "zSize",
            "default": "1",
            "type": "Number",
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 237,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/zSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "zSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoxGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 51,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 229,
            "description": "The Cylinder's level-of-detail factor.\n\nFires a {{#crossLink \"Cylinder/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 257,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 271,
            "description": "The Cylinder's top radius.\n\nFires a {{#crossLink \"Cylinder/radiusTop:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radiusTop",
            "default": "1",
            "type": "Number",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 299,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/radiusTop:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radiusTop",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 313,
            "description": "The Cylinder's bottom radius.\n\nFires a {{#crossLink \"Cylinder/radiusBottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radiusBottom",
            "default": "1",
            "type": "Number",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 341,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/radiusBottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radiusBottom",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 355,
            "description": "The Cylinder's height.\n\nFires a {{#crossLink \"Cylinder/height:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "height",
            "default": "1",
            "type": "Number",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 383,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/height:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "height",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 397,
            "description": "The Cylinder's radial segments.\n\nFires a {{#crossLink \"Cylinder/radialSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radialSegments",
            "default": "60",
            "type": "Number",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 425,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/radialSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radialSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 439,
            "description": "The Cylinder's height segments.\n\nFires a {{#crossLink \"Cylinder/heightSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "heightSegments",
            "default": "1",
            "type": "Number",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 467,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/heightSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "heightSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 481,
            "description": "Indicates whether this Cylinder's is open-ended.\n\nFires a {{#crossLink \"Cylinder/openEnded:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "openEnded",
            "default": "false",
            "type": "Boolean",
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 504,
            "description": "Fired whenever this Cylinder's {{#crossLink \"Cylinder/openEnded:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "openEnded",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Cylinder",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 407,
            "description": "Protected method, called by sub-classes to queue a call to _update(), to rebuild geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 437,
            "description": "Protected virtual template method, implemented by sub-classes to generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 699,
            "description": "The Geometry's usage type.\n\nValid types are: 'static', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n\nFires a {{#crossLink \"Geometry/usage:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "usage",
            "default": "\"triangles\"",
            "type": "String",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 730,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/usage:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "usage",
            "type": "String",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 744,
            "description": "The Geometry's primitive type.\n\nValid types are: 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n\nFires a {{#crossLink \"Geometry/primitive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "primitive",
            "default": "\"triangles\"",
            "type": "String",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 784,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "primitive",
            "type": "String",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 798,
            "description": "The Geometry's positions array.\n\nThis property is a one-dimensional array - use  {{#crossLink \"XEO.math/flatten:method\"}}{{/crossLink}} to\nconvert two-dimensional arrays for assignment to this property.\n\nFires a {{#crossLink \"Geometry/positions:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "positions",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 827,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "positions",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 834,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/localBoundary:property\"}}{{/crossLink}} property changes.\n\nNote that this event does not carry the value of the property. In order to avoid needlessly\ncalculating unused values for this property, it will be lazy-calculated next time it's referenced\non this Geometry.",
            "itemtype": "event",
            "name": "positions",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 859,
            "description": "The Geometry's normal vectors array.\n\nFires a {{#crossLink \"Geometry/normals:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normals",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 885,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/ normals:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normals",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 905,
            "description": "The Geometry's UV coordinate array.\n\nFires a {{#crossLink \"Geometry/uv:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "uv",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 931,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/uv:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "uv",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 951,
            "description": "The Geometry's vertex colors array.\n\nFires a {{#crossLink \"Geometry/colors:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colors",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 977,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colors",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 997,
            "description": "The Geometry's indices array.\n\nFires a {{#crossLink \"Geometry/indices:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "indices",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1023,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "indices",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1043,
            "description": "Local-space 3D boundary enclosing the {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} of this Geometry.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} are updated.",
            "itemtype": "property",
            "name": "localBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1101,
            "description": "Set true to make this Geometry automatically generate {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} from\n{{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} and {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}.\n\nThis Geomatry will auto-generate its {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} on the\nnext {{#crossLink \"Scene\"}}{{/crossLink}} {{#crossLink \"Scene/tick:event\"}}{{/crossLink}} event.\n\nFires a {{#crossLink \"Geometry/autoNormals:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "autoNormals",
            "default": "false",
            "type": "Boolean",
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1130,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/autoNormals:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "autoNormals",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 48,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 139,
            "description": "Profile points on this LatheGeometry.\n\nFires a {{#crossLink \"LatheGeometry/points:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "points",
            "default": "[]",
            "type": "Array(Number)",
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 156,
            "description": "Fired whenever this LatheGeometry's\n{{#crossLink \"LatheGeometry/points:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "points",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 170,
            "description": "The LatheGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"LatheGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 198,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 212,
            "description": "Angle at which this LatheGeometry's rotation starts.\n\nFires a {{#crossLink \"LatheGeometry/phiStart:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "phiStart",
            "default": "0",
            "type": "Number",
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 240,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/phiStart:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "phiStart",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 254,
            "description": "Angle at which this LatheGeometry's rotation starts.\n\nFires a {{#crossLink \"LatheGeometry/phiLength:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "phiLength",
            "default": "1",
            "type": "Number",
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 282,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/phiLength:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "phiLength",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 296,
            "description": "The LatheGeometry's number of segments of rotation.\n\nFires a {{#crossLink \"LatheGeometry/segments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "segments",
            "default": "4",
            "type": "Number",
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 324,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/segments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "segments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "LatheGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 22,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "PathGeometry",
            "module": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 66,
            "description": "The Path for this PathGeometry.\n\nFires a {{#crossLink \"PathGeometry/path:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "path",
            "type": "{Path}",
            "class": "PathGeometry",
            "module": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 86,
            "description": "Fired whenever this CameraPaths's {{#crossLink \"CameraPath/path:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "path",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PathGeometry",
            "module": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 113,
            "description": "The number of segments in this PathGeometry.\n\nFires a {{#crossLink \"PathGeometry/divisions:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "divisions",
            "default": "6",
            "type": "{Number}",
            "class": "PathGeometry",
            "module": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 52,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 150,
            "description": "The PlaneGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"PlaneGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 178,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 192,
            "description": "The PlaneGeometry's dimension on the X-axis.\n\nFires a {{#crossLink \"PlaneGeometry/xSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSize",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 220,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/xSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 234,
            "description": "The PlaneGeometry's dimension on the Y-axis.\n\nFires a {{#crossLink \"PlaneGeometry/ySize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ySize",
            "default": "1.0",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 262,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/ySize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ySize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 276,
            "description": "The PlaneGeometry's number of segments on the X-axis.\n\nFires a {{#crossLink \"PlaneGeometry/xSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSegments",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 304,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/xSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 318,
            "description": "The PlaneGeometry's number of segments on the Y-axis.\n\nFires a {{#crossLink \"PlaneGeometry/ySegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ySegments",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 346,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/ySegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ySegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 45,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 145,
            "description": "The SphereGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"SphereGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 173,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 187,
            "description": "The SphereGeometry's radius.\n\nFires a {{#crossLink \"SphereGeometry/radius:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radius",
            "default": "1",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 215,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/radius:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radius",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 230,
            "description": "The SphereGeometry's number of latitude bands.\n\nFires a {{#crossLink \"SphereGeometry/heightSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "heightSegments",
            "default": "18",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 258,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/heightSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "heightSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 272,
            "description": "The SphereGeometry's number of longitude bands.\n\nFires a {{#crossLink \"SphereGeometry/widthSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "widthSegments",
            "default": "24",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 300,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/widthSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "widthSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 49,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 148,
            "description": "The TorusGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"TorusGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 176,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 190,
            "description": "The overall radius of the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/radius:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radius",
            "default": "1",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 218,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/radius:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radius",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 233,
            "description": "The tube radius of the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/tube:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "tube",
            "default": "0.3",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 261,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/tube:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "tube",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 275,
            "description": "The number of radial segments that make up the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/radialSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radialSegments",
            "default": "32",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 303,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/radialSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radialSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 318,
            "description": "The number of tubular segments that make up the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/tubeSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "tubeSegments",
            "default": "24",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 346,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/tubeSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "tubeSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 360,
            "description": "The length of the TorusGeometry's arc in degrees, where 360 is closed torus.\n\nFires a {{#crossLink \"TorusGeometry/arc:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "arc",
            "default": "Math.PI * 2",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 388,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/arc:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "arc",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "XEO",
            "submodule": "geometry"
        },
        {
            "file": "src/grouping/group.js",
            "line": 97,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 108,
            "description": "The {{#crossLink \"Components\"}}{{/crossLink}} within this Group, mapped to their IDs.\n\nFires an {{#crossLink \"Group/updated:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "components",
            "type": "{{String:Component}}",
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 118,
            "description": "The number of {{#crossLink \"Components\"}}{{/crossLink}} within this Group.",
            "itemtype": "property",
            "name": "numComponents",
            "type": "Number",
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 126,
            "description": "A map of maps; for each {{#crossLink \"Component\"}}{{/crossLink}} type in this Group,\na map to IDs to {{#crossLink \"Component\"}}{{/crossLink}} instances, eg.\n\n````\n\"XEO.Geometry\": {\n  \"alpha\": <XEO.Geometry>,\n  \"beta\": <XEO.Geometry>\n},\n\"XEO.Rotate\": {\n  \"charlie\": <XEO.Rotate>,\n  \"delta\": <XEO.Rotate>,\n  \"echo\": <XEO.Rotate>,\n},\n//...\n````",
            "itemtype": "property",
            "name": "types",
            "type": "{String:{String:XEO.Component}}",
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 156,
            "description": "Adds one or more {{#crossLink \"Component\"}}Components{{/crossLink}}s to this Group.\n\nThe {{#crossLink \"Component\"}}Component(s){{/crossLink}} may be specified by instance, ID or type.\n\nSee class comment for usage examples.\n\nThe {{#crossLink \"Component\"}}Components{{/crossLink}} must be in the same {{#crossLink \"Scene\"}}{{/crossLink}} as this Group.\n\nFires an {{#crossLink \"Group/added:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "components",
                    "description": "Array of {{#crossLink \"Component\"}}Components{{/crossLink}} instances.",
                    "type": "Array of Component"
                }
            ],
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 271,
            "description": "Fired whenever an individual {{#crossLink \"Component\"}}{{/crossLink}} is added to this {{#crossLink \"Group\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "added",
            "params": [
                {
                    "name": "value",
                    "description": "The {{#crossLink \"Component\"}}{{/crossLink}} that was added.",
                    "type": "Component"
                }
            ],
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 303,
            "description": "Removes all {{#crossLink \"Component\"}}Components{{/crossLink}} from this Group.\n\nFires an {{#crossLink \"Group/updated:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "clear",
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 317,
            "description": "Destroys all {{#crossLink \"Component\"}}Components{{/crossLink}} in this Group.",
            "itemtype": "method",
            "name": "destroyAll",
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 329,
            "description": "Removes one or more {{#crossLink \"Component\"}}Components{{/crossLink}} from this Group.\n\nThe {{#crossLink \"Component\"}}Component(s){{/crossLink}} may be specified by instance, ID or type.\n\nSee class comment for usage examples.\n\nFires a {{#crossLink \"Group/removed:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "components",
                    "description": "Array of {{#crossLink \"Component\"}}Components{{/crossLink}} instances.",
                    "type": "Array of Components"
                }
            ],
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 377,
            "description": "Fired whenever an individual {{#crossLink \"Component\"}}{{/crossLink}} is removed from this {{#crossLink \"Group\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "removed",
            "params": [
                {
                    "name": "value",
                    "description": "The {{#crossLink \"Component\"}}{{/crossLink}} that was removed.",
                    "type": "Component"
                }
            ],
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/grouping/group.js",
            "line": 389,
            "description": "Iterates with a callback over the {{#crossLink \"Component\"}}Components{{/crossLink}} in this Group.",
            "itemtype": "method",
            "name": "iterate",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback called for each {{#crossLink \"Component\"}}{{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Optional scope for the callback, defaults to this Group.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Group",
            "module": "XEO",
            "submodule": "grouping"
        },
        {
            "file": "src/importing/gltf/glTFLoader.js",
            "line": 1,
            "description": "Private xeoEngine glTF loader core.\n\nAdapted from the THREE loader by Tony Parisi (http://www.tonyparisi.com)\nhttps://github.com/KhronosGroup/glTF/blob/master/loaders/threejs/glTFLoaderUtils.js",
            "class": "Model",
            "module": "XEO"
        },
        {
            "file": "src/importing/gltf/glTFLoaderUtils.js",
            "line": 1,
            "description": "Private xeoEngine glTF loading utilities.\n\nAdapted from the THREE loader by Tony Parisi (http://www.tonyparisi.com)\nhttps://github.com/KhronosGroup/glTF/blob/master/loaders/threejs/glTFLoaderUtils.js",
            "class": "Model",
            "module": "XEO"
        },
        {
            "file": "src/importing/model.js",
            "line": 93,
            "description": "Path to the glTF file.\n\nFires a {{#crossLink \"Model/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "Model",
            "module": "XEO",
            "submodule": "importing"
        },
        {
            "file": "src/importing/model.js",
            "line": 122,
            "description": "Fired whenever this Model's  {{#crossLink \"GLTF/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Model",
            "module": "XEO",
            "submodule": "importing"
        },
        {
            "file": "src/importing/model.js",
            "line": 135,
            "description": "{{#crossLink \"Group\"}}{{/crossLink}} containing all the xeoEngine components currently loaded by this Model.",
            "itemtype": "property",
            "name": "group",
            "type": "Group",
            "final": 1,
            "class": "Model",
            "module": "XEO",
            "submodule": "importing"
        },
        {
            "file": "src/input/input.js",
            "line": 115,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 121,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 127,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 133,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 139,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 145,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 171,
            "description": "Fired whenever a key is pressed while the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keydown",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 201,
            "description": "Fired whenever a key is released while the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keyup",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 239,
            "description": "Fired whenever the mouse is pressed over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 275,
            "description": "Fired whenever the mouse is released over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseup",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 313,
            "description": "Fired whenever the mouse is double-clicked over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "dblclick",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 331,
            "description": "Fired whenever the mouse is moved over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 349,
            "description": "Fired whenever the mouse wheel is moved over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousewheel",
            "params": [
                {
                    "name": "delta",
                    "description": "The mouse wheel delta,",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 382,
            "description": "Fired whenever the mouse is clicked over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseclicked",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 417,
            "description": "Enable or disable all input handlers",
            "params": [
                {
                    "name": "enable",
                    "description": ""
                }
            ],
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 430,
            "description": "Code for the BACKSPACE key.",
            "itemtype": "property",
            "name": "KEY_BACKSPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 438,
            "description": "Code for the TAB key.",
            "itemtype": "property",
            "name": "KEY_TAB",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 446,
            "description": "Code for the ENTER key.",
            "itemtype": "property",
            "name": "KEY_ENTER",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 454,
            "description": "Code for the SHIFT key.",
            "itemtype": "property",
            "name": "KEY_SHIFT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 462,
            "description": "Code for the CTRL key.",
            "itemtype": "property",
            "name": "KEY_CTRL",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 470,
            "description": "Code for the ALT key.",
            "itemtype": "property",
            "name": "KEY_ALT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 478,
            "description": "Code for the PAUSE_BREAK key.",
            "itemtype": "property",
            "name": "KEY_PAUSE_BREAK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 486,
            "description": "Code for the CAPS_LOCK key.",
            "itemtype": "property",
            "name": "KEY_CAPS_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 494,
            "description": "Code for the ESCAPE key.",
            "itemtype": "property",
            "name": "KEY_ESCAPE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 502,
            "description": "Code for the PAGE_UP key.",
            "itemtype": "property",
            "name": "KEY_PAGE_UP",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 510,
            "description": "Code for the PAGE_DOWN key.",
            "itemtype": "property",
            "name": "KEY_PAGE_DOWN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 518,
            "description": "Code for the END key.",
            "itemtype": "property",
            "name": "KEY_END",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 526,
            "description": "Code for the HOME key.",
            "itemtype": "property",
            "name": "KEY_HOME",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 534,
            "description": "Code for the LEFT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 542,
            "description": "Code for the UP_ARROW key.",
            "itemtype": "property",
            "name": "KEY_UP_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 550,
            "description": "Code for the RIGHT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 558,
            "description": "Code for the DOWN_ARROW key.",
            "itemtype": "property",
            "name": "KEY_DOWN_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 566,
            "description": "Code for the INSERT key.",
            "itemtype": "property",
            "name": "KEY_INSERT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 574,
            "description": "Code for the DELETE key.",
            "itemtype": "property",
            "name": "KEY_DELETE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 582,
            "description": "Code for the 0 key.",
            "itemtype": "property",
            "name": "KEY_NUM_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 590,
            "description": "Code for the 1 key.",
            "itemtype": "property",
            "name": "KEY_NUM_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 598,
            "description": "Code for the 2 key.",
            "itemtype": "property",
            "name": "KEY_NUM_2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 606,
            "description": "Code for the 3 key.",
            "itemtype": "property",
            "name": "KEY_NUM_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 614,
            "description": "Code for the 4 key.",
            "itemtype": "property",
            "name": "KEY_NUM_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 622,
            "description": "Code for the 5 key.",
            "itemtype": "property",
            "name": "KEY_NUM_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 630,
            "description": "Code for the 6 key.",
            "itemtype": "property",
            "name": "KEY_NUM_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 638,
            "description": "Code for the 7 key.",
            "itemtype": "property",
            "name": "KEY_NUM_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 646,
            "description": "Code for the 8 key.",
            "itemtype": "property",
            "name": "KEY_NUM_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 654,
            "description": "Code for the 9 key.",
            "itemtype": "property",
            "name": "KEY_NUM_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 662,
            "description": "Code for the A key.",
            "itemtype": "property",
            "name": "KEY_A",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 670,
            "description": "Code for the B key.",
            "itemtype": "property",
            "name": "KEY_B",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 678,
            "description": "Code for the C key.",
            "itemtype": "property",
            "name": "KEY_C",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 686,
            "description": "Code for the D key.",
            "itemtype": "property",
            "name": "KEY_D",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 694,
            "description": "Code for the E key.",
            "itemtype": "property",
            "name": "KEY_E",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 702,
            "description": "Code for the F key.",
            "itemtype": "property",
            "name": "KEY_F",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 710,
            "description": "Code for the G key.",
            "itemtype": "property",
            "name": "KEY_G",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 718,
            "description": "Code for the H key.",
            "itemtype": "property",
            "name": "KEY_H",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 726,
            "description": "Code for the I key.",
            "itemtype": "property",
            "name": "KEY_I",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 734,
            "description": "Code for the J key.",
            "itemtype": "property",
            "name": "KEY_J",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 742,
            "description": "Code for the K key.",
            "itemtype": "property",
            "name": "KEY_K",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 750,
            "description": "Code for the L key.",
            "itemtype": "property",
            "name": "KEY_L",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 758,
            "description": "Code for the M key.",
            "itemtype": "property",
            "name": "KEY_M",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 766,
            "description": "Code for the N key.",
            "itemtype": "property",
            "name": "KEY_N",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 774,
            "description": "Code for the O key.",
            "itemtype": "property",
            "name": "KEY_O",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 782,
            "description": "Code for the P key.",
            "itemtype": "property",
            "name": "KEY_P",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 790,
            "description": "Code for the Q key.",
            "itemtype": "property",
            "name": "KEY_Q",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 798,
            "description": "Code for the R key.",
            "itemtype": "property",
            "name": "KEY_R",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 806,
            "description": "Code for the S key.",
            "itemtype": "property",
            "name": "KEY_S",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 814,
            "description": "Code for the T key.",
            "itemtype": "property",
            "name": "KEY_T",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 822,
            "description": "Code for the U key.",
            "itemtype": "property",
            "name": "KEY_U",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 830,
            "description": "Code for the V key.",
            "itemtype": "property",
            "name": "KEY_V",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 838,
            "description": "Code for the W key.",
            "itemtype": "property",
            "name": "KEY_W",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 846,
            "description": "Code for the X key.",
            "itemtype": "property",
            "name": "KEY_X",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 854,
            "description": "Code for the Y key.",
            "itemtype": "property",
            "name": "KEY_Y",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 862,
            "description": "Code for the Z key.",
            "itemtype": "property",
            "name": "KEY_Z",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 870,
            "description": "Code for the LEFT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 878,
            "description": "Code for the RIGHT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 886,
            "description": "Code for the SELECT key.",
            "itemtype": "property",
            "name": "KEY_SELECT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 894,
            "description": "Code for the number pad 0 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 902,
            "description": "Code for the number pad 1 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 910,
            "description": "Code for the number pad 2 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD 2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 918,
            "description": "Code for the number pad 3 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 926,
            "description": "Code for the number pad 4 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 934,
            "description": "Code for the number pad 5 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 942,
            "description": "Code for the number pad 6 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 950,
            "description": "Code for the number pad 7 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 958,
            "description": "Code for the number pad 8 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 966,
            "description": "Code for the number pad 9 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 974,
            "description": "Code for the MULTIPLY key.",
            "itemtype": "property",
            "name": "KEY_MULTIPLY",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 982,
            "description": "Code for the ADD key.",
            "itemtype": "property",
            "name": "KEY_ADD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 990,
            "description": "Code for the SUBTRACT key.",
            "itemtype": "property",
            "name": "KEY_SUBTRACT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 998,
            "description": "Code for the DECIMAL POINT key.",
            "itemtype": "property",
            "name": "KEY_DECIMAL_POINT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1006,
            "description": "Code for the DIVIDE key.",
            "itemtype": "property",
            "name": "KEY_DIVIDE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1014,
            "description": "Code for the F1 key.",
            "itemtype": "property",
            "name": "KEY_F1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1022,
            "description": "Code for the F2 key.",
            "itemtype": "property",
            "name": "KEY_F2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1030,
            "description": "Code for the F3 key.",
            "itemtype": "property",
            "name": "KEY_F3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1038,
            "description": "Code for the F4 key.",
            "itemtype": "property",
            "name": "KEY_F4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1046,
            "description": "Code for the F5 key.",
            "itemtype": "property",
            "name": "KEY_F5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1054,
            "description": "Code for the F6 key.",
            "itemtype": "property",
            "name": "KEY_F6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1062,
            "description": "Code for the F7 key.",
            "itemtype": "property",
            "name": "KEY_F7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1070,
            "description": "Code for the F8 key.",
            "itemtype": "property",
            "name": "KEY_F8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1078,
            "description": "Code for the F9 key.",
            "itemtype": "property",
            "name": "KEY_F9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1086,
            "description": "Code for the F10 key.",
            "itemtype": "property",
            "name": "KEY_F10",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1094,
            "description": "Code for the F11 key.",
            "itemtype": "property",
            "name": "KEY_F11",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1102,
            "description": "Code for the F12 key.",
            "itemtype": "property",
            "name": "KEY_F12",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1110,
            "description": "Code for the NUM_LOCK key.",
            "itemtype": "property",
            "name": "KEY_NUM_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1118,
            "description": "Code for the SCROLL_LOCK key.",
            "itemtype": "property",
            "name": "KEY_SCROLL_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1126,
            "description": "Code for the SEMI_COLON key.",
            "itemtype": "property",
            "name": "KEY_SEMI_COLON",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1134,
            "description": "Code for the EQUAL_SIGN key.",
            "itemtype": "property",
            "name": "KEY_EQUAL_SIGN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1142,
            "description": "Code for the COMMA key.",
            "itemtype": "property",
            "name": "KEY_COMMA",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1150,
            "description": "Code for the DASH key.",
            "itemtype": "property",
            "name": "KEY_DASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1158,
            "description": "Code for the PERIOD key.",
            "itemtype": "property",
            "name": "KEY_PERIOD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1166,
            "description": "Code for the FORWARD_SLASH key.",
            "itemtype": "property",
            "name": "KEY_FORWARD_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1174,
            "description": "Code for the GRAVE_ACCENT key.",
            "itemtype": "property",
            "name": "KEY_GRAVE_ACCENT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1182,
            "description": "Code for the OPEN_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_OPEN_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1190,
            "description": "Code for the BACK_SLASH key.",
            "itemtype": "property",
            "name": "KEY_BACK_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1198,
            "description": "Code for the CLOSE_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_CLOSE_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1206,
            "description": "Code for the SINGLE_QUOTE key.",
            "itemtype": "property",
            "name": "KEY_SINGLE_QUOTE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1214,
            "description": "Code for the SPACE key.",
            "itemtype": "property",
            "name": "KEY_SPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO",
            "submodule": "input"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 118,
            "description": "The color of this AmbientLight.\n\nFires an {{#crossLink \"AmbientLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "AmbientLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 135,
            "description": "Fired whenever this AmbientLight's {{#crossLink \"AmbientLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "AmbientLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 149,
            "description": "The intensity of this AmbientLight.\n\nFires a {{#crossLink \"AmbientLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "AmbientLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 166,
            "description": "Fired whenever this AmbientLight's  {{#crossLink \"AmbientLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "AmbientLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 131,
            "description": "The direction of this DirLight.\n\nFires a {{#crossLink \"DirLight/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 154,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 167,
            "description": "The color of this DirLight.\n\nFires a {{#crossLink \"DirLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 190,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 203,
            "description": "The intensity of this DirLight.\n\nFires a {{#crossLink \"DirLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 222,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 235,
            "description": "Specifies which coordinate space this DirLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>\n\nFires a {{#crossLink \"DirLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 259,
            "description": "Fired whenever this DirLight's {{#crossLink \"DirLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 121,
            "description": "The light sources in this Lights.\n\nFires a {{#crossLink \"Lights/lights:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lights",
            "default": "[]",
            "type": "{{Array of AmbientLight, PointLight and DirLight}}",
            "class": "Lights",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 140,
            "description": "The position of this PointLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"PointLight/space:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PointLight/pos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pos",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 159,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/pos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pos",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 172,
            "description": "The color of this PointLight.\n\nFires a {{#crossLink \"PointLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 189,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 202,
            "description": "The intensity of this PointLight.\n\nFires a {{#crossLink \"PointLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 221,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 234,
            "description": "The constant attenuation factor for this PointLight.\n\nFires a {{#crossLink \"PointLight/constantAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "constantAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 251,
            "description": "Fired whenever this PointLight's {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "constantAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 265,
            "description": "The linear attenuation factor for this PointLight.\n\nFires a {{#crossLink \"PointLight/linearAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "linearAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 282,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "linearAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 296,
            "description": "The quadratic attenuation factor for this Pointlight.\n\nFires a {{#crossLink \"PointLight/quadraticAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "quadraticAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 313,
            "description": "Fired whenever this PointLight's {{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "quadraticAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 327,
            "description": "Indicates which coordinate space this PointLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>\n\nFires a {{#crossLink \"PointLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 351,
            "description": "Fired whenever this Pointlight's  {{#crossLink \"PointLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO",
            "submodule": "lighting"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 119,
            "description": "This Fresnel's edge color.\n\nFires an {{#crossLink \"Fresnel/edgeColor:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "edgeColor",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 136,
            "description": "Fired whenever this Fresnel's {{#crossLink \"leftColorLight/edgeColor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "edgeColor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 150,
            "description": "This Fresnel's center color.\n\nFires an {{#crossLink \"Fresnel/centerColor:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "centerColor",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 167,
            "description": "Fired whenever this Fresnel's {{#crossLink \"rightColorLight/centerColor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "centerColor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 181,
            "description": "Indicates this Fresnel's edge bias.\n\nFires a {{#crossLink \"Fresnel/edgeBias:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "edgeBias",
            "default": "0",
            "type": "Number",
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 198,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/edgeBias:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "edgeBias",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 212,
            "description": "Indicates this Fresnel's center bias.\n\nFires a {{#crossLink \"Fresnel/centerBias:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "centerBias",
            "default": "1",
            "type": "Number",
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 229,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/centerBias:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "centerBias",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 243,
            "description": "Indicates this Fresnel's power.\n\nFires a {{#crossLink \"Fresnel/power:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "power",
            "default": "1",
            "type": "Number",
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 260,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/power:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "power",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 182,
            "description": "Controls how metallic this material is.\n\nNonmetals have a value of ````0````, while metals have a value of ````1````. For pure surfaces, such as\npure metal, pure stone, pure plastic, etc. this value will be 0 or 1, not anything in between. When\ncreating hybrid surfaces like corroded, dusty, or rusty metals, you may find that you need some value\nbetween 0 and 1.\n\nFires a {{#crossLink \"PBRMaterial/metallic:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "metallic",
            "default": "0.0",
            "type": "Number",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 204,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/metallic:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "metallic",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 218,
            "description": "Base color of this material.\n\nThis property may be overridden by {{#crossLink \"PBRMaterial/colorMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PBRMaterial/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 237,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 251,
            "description": "Color {{#crossLink \"Texture\"}}{{/crossLink}}, to apply instead of {{#crossLink \"PBRMaterial/color:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PBRMaterial/colorMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 264,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 278,
            "description": "Emissive color of this material.\n\nThis property may be overridden by {{#crossLink \"PBRMaterial/emissiveMap:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"PBRMaterial/emissive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissive",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 297,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/emissive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissive",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 311,
            "description": "Emissive {{#crossLink \"Texture\"}}{{/crossLink}}, to apply instead of {{#crossLink \"PBRMaterial/emissive:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"PBRMaterial/emissiveMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 324,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/emissiveMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 338,
            "description": "Opacity of this material.\n\nOpacity is a value in the range [0..1], in which 0 is fully transparent and 1.0 is fully opaque.\n\nThis property may be overidden by {{#crossLink \"PBRMaterial/opacityMap:property\"}}{{/crossLink}}.\n\nAttached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} will appear transparent only if they are also attached\nto {{#crossLink \"Modes\"}}Modes{{/crossLink}} that have {{#crossLink \"Modes/transparent:property\"}}transparent{{/crossLink}}\nset to **true**.\n\nFires an {{#crossLink \"PBRMaterial/opacity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacity",
            "default": "1.0",
            "type": "Number",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 363,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/opacity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 377,
            "description": "Opacity {{#crossLink \"Texture\"}}{{/crossLink}}, to apply instead of {{#crossLink \"PBRMaterial/opacity:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"PBRMaterial/opacityMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacityMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 390,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/opacityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacityMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 404,
            "description": "A factor in range [0..1] that indicates the surface roughness of this PBRMaterial.\n\nA value of ````0```` is a mirrow reflection, while ````1```` is completely matte.\n\nThis property may be overidden by {{#crossLink \"PBRMaterial/roughnessMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PBRMaterial/roughness:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "roughness",
            "default": "0.0",
            "type": "Number",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 425,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/roughness:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "roughness",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 439,
            "description": "Roughness {{#crossLink \"Texture\"}}{{/crossLink}}, to apply instead of {{#crossLink \"PBRMaterial/roughness:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"PBRMaterial/roughnessMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "roughnessMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 452,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/roughnessMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "roughnessMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 466,
            "description": "A normal map {{#crossLink \"Texture\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PBRMaterial/normalMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normalMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 479,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/normal:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normalMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 493,
            "description": "Specular color of this material.\n\nThis property may be overridden by {{#crossLink \"PBRMaterial/specularMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PBRMaterial/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[0.3, 0.3, 0.3]",
            "type": "Array(Number)",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 512,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 527,
            "description": "Specular {{#crossLink \"Texture\"}}{{/crossLink}}, to apply instead of {{#crossLink \"PBRMaterial/specular:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PBRMaterial/specularMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/pbrMaterial.js",
            "line": 540,
            "description": "Fired whenever this PBRMaterial's {{#crossLink \"PBRMaterial/specularMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PBRMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 221,
            "description": "The PhongMaterial's ambient color.\n\nFires a {{#crossLink \"PhongMaterial/ambient:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambient",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 238,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambient",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 252,
            "description": "The PhongMaterial's diffuse color.\n\nThis property may be overridden by {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 271,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 285,
            "description": "The material's specular color.\n\nThis property may be overridden by {{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 304,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 318,
            "description": "The PhongMaterial's emissive color.\n\nThis property may be overridden by {{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/emissive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissive",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Array(Number)",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 337,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissive",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 351,
            "description": "Factor in the range [0..1] indicating how transparent the PhongMaterial is.\n\nA value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n\nAttached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} will appear transparent only if they are also attached\nto {{#crossLink \"Modes\"}}Modes{{/crossLink}} that have {{#crossLink \"Modes/transparent:property\"}}transparent{{/crossLink}}\nset to **true**.\n\nThis property may be overridden by {{#crossLink \"PhongMaterial/opacityMap:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"PhongMaterial/opacity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacity",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 376,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 390,
            "description": "A factor in range [0..128] that determines the size and sharpness of the specular highlights create by this PhongMaterial.\n\nLarger values produce smaller, sharper highlights. A value of 0.0 gives very large highlights that are almost never\ndesirable. Try values close to 10 for a larger, fuzzier highlight and values of 100 or more for a small, sharp\nhighlight.\n\nFires a {{#crossLink \"PhongMaterial/shininess:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shininess",
            "default": "80.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 411,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/shininess:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shininess",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 425,
            "description": "The PhongMaterial's line width.\n\nFires a {{#crossLink \"PhongMaterial/lineWidth:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lineWidth",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 442,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/lineWidth:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lineWidth",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 456,
            "description": "The PhongMaterial's point size.\n\nFires a {{#crossLink \"PhongMaterial/pointSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pointSize",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 473,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/pointSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pointSize",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 487,
            "description": "Scalar in range 0-1 that controls how much {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} is reflected by this PhongMaterial.\n\nThe surface will be non-reflective when this is 0, and completely mirror-like when it is 1.0.\n\nThis property may be overridden by {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/reflectivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivity",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 508,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivity",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 522,
            "description": "A normal {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/normalMap:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/normalMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normalMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 537,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/normalMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normalMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 551,
            "description": "An ambient {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/ambientMap:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/ambientMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambientMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 566,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/ambientMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambientMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 580,
            "description": "A diffuse {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/diffuseMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuseMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 595,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuseMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 609,
            "description": "A specular {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/specularMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 624,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 638,
            "description": "An emissive {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} when not null or undefined.\n\nFires an {{#crossLink \"PhongMaterial/emissiveMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 653,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 667,
            "description": "An opacity {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} when not null or undefined.\n\nFires an {{#crossLink \"PhongMaterial/opacityMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacityMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 682,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/opacityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacityMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 696,
            "description": "A reflectivity {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/reflectivityMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivityMap",
            "default": "null",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 711,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivityMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 725,
            "description": "A reflection {{#crossLink \"CubeMap\"}}{{/crossLink}} attached to this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/reflection:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflection",
            "default": "null",
            "type": "{CubeMap}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 738,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflection",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "CubeMap"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 752,
            "description": "A diffuse {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/diffuseFresnel:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/diffuseFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuseFresnel",
            "default": "null",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 767,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuseFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 781,
            "description": "A specular {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/specularFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularFresnel",
            "default": "null",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 796,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/specularFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 810,
            "description": "An emissive {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} when not null or undefined.\n\nFires an {{#crossLink \"PhongMaterial/emissiveFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveFresnel",
            "default": "null",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 825,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/emissiveFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 839,
            "description": "An opacity {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} when not null or undefined.\n\nFires an {{#crossLink \"PhongMaterial/opacityFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacityFresnel",
            "default": "null",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 854,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/opacityFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacityFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 868,
            "description": "A reflectivity {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property overrides {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"PhongMaterial/reflectivityFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivityFresnel",
            "default": "null",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 883,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivityFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivityFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 350,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 357,
            "description": "Fired whenever this Texture has loaded the\nimage file that its {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property currently points to.",
            "itemtype": "event",
            "name": "loaded",
            "params": [
                {
                    "name": "value",
                    "description": "The value of the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 388,
            "description": "Indicates an HTML DOM Image object to source this Texture from.\n\nAlternatively, you could indicate the source via either of properties\n{{#crossLink \"Texture/src:property\"}}{{/crossLink}} or {{#crossLink \"Texture/target:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"Texture/image:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} and\n{{#crossLink \"Texture/target:property\"}}{{/crossLink}} properties to null.",
            "itemtype": "property",
            "name": "image",
            "default": "null",
            "type": "{HTMLImageElement}",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 416,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 429,
            "description": "Indicates a path to an image file to source this Texture from.\n\nAlternatively, you could indicate the source via either of properties\n{{#crossLink \"Texture/image:property\"}}{{/crossLink}} or {{#crossLink \"Texture/target:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Texture/src:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Texture/image:property\"}}{{/crossLink}} and\n{{#crossLink \"Texture/target:property\"}}{{/crossLink}} properties to null.",
            "itemtype": "property",
            "name": "src",
            "default": "null",
            "type": "String",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 457,
            "description": "Fired whenever this Texture's {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "String",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 471,
            "description": "Instance or ID of a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} or\n{{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} to source this Texture from.\n\nAlternatively, you could indicate the source via either of properties\n{{#crossLink \"Texture/src:property\"}}{{/crossLink}} or {{#crossLink \"Texture/image:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Texture/target:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} and\n{{#crossLink \"Texture/image:property\"}}{{/crossLink}} properties to null.",
            "itemtype": "property",
            "name": "target",
            "default": "null",
            "type": "String | XEO.ColorTarget | XEO.DepthTarget",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 507,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/target:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "target",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "String | XEO.ColorTarget | XEO.DepthTarget",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 521,
            "description": "2D translation vector that will be added to this Texture's *S* and *T* coordinates.\n\nFires a {{#crossLink \"Texture/translate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "translate",
            "default": "[0, 0]",
            "type": "Array(Number)",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 541,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/translate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "translate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 554,
            "description": "2D scaling vector that will be applied to this Texture's *S* and *T* coordinates.\n\nFires a {{#crossLink \"Texture/scale:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "scale",
            "default": "[1, 1]",
            "type": "Array(Number)",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 574,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/scale:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "scale",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 587,
            "description": "Rotation, in degrees, that will be applied to this Texture's *S* and *T* coordinates.\n\nFires a {{#crossLink \"Texture/rotate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "rotate",
            "default": "0",
            "type": "Number",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 611,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/rotate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "rotate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 624,
            "description": "How this Texture is sampled when a texel covers less than one pixel.\n\nOptions are:\n\n<ul>\n    <li>**\"nearest\"** - Uses the value of the texture element that is nearest\n    (in Manhattan distance) to the center of the pixel being textured.</li>\n\n    <li>**\"linear\"** - Uses the weighted average of the four texture elements that are\n    closest to the center of the pixel being textured.</li>\n\n    <li>**\"nearestMipmapNearest\"** - Chooses the mipmap that most closely matches the\n    size of the pixel being textured and uses the \"nearest\" criterion (the texture\n    element nearest to the center of the pixel) to produce a texture value.</li>\n\n    <li>**\"linearMipmapNearest\"** - Chooses the mipmap that most closely matches the size of\n    the pixel being textured and uses the \"linear\" criterion (a weighted average of the\n    four texture elements that are closest to the center of the pixel) to produce a\n    texture value.</li>\n\n    <li>**\"nearestMipmapLinear\"** - Chooses the two mipmaps that most closely\n    match the size of the pixel being textured and uses the \"nearest\" criterion\n    (the texture element nearest to the center of the pixel) to produce a texture\n    value from each mipmap. The final texture value is a weighted average of those two\n    values.</li>\n\n    <li>**\"linearMipmapLinear\"** - **(default)** - Chooses the two mipmaps that most closely match the size\n    of the pixel being textured and uses the \"linear\" criterion (a weighted average\n    of the four texture elements that are closest to the center of the pixel) to\n    produce a texture value from each mipmap. The final texture value is a weighted\n    average of those two values.</li>\n</ul>\n\nFires a {{#crossLink \"Texture/minFilter:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "minFilter",
            "default": "\"linearMipmapLinear\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 688,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/minFilter:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "minFilter",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 701,
            "description": "How this Texture is sampled when a texel covers more than one pixel.\n\nOptions are:\n\n<ul>\n    <li>**\"nearest\"** - Uses the value of the texture element that is nearest\n    (in Manhattan distance) to the center of the pixel being textured.</li>\n    <li>**\"linear\"** - **(default)** - Uses the weighted average of the four texture elements that are\n    closest to the center of the pixel being textured.</li>\n</ul>\n\nFires a {{#crossLink \"Texture/magFilter:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "magFilter",
            "default": "\"linear\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 738,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/magFilter:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "magFilter",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 751,
            "description": "Wrap parameter for this Texture's *S* coordinate.\n\nOptions are:\n\n<ul>\n    <li>**\"clampToEdge\"** -  causes *S* coordinates to be clamped to the size of the texture.</li>\n    <li>**\"mirroredRepeat\"** - causes the *S* coordinate to be set to the fractional part of the texture coordinate\n    if the integer part of *S* is even; if the integer part of *S* is odd, then the *S* texture coordinate is\n    set to *1 - frac ⁡ S* , where *frac ⁡ S* represents the fractional part of *S*.</li>\n    <li>**\"repeat\"** - **(default)** - causes the integer part of the *S* coordinate to be ignored; xeoEngine uses only the\n    fractional part, thereby creating a repeating pattern.</li>\n</ul>\n\nFires a {{#crossLink \"Texture/wrapS:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "wrapS",
            "default": "\"repeat\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 790,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/wrapS:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "wrapS",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 803,
            "description": "Wrap parameter for this Texture's *T* coordinate.\n\nOptions are:\n\n<ul>\n    <li>**\"clampToEdge\"** -  Causes *T* coordinates to be clamped to the size of the texture.</li>\n    <li>**\"mirroredRepeat\"** - Causes the *T* coordinate to be set to the fractional part of the texture coordinate\n    if the integer part of *T* is even; if the integer part of *T* is odd, then the *T* texture coordinate is\n    set to *1 - frac ⁡ S* , where *frac ⁡ S* represents the fractional part of *T*.</li>\n    <li>**\"repeat\"** - **(default)** - Causes the integer part of the *T* coordinate to be ignored; xeoEngine uses only the\n    fractional part, thereby creating a repeating pattern.</li>\n</ul>\n\nFires a {{#crossLink \"Texture/wrapT:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "wrapT",
            "default": "\"repeat\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 842,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/wrapT:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "wrapT",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO",
            "submodule": "materials"
        },
        {
            "file": "src/math/math.js",
            "line": 68,
            "description": "The number of radiians in a degree (0.0174532925).",
            "itemtype": "property",
            "name": "DEGTORAD",
            "type": "{Number}",
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 76,
            "description": "Returns a new, uninitialized two-element vector.",
            "itemtype": "method",
            "name": "vec2",
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 86,
            "description": "Returns a new, uninitialized three-element vector.",
            "itemtype": "method",
            "name": "vec3",
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 96,
            "description": "Returns a new, uninitialized four-element vector.",
            "itemtype": "method",
            "name": "vec4",
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 106,
            "description": "Returns a new, uninitialized 3x3 matrix.",
            "itemtype": "method",
            "name": "mat3",
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 116,
            "description": "Returns a new, uninitialized 4x4 matrix.",
            "itemtype": "method",
            "name": "mat4",
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 126,
            "description": "Returns a new, uninitialized 3D axis-aligned bounding box.",
            "itemtype": "method",
            "name": "AABB3",
            "static": 1,
            "return": {
                "description": "The bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 139,
            "description": "Returns a new, uninitialized 2D axis-aligned bounding box.",
            "itemtype": "method",
            "name": "AABB2",
            "static": 1,
            "return": {
                "description": "The bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 152,
            "description": "Returns a new UUID.",
            "itemtype": "method",
            "name": "createUUID",
            "static": 1,
            "return": {
                "description": "string The new UUID"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 180,
            "description": "Floating-point modulus",
            "itemtype": "method",
            "name": "fmod",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 199,
            "description": "Negates a four-element vector.",
            "itemtype": "method",
            "name": "negateVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "Vector to negate",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 218,
            "description": "Adds one four-element vector to another.",
            "itemtype": "method",
            "name": "addVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 238,
            "description": "Adds a scalar value to each element of a four-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 258,
            "description": "Adds one three-element vector to another.",
            "itemtype": "method",
            "name": "addVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 277,
            "description": "Adds a scalar value to each element of a three-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 296,
            "description": "Subtracts one four-element vector from another.",
            "itemtype": "method",
            "name": "subVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 316,
            "description": "Subtracts one three-element vector from another.",
            "itemtype": "method",
            "name": "subVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 335,
            "description": "Subtracts one two-element vector from another.",
            "itemtype": "method",
            "name": "subVec2",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 353,
            "description": "Subtracts a scalar value from each element of a four-element vector.",
            "itemtype": "method",
            "name": "subVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 373,
            "description": "Sets each element of a 4-element vector to a scalar value minus the value of that element.",
            "itemtype": "method",
            "name": "subScalarVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 393,
            "description": "Multiplies one three-element vector by another.",
            "itemtype": "method",
            "name": "mulVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 413,
            "description": "Multiplies each element of a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec34calar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 433,
            "description": "Multiplies each element of a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec3Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 452,
            "description": "Multiplies each element of a two-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec2Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 470,
            "description": "Divides one three-element vector by another.",
            "itemtype": "method",
            "name": "divVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 489,
            "description": "Divides one four-element vector by another.",
            "itemtype": "method",
            "name": "divVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 509,
            "description": "Divides a scalar by a three-element vector, returning a new vector.",
            "itemtype": "method",
            "name": "divScalarVec3",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 528,
            "description": "Divides a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "divVec3Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 547,
            "description": "Divides a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "divVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 568,
            "description": "Divides a scalar by a four-element vector, returning a new vector.",
            "itemtype": "method",
            "name": "divScalarVec4",
            "static": 1,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 588,
            "description": "Returns the dot product of two four-element vectors.",
            "itemtype": "method",
            "name": "dotVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The dot product"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 600,
            "description": "Returns the cross product of two four-element vectors.",
            "itemtype": "method",
            "name": "cross3Vec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The cross product"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 618,
            "description": "Returns the cross product of two three-element vectors.",
            "itemtype": "method",
            "name": "cross3Vec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The cross product"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 643,
            "description": "Returns the length of a four-element vector.",
            "itemtype": "method",
            "name": "lenVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The length"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 654,
            "description": "Returns the dot product of two three-element vectors.",
            "itemtype": "method",
            "name": "dotVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The dot product"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 666,
            "description": "Returns the dot product of two two-element vectors.",
            "itemtype": "method",
            "name": "dotVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The dot product"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 688,
            "description": "Returns the length of a three-element vector.",
            "itemtype": "method",
            "name": "lenVec3",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The length"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 699,
            "description": "Returns the length of a two-element vector.",
            "itemtype": "method",
            "name": "lenVec2",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The length"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 710,
            "itemtype": "method",
            "name": "rcpVec3",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 722,
            "description": "Normalizes a four-element vector",
            "itemtype": "method",
            "name": "normalizeVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 736,
            "description": "Normalizes a three-element vector",
            "itemtype": "method",
            "name": "normalizeVec4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 746,
            "description": "Normalizes a two-element vector",
            "itemtype": "method",
            "name": "normalizeVec2",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 756,
            "description": "Duplicates a 4x4 identity matrix.",
            "itemtype": "method",
            "name": "dupMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 765,
            "description": "Extracts a 3x3 matrix from a 4x4 matrix.",
            "itemtype": "method",
            "name": "mat4To3",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 778,
            "description": "Returns a 4x4 matrix with each element set to the given scalar value.",
            "itemtype": "method",
            "name": "m4s",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 792,
            "description": "Returns a 4x4 matrix with each element set to zero.",
            "itemtype": "method",
            "name": "setMat4ToZeroes",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 801,
            "description": "Returns a 4x4 matrix with each element set to 1.0.",
            "itemtype": "method",
            "name": "setMat4ToOnes",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 810,
            "description": "Returns a 4x4 matrix with each element set to 1.0.",
            "itemtype": "method",
            "name": "setMat4ToOnes",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 824,
            "description": "Returns a 4x4 matrix with diagonal elements set to the given vector.",
            "itemtype": "method",
            "name": "diagonalMat4c",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 833,
            "description": "Returns a 4x4 matrix with diagonal elements set to the given scalar.",
            "itemtype": "method",
            "name": "diagonalMat4s",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 842,
            "description": "Returns a 4x4 identity matrix.",
            "itemtype": "method",
            "name": "identityMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 874,
            "description": "Tests if the given 4x4 matrix is the identity matrix.",
            "itemtype": "method",
            "name": "isIdentityMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 889,
            "description": "Negates the given 4x4 matrix.",
            "itemtype": "method",
            "name": "negateMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 917,
            "description": "Adds the given 4x4 matrices together.",
            "itemtype": "method",
            "name": "addMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 945,
            "description": "Adds the given scalar to each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "addMat4Scalar",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 973,
            "description": "Adds the given scalar to each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "addScalarMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 982,
            "description": "Subtracts the second 4x4 matrix from the first.",
            "itemtype": "method",
            "name": "subMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1010,
            "description": "Subtracts the given scalar from each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "subMat4Scalar",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1038,
            "description": "Subtracts the given scalar from each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "subScalarMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1066,
            "description": "Multiplies the two given 4x4 matrix by each other.",
            "itemtype": "method",
            "name": "mulMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1107,
            "description": "Multiplies each element of the given 4x4 matrix by the given scalar.",
            "itemtype": "method",
            "name": "mulMat4Scalar",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1135,
            "description": "Multiplies the given 4x4 matrix by the given four-element vector.",
            "itemtype": "method",
            "name": "mulMat4v4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1150,
            "description": "Transposes the given 4x4 matrix.",
            "itemtype": "method",
            "name": "transposeMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1196,
            "description": "Returns the determinant of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "determinantMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1215,
            "description": "Returns the inverse of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "inverseMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1265,
            "description": "Returns the trace of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "traceMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1274,
            "description": "Returns 4x4 translation matrix.",
            "itemtype": "method",
            "name": "translationMat4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1287,
            "description": "Returns 4x4 translation matrix.",
            "itemtype": "method",
            "name": "translationMat4c",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1296,
            "description": "Returns 4x4 translation matrix.",
            "itemtype": "method",
            "name": "translationMat4s",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1305,
            "description": "Returns 4x4 rotation matrix.",
            "itemtype": "method",
            "name": "rotationMat4v",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1357,
            "description": "Returns 4x4 rotation matrix.",
            "itemtype": "method",
            "name": "rotationMat4c",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1366,
            "description": "Returns 4x4 scale matrix.",
            "itemtype": "method",
            "name": "scalingMat4v",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1379,
            "description": "Returns 4x4 scale matrix.",
            "itemtype": "method",
            "name": "scalingMat4c",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1388,
            "description": "Returns 4x4 scale matrix.",
            "itemtype": "method",
            "name": "scalingMat4s",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1397,
            "description": "Returns a 4x4 'lookat' viewing transform matrix.",
            "itemtype": "method",
            "name": "lookAtMat4v",
            "params": [
                {
                    "name": "pos",
                    "description": "vec3 position of the viewer"
                },
                {
                    "name": "target",
                    "description": "vec3 point the viewer is looking at"
                },
                {
                    "name": "up",
                    "description": "vec3 pointing \"up\""
                },
                {
                    "name": "dest",
                    "description": "mat4 Optional, mat4 frustum matrix will be written into"
                }
            ],
            "return": {
                "description": "dest if specified, a new mat4 otherwise",
                "type": "Mat4"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1492,
            "description": "Returns a 4x4 'lookat' viewing transform matrix.",
            "itemtype": "method",
            "name": "lookAtMat4c",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1501,
            "description": "Returns a 4x4 orthographic projection matrix.",
            "itemtype": "method",
            "name": "orthoMat4c",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1537,
            "description": "Returns a 4x4 perspective projection matrix.",
            "itemtype": "method",
            "name": "frustumMat4v",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1581,
            "description": "Returns a 4x4 perspective projection matrix.",
            "itemtype": "method",
            "name": "frustumMat4v",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1612,
            "description": "Returns a 4x4 perspective projection matrix.",
            "itemtype": "method",
            "name": "perspectiveMatrix4v",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1633,
            "description": "Transforms a three-element position by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPoint3",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1672,
            "description": "Transforms an array of three-element positions by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPoints3",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1713,
            "description": "Transforms a three-element vector by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformVec3",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1727,
            "description": "Transforms a four-element vector by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformVec4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1742,
            "description": "Transforms a four-element vector by a 4x4 projection matrix.",
            "itemtype": "method",
            "name": "projectVec4",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1752,
            "description": "Linearly interpolates between two 3D vectors.",
            "itemtype": "method",
            "name": "lerpVec3",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1766,
            "description": "Gets the diagonal size of a boundary given as minima and maxima.",
            "itemtype": "method",
            "name": "getAABBDiag",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1776,
            "description": "Gets the center of a boundary given as minima and maxima.",
            "itemtype": "method",
            "name": "getAABBCenter",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1791,
            "description": "Gets the center of a 2D boundary given as minima and maxima.",
            "itemtype": "method",
            "name": "getAABB2Center",
            "static": 1,
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1805,
            "description": "Collapses a 3D axis-aligned boundary, ready to expand to fit 2D points.\nCreates new AABB if none supplied.",
            "itemtype": "method",
            "name": "collapseAABB3",
            "static": 1,
            "params": [
                {
                    "name": "aabb",
                    "description": "3D axis-aligned bounding box.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "3D axis-aligned bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1828,
            "description": "Converts an axis-aligned 3D boundary into an oriented boundary consisting of\nan array of eight 3D positions, one for each corner of the boundary.",
            "itemtype": "method",
            "name": "AABB3ToOBB3",
            "static": 1,
            "params": [
                {
                    "name": "aabb",
                    "description": "Axis-aligned boundary.",
                    "type": "*"
                },
                {
                    "name": "obb",
                    "description": "Oriented bounding box.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Oriented bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1917,
            "description": "Finds the minimum axis-aligned 3D boundary enclosing the 3D points given in a flattened,  1-dimensional array.",
            "itemtype": "method",
            "name": "positions3ToAABB3",
            "static": 1,
            "params": [
                {
                    "name": "positions",
                    "description": "Flattened 3D positions array",
                    "type": "Array"
                },
                {
                    "name": "aabb",
                    "description": "Axis-aligned bounding box.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Axis-aligned bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1980,
            "description": "Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.",
            "itemtype": "method",
            "name": "points3ToAABB3",
            "static": 1,
            "params": [
                {
                    "name": "points",
                    "description": "Oriented bounding box.",
                    "type": "Array"
                },
                {
                    "name": "aabb",
                    "description": "Axis-aligned bounding box.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Axis-aligned bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2043,
            "description": "Expands the first axis-aligned 3D boundary to enclose the second, if required.",
            "itemtype": "method",
            "name": "expandAABB3",
            "static": 1,
            "params": [
                {
                    "name": "aabb1",
                    "description": "First AABB",
                    "type": "*"
                },
                {
                    "name": "aabb2",
                    "description": "Second AABB",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The second AABB",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2081,
            "description": "Expands an axis-aligned 3D boundary to enclose the given point, if needed.",
            "itemtype": "method",
            "name": "expandAABB3Point3",
            "static": 1,
            "params": [
                {
                    "name": "aabb",
                    "description": "AABB",
                    "type": "*"
                },
                {
                    "name": "p",
                    "description": "Point",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The AABB",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2119,
            "description": "Collapses a 2D axis-aligned boundary, ready to expand to fit 2D points.\nCreates new AABB if none supplied.",
            "itemtype": "method",
            "name": "collapseAABB2",
            "static": 1,
            "params": [
                {
                    "name": "aabb",
                    "description": "2D axis-aligned bounding box.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "2D axis-aligned bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2140,
            "description": "Finds the minimum 2D projected axis-aligned boundary enclosing the given 3D points.",
            "itemtype": "method",
            "name": "points3ToAABB2",
            "static": 1,
            "params": [
                {
                    "name": "points",
                    "description": "3D Points.",
                    "type": "Array"
                },
                {
                    "name": "aabb",
                    "description": "2D axis-aligned bounding box.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "2D axis-aligned bounding box.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2197,
            "description": "Expands the first axis-aligned 2D boundary to enclose the second, if required.",
            "itemtype": "method",
            "name": "expandAABB3",
            "static": 1,
            "params": [
                {
                    "name": "aabb1",
                    "description": "First AABB",
                    "type": "*"
                },
                {
                    "name": "aabb2",
                    "description": "Second AABB",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The second AABB",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2227,
            "description": "Expands an axis-aligned 2D boundary to enclose the given point, if required.",
            "itemtype": "method",
            "name": "expandAABB2Point2",
            "static": 1,
            "params": [
                {
                    "name": "aabb",
                    "description": "AABB",
                    "type": "*"
                },
                {
                    "name": "p",
                    "description": "Point",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The AABB",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2277,
            "description": "Builds normal vectors from positions and indices.",
            "itemtype": "method",
            "name": "buildTangents",
            "static": 1,
            "params": [
                {
                    "name": "positions",
                    "description": "One-dimensional flattened array of positions.",
                    "type": "Array of Number"
                },
                {
                    "name": "indices",
                    "description": "One-dimensional flattened array of indices.*",
                    "type": "Array of Number"
                }
            ],
            "return": {
                "description": "One-dimensional flattened array of normal vectors.",
                "type": "Array of Number"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2341,
            "description": "Builds vertex tangent vectors from positions, UVs and indices",
            "itemtype": "method",
            "name": "buildTangents",
            "static": 1,
            "params": [
                {
                    "name": "positions",
                    "description": "One-dimensional flattened array of positions.",
                    "type": "Array of Number"
                },
                {
                    "name": "indices",
                    "description": "One-dimensional flattened array of indices.",
                    "type": "Array of Number"
                },
                {
                    "name": "uv",
                    "description": "One-dimensional flattened array of UV coordinates.",
                    "type": "Array of Number"
                }
            ],
            "return": {
                "description": "One-dimensional flattened array of tangents.",
                "type": "Array of Number"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2417,
            "description": "Flattens a two-dimensional array into a one-dimensional array.",
            "itemtype": "method",
            "name": "flatten",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "A 2D array",
                    "type": "Array of Arrays"
                }
            ],
            "return": {
                "description": "Flattened 1D array"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2445,
            "description": "Builds vertex and index arrays needed by color-indexed triangle picking.",
            "itemtype": "method",
            "name": "getPickPrimitives",
            "static": 1,
            "params": [
                {
                    "name": "positions",
                    "description": "One-dimensional flattened array of positions.",
                    "type": "Array of Number"
                },
                {
                    "name": "indices",
                    "description": "One-dimensional flattened array of indices.",
                    "type": "Array of Number"
                },
                {
                    "name": "pickTris",
                    "description": "Optional object to return the arrays on.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "debug",
                    "description": "Assigns random colors to triangles when true.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Object containing the arrays, created by this method or reused from 'pickTris' parameter.",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2548,
            "description": "Finds the intersection of a 3D ray with a 3D triangle.",
            "itemtype": "method",
            "name": "rayTriangleIntersect",
            "static": 1,
            "params": [
                {
                    "name": "origin",
                    "description": "Ray origin.",
                    "type": "Array of Number"
                },
                {
                    "name": "dir",
                    "description": "Ray direction.",
                    "type": "Array of Number"
                },
                {
                    "name": "a",
                    "description": "First triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "b",
                    "description": "Second triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "c",
                    "description": "Third triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "isect",
                    "description": "Intersection point.",
                    "type": "Array of Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The intersection point, or null if no intersection found.",
                "type": "Array of Number"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2596,
            "description": "Finds the intersection of a 3D ray with a plane defined by 3 points.",
            "itemtype": "method",
            "name": "rayPlaneIntersect",
            "static": 1,
            "params": [
                {
                    "name": "origin",
                    "description": "Ray origin.",
                    "type": "Array of Number"
                },
                {
                    "name": "dir",
                    "description": "Ray direction.",
                    "type": "Array of Number"
                },
                {
                    "name": "a",
                    "description": "First point on plane.",
                    "type": "Array of Number"
                },
                {
                    "name": "b",
                    "description": "Second point on plane.",
                    "type": "Array of Number"
                },
                {
                    "name": "c",
                    "description": "Third point on plane.",
                    "type": "Array of Number"
                },
                {
                    "name": "isect",
                    "description": "Intersection point.",
                    "type": "Array of Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The intersection point.",
                "type": "Array of Number"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2634,
            "description": "Gets barycentric coordinates from cartesian coordinates within a triangle.",
            "itemtype": "method",
            "name": "cartesianToBaryCentric",
            "static": 1,
            "params": [
                {
                    "name": "cartesian",
                    "description": "Cartesian coordinates.",
                    "type": "Array of Number"
                },
                {
                    "name": "a",
                    "description": "First triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "b",
                    "description": "Second triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "c",
                    "description": "Third triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "bary",
                    "description": "The barycentric coordinates.",
                    "type": "Array of Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2701,
            "description": "Returns true if the given barycentric coordinates are within their triangle.",
            "itemtype": "method",
            "name": "barycentricInsideTriangle",
            "static": 1,
            "params": [
                {
                    "name": "bary",
                    "description": "Barycentric coordinates.",
                    "type": "Array of Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2718,
            "description": "Gets cartesian coordinates from barycentric coordinates within a triangle.",
            "itemtype": "method",
            "name": "barycentricToCartesian",
            "static": 1,
            "params": [
                {
                    "name": "bary",
                    "description": "The barycentric coordinate.",
                    "type": "Array of Number"
                },
                {
                    "name": "a",
                    "description": "First triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "b",
                    "description": "Second triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "c",
                    "description": "Third triangle vertex.",
                    "type": "Array of Number"
                },
                {
                    "name": "cartesian",
                    "description": "Cartesian coordinates.",
                    "type": "Array of Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "XEO.math.math",
            "module": "XEO",
            "submodule": "math",
            "namespace": "XEO.math"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 177,
            "description": "Fired when this GameObject is *picked* via a call to the {{#crossLink \"Canvas/pick:method\"}}{{/crossLink}} method\non the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas {{/crossLink}}.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "objectId",
                    "description": "The ID of this GameObject.",
                    "type": "String"
                },
                {
                    "name": "canvasX",
                    "description": "The X-axis Canvas coordinate that was picked.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The Y-axis Canvas coordinate that was picked.",
                    "type": "Number"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 230,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 259,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 283,
            "description": "The {{#crossLink \"Clips\"}}Clips{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/clips:property\"}}clips{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/clips:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clips",
            "type": "Clips",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 299,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/clips:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clips",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 312,
            "description": "The {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/colorTarget:property\"}}colorTarget{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/colorTarget:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorTarget",
            "type": "ColorTarget",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 328,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/colorTarget:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorTarget",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 341,
            "description": "The {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/colorBuf:property\"}}colorBuf{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/colorBuf:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorBuf",
            "type": "ColorBuf",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 357,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/colorBuf:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorBuf",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 371,
            "description": "The {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/depthTarget:property\"}}depthTarget{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/depthTarget:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthTarget",
            "type": "DepthTarget",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 387,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/depthTarget:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthTarget",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 401,
            "description": "The {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/depthBuf:property\"}}depthBuf{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/depthBuf:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthBuf",
            "type": "DepthBuf",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 417,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/depthBuf:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthBuf",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 431,
            "description": "The {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/visibility:property\"}}visibility{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/visibility:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visibility",
            "type": "Visibility",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 447,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/visibility:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visibility",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 461,
            "description": "The {{#crossLink \"Modes\"}}Modes{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/modes:property\"}}modes{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/modes:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "modes",
            "type": "Modes",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 477,
            "description": "Fired whenever this GameObject's {{#crossLink \"GameObject/modes:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "modes",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 491,
            "description": "The {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/geometry:property\"}}camera{{/crossLink}}\n(a simple box) when set to a null or undefined value.\n\nFires a {{#crossLink \"GameObject/geometry:event\"}}{{/crossLink}} event on change.\n\nUpdates {{#crossLink \"GameObject/boundary\"}}{{/crossLink}},\n{{#crossLink \"GameObject/worldObb\"}}{{/crossLink}} and\n{{#crossLink \"GameObject/center\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "geometry",
            "type": "Geometry",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 527,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/geometry:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "geometry",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 554,
            "description": "The {{#crossLink \"Layer\"}}Layer{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/layer:property\"}}layer{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/layer:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "layer",
            "type": "Layer",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 570,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/layer:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "layer",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 584,
            "description": "The {{#crossLink \"Lights\"}}Lights{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/lights:property\"}}lights{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/lights:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lights",
            "type": "Lights",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 600,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/lights:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lights",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 614,
            "description": "The {{#crossLink \"Material\"}}Material{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/material:property\"}}material{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/material:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "material",
            "type": "Material",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 630,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/material:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "material",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 644,
            "description": "The {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/morphTargets:property\"}}morphTargets{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/morphTargets:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "morphTargets",
            "type": "MorphTargets",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 660,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/morphTargets:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "morphTargets",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 673,
            "description": "The {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/reflect:property\"}}reflect{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/reflect:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflect",
            "type": "Reflect",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 689,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/reflect:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflect",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 703,
            "description": "The {{#crossLink \"Shader\"}}Shader{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/shader:property\"}}shader{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/shader:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shader",
            "type": "Shader",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 719,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/shader:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shader",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 732,
            "description": "The {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/shaderParams:property\"}}shaderParams{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/shaderParams:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shaderParams",
            "type": "ShaderParams",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 748,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/shaderParams:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shaderParams",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 762,
            "description": "The {{#crossLink \"Stage\"}}Stage{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/stage:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stage",
            "type": "Stage",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 778,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/stage:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "stage",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 792,
            "description": "The Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/transform:property\"}}transform{{/crossLink}}\n(an identity matrix) when set to a null or undefined value.\n\nFires a {{#crossLink \"GameObject/transform:event\"}}{{/crossLink}} event on change.\n\nUpdates {{#crossLink \"GameObject/boundary\"}}{{/crossLink}},\n{{#crossLink \"GameObject/worldObb\"}}{{/crossLink}} and\n{{#crossLink \"GameObject/center\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "transform",
            "type": "Transform",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 825,
            "description": "Fired whenever this GameObject's {{#crossLink \"GameObject/transform:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 871,
            "description": "The {{#crossLink \"Billboard\"}}{{/crossLink}} attached to this GameObject.\n\nWhen {{#crossLink \"Billboard/property:active\"}}{{/crossLink}}, the {{#crossLink \"Billboard\"}}{{/crossLink}}\nwill keep this GameObject oriented towards the viewpoint.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/billboard:property\"}}billboard{{/crossLink}}\n(an identity matrix) when set to a null or undefined value.\n\nFires a {{#crossLink \"GameObject/billboard:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "billboard",
            "type": "Billboard",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 890,
            "description": "Fired whenever this GameObject's {{#crossLink \"GameObject/billboard:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "billboard",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 905,
            "description": "The {{#crossLink \"Stationary\"}}{{/crossLink}} attached to this GameObject.\n\nWhen {{#crossLink \"Stationary/property:active\"}}{{/crossLink}}, the {{#crossLink \"Stationary\"}}{{/crossLink}}\nwill prevent the translation component of the viewing transform from being applied to this GameObject, yet\nstill allowing it to rotate.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/stationary:property\"}}stationary{{/crossLink}},\nwhich is disabled by default.\n\nFires a {{#crossLink \"GameObject/stationary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stationary",
            "type": "Stationary",
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 925,
            "description": "Fired whenever this GameObject's {{#crossLink \"GameObject/stationary:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "stationary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 940,
            "description": "Local-space 3D boundary of this GameObject.\n\nThis is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry\"}}{{/crossLink}} that is attached to this GameObject.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever this GameObject's {{#crossLink \"GameObject/geometry:property\"}}{{/crossLink}} is linked to\na new {{#crossLink \"Geometry\"}}{{/crossLink}}, or whenever the {{#crossLink \"Geometry\"}}{{/crossLink}}'s\n{{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} are updated.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.",
            "itemtype": "property",
            "name": "localBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 967,
            "description": "World-space 3D boundary of this GameObject.\n\nThis is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses the {{#crossLink \"Geometry\"}}{{/crossLink}}\nthat is attached to this GameObject after transformation by this GameObject's modelling\n{{#crossLink \"GameObject/transform:property\"}}{{/crossLink}}.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever this GameObject's {{#crossLink \"GameObject/geometry:property\"}}{{/crossLink}} is linked to\na new {{#crossLink \"Geometry\"}}{{/crossLink}}, or whenever the {{#crossLink \"Geometry\"}}{{/crossLink}}'s\n{{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} are updated.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\n<h4>Example</h4>\n\n[here](http://xeoengine.org/examples/#boundaries_GameObject_worldBoundary)\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 1058,
            "description": "View-space 3D boundary of this GameObject.\n\nThis is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses the {{#crossLink \"Geometry\"}}{{/crossLink}}\nthat is attached to this GameObject after transformation by this GameObject's modelling\n{{#crossLink \"GameObject/transform:property\"}}{{/crossLink}} and {{#crossLink \"Camera\"}}{{/crossLink}}\n{{#crossLink \"Camera/view:property\"}}view transform{{/crossLink}}.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever there are any changes to the {{#crossLink \"Geometry\"}}{{/crossLink}},\n{{#crossLink \"GameObject/transform:property\"}}{{/crossLink}} or {{#crossLink \"Camera\"}}{{/crossLink}} that\nwould affect its extents.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "viewBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 1128,
            "description": "Canvas-space 2D boundary.\n\nThis is a {{#crossLink \"Boundary2D\"}}{{/crossLink}} that encloses this GameObject's\n{{#crossLink \"GameObject/geometry:property\"}}{{/crossLink}} after transformation by this GameObject's modelling\n{{#crossLink \"GameObject/transform:property\"}}{{/crossLink}} and {{#crossLink \"Camera\"}}{{/crossLink}}\n{{#crossLink \"Camera/view:property\"}}view{{/crossLink}} and\n{{#crossLink \"Camera/project:property\"}}projection{{/crossLink}} transforms.\n\nThe {{#crossLink \"Boundary2D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever there are any changes to the {{#crossLink \"Geometry\"}}{{/crossLink}},\n{{#crossLink \"GameObject/transform:property\"}}{{/crossLink}} or {{#crossLink \"Camera\"}}{{/crossLink}} that\nwould affect its extents.\n\nThe a {{#crossLink \"Boundary2D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary2D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary2D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "canvasBoundary",
            "type": "Boundary2D",
            "final": 1,
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 1199,
            "description": "JSON object containing the (GLSL) source code of the shaders for this GameObject.\n\nThis is sometimes useful to have as a reference\nwhen constructing your own custom {{#crossLink \"Shader\"}}{{/crossLink}} components.\n\nWill return null if xeoEngine has not yet rendered this GameObject.",
            "itemtype": "property",
            "name": "glsl",
            "type": "JSON",
            "final": 1,
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/objects/gameObject.js",
            "line": 1236,
            "description": "The (GLSL) source code of the shaders for this GameObject, as a string.\n\nThis is sometimes useful to have as a reference\nwhen constructing your own custom {{#crossLink \"Shader\"}}{{/crossLink}} components.\n\nWill return null if xeoEngine has not yet rendered this GameObject.",
            "itemtype": "property",
            "name": "glslString",
            "type": "String",
            "final": 1,
            "class": "GameObject",
            "module": "XEO",
            "submodule": "objects"
        },
        {
            "file": "src/rendering/colorBuf.js",
            "line": 78,
            "description": "Indicates if blending is enabled for this ColorBuf.\n\nFires a {{#crossLink \"ColorBuf/blendEnabled:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "blendEnabled",
            "default": "false",
            "type": "Boolean",
            "class": "ColorBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorBuf.js",
            "line": 95,
            "description": "Fired whenever this ColorBuf's {{#crossLink \"ColorBuf/blendEnabled:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "blendEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "ColorBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorBuf.js",
            "line": 109,
            "description": "Specifies whether red, green, blue, and alpha can or cannot be written into the frame buffer.\n\nFires a {{#crossLink \"ColorBuf/colorMask:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorMask",
            "default": "[true, true, true, true]",
            "type": "{Four element array of Boolean}",
            "class": "ColorBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorBuf.js",
            "line": 126,
            "description": "Fired whenever this ColorBuf's {{#crossLink \"ColorBuf/colorMask:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorMask",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Four element array of Boolean"
                }
            ],
            "class": "ColorBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorTarget.js",
            "line": 114,
            "description": "The resolution of this ColorTarget's pixel buffer.\n\nFires an {{#crossLink \"ColorTarget/size:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "size",
            "default": "null",
            "type": "{Array of Number}",
            "class": "ColorTarget",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorTarget.js",
            "line": 135,
            "description": "Fired whenever this ColorTarget's {{#crossLink \"ColorTarget/size:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "size",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "ColorTarget",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorTarget.js",
            "line": 148,
            "description": "Determines whether this ColorTarget is active or not.\n\nWhen active, the pixel colors of associated {{#crossLink \"GameObjects\"}}{{/crossLink}} will be rendered\nto this ColorTarget. When inactive, the colors will be written to the default WebGL color buffer instead.\n\nFires a {{#crossLink \"ColorTarget/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "default": "true",
            "type": "Number",
            "class": "ColorTarget",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/colorTarget.js",
            "line": 193,
            "description": "Fired whenever this ColorTarget's {{#crossLink \"ColorTarget/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "ColorTarget",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 83,
            "description": "The clear depth for this DepthBuf.\n\nFires a {{#crossLink \"DepthBuf/clearDepth:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clearDepth",
            "default": "1.0",
            "type": "Number",
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 100,
            "description": "Fired whenever this DepthBuf's {{#crossLink \"DepthBuf/clearDepth:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clearDepth",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 114,
            "description": "The depth function for this DepthBuf.\n\nAccepted values are:\n\n<ul>\n    <li>\"less\"</li>\n    <li>\"equal\"</li>\n    <li>\"lequal\"</li>\n    <li>\"greater\"</li>\n    <li>\"notequal\"</li>\n    <li>\"gequal\"</li>\n</ul>\n\nFires a {{#crossLink \"DepthBuf/depthFunc:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthFunc",
            "default": "\"less\"",
            "type": "Number",
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 155,
            "description": "Fired whenever this DepthBuf's {{#crossLink \"DepthBuf/depthFunc:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthFunc",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 168,
            "description": "Flag which indicates whether this DepthBuf is active or not.\n\nFires an {{#crossLink \"DepthBuf/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 186,
            "description": "Fired whenever this DepthBuf's {{#crossLink \"DepthBuf/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthBuf.js",
            "line": 200,
            "description": "Lookup GL depth function enums",
            "access": "private",
            "tagname": "",
            "class": "DepthBuf",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthTarget.js",
            "line": 114,
            "description": "Indicates whether this DepthTarget is active or not.\n\nWhen active, the pixel depths of associated {{#crossLink \"GameObjects\"}}{{/crossLink}} will be rendered\nto this DepthTarget. When inactive, the colors will be written to the default WebGL depth buffer instead.\n\nFires a {{#crossLink \"DepthTarget/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "default": "true",
            "type": "Number",
            "class": "DepthTarget",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/depthTarget.js",
            "line": 158,
            "description": "Fired whenever this DepthTarget's {{#crossLink \"DepthTarget/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "DepthTarget",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/layer.js",
            "line": 178,
            "description": "Indicates this Layer's rendering priority for the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nEach {{#crossLink \"GameObject\"}}{{/crossLink}} is also attached to a {{#crossLink \"Stage\"}}Stage{{/crossLink}}, which sets a *stage* rendering\npriority via its {{#crossLink \"Stage/priority:property\"}}priority{{/crossLink}} property.\n\nFires a {{#crossLink \"Layer/priority:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "priority",
            "default": "0",
            "type": "Number",
            "class": "Layer",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/layer.js",
            "line": 209,
            "description": "Fired whenever this Layer's  {{#crossLink \"Layer/priority:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "priority",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Layer",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 112,
            "description": "Whether this Modes enables picking of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nPicking is performed via calls to {{#crossLink \"Canvas/pick:method\"}}Canvas#pick{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/pickable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pickable",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 131,
            "description": "Fired whenever this Modes' {{#crossLink \"Modes/pickable:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pickable",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 145,
            "description": "Whether this Modes enables clipping of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nClipping is done by {{#crossLink \"Clips\"}}{{/crossLink}} that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/clipping:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clipping",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 165,
            "description": "Fired whenever this Modes' {{#crossLink \"Modes/clipping:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clipping",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 179,
            "description": "Whether this Modes sets attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} transparent.\n\nWhen true. this property will set attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} transparent (ie. to be rendered in a\ntransparency pass with blending enabled etc), while\nthe {{#crossLink \"PhongMaterial/opacity:property\"}}{{/crossLink}} will be used to indicate the **degree** of their transparency\n(ie. where opacity of 0.0 indicates maximum translucency and opacity of 1.0 indicates minimum translucency).\n\nFires a {{#crossLink \"Modes/transparent:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "transparent",
            "default": "false",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 201,
            "description": "Fired whenever this Modes' {{#crossLink \"Modes/transparent:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "transparent",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 215,
            "description": "Whether this Modes enables backfaces to be visible on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe backfaces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} compoents that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/backfaces:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaces",
            "default": "false",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 237,
            "description": "Fired whenever this Modes' {{#crossLink \"Modes/backfaces:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaces",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 251,
            "description": "Indicates the winding direction of front faces on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe faces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} components that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/frontface:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "frontface",
            "default": "\"ccw\"",
            "type": "String",
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/modes.js",
            "line": 271,
            "description": "Fired whenever this Modes' {{#crossLink \"Modes/frontface:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "frontface",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/stage.js",
            "line": 117,
            "description": "Indicates the rendering priority for the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in\nthis Stage.\n\nFires a {{#crossLink \"Stage/priority:event\"}}{{/crossLink}}\nevent on change.",
            "itemtype": "property",
            "name": "priority",
            "default": "0",
            "type": "Number",
            "class": "Stage",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/stage.js",
            "line": 143,
            "description": "Fired whenever this Stage's\n{{#crossLink \"Stage/priority:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "priority",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Stage",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/stage.js",
            "line": 159,
            "description": "Indicates whether the attached\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are\npickable (see {{#crossLink \"Canvas/pick:method\"}}Canvas#pick{{/crossLink}}).\n\nFires a {{#crossLink \"Stage/pickable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pickable",
            "default": "true",
            "type": "Boolean",
            "class": "Stage",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/stage.js",
            "line": 178,
            "description": "Fired whenever this Stage's\n{{#crossLink \"Stage/pickable:pickable\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "pickable",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Stage",
            "module": "XEO",
            "submodule": "rendering"
        },
        {
            "file": "src/reporting/task.js",
            "line": 34,
            "description": "Sets this Task as successfully completed.\n\nFires a  {{#crossLink \"Task/completed:event\"}}{{/crossLink}} event on this task, as well as\na {{#crossLink \"Tasks/completed:event\"}}{{/crossLink}} event on the parent  {{#crossLink \"Tasks\"}}Task{{/crossLink}}.",
            "itemtype": "method",
            "name": "setCompleted",
            "class": "Task",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/task.js",
            "line": 44,
            "description": "Fired when this Task has successfully completed.",
            "itemtype": "event",
            "name": "completed",
            "class": "Task",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/task.js",
            "line": 52,
            "description": "Sets this Task as having failed.\n\nFires a  {{#crossLink \"Task/failed:event\"}}{{/crossLink}} event on this task, as well as\na {{#crossLink \"Tasks/failed:event\"}}{{/crossLink}} event on the parent  {{#crossLink \"Tasks\"}}Tasks{{/crossLink}}.",
            "itemtype": "method",
            "name": "setFailed",
            "class": "Task",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/task.js",
            "line": 62,
            "description": "Fired when this Task has failed to complete successfully.",
            "itemtype": "event",
            "name": "failed",
            "class": "Task",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/tasks.js",
            "line": 97,
            "description": "Creates and starts a new {{#crossLink \"Task\"}}Task{{/crossLink}} instance with this Tasks.\n\nIf an ID is given for the new {{#crossLink \"Task\"}}Task{{/crossLink}} that is already in use for\nanother, will log an error message and return null.\n\nOn success, fires a {{#crossLink \"Tasks/started:event\"}}{{/crossLink}} event and returns the new {{#crossLink \"Task\"}}Task{{/crossLink}}\n instance.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "params",
                    "description": "Task params.",
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional unique ID,\ninternally generated if not supplied.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "description",
                            "description": "Optional description.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The new new {{#crossLink \"Task\"}}Task{{/crossLink}} instance, or null if there was an ID\nclash with an existing {{#crossLink \"Task\"}}Task{{/crossLink}}.",
                "type": "Task|null"
            },
            "class": "Tasks",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/tasks.js",
            "line": 133,
            "description": "Fired whenever a Task within this Tasks has successfully completed.",
            "itemtype": "event",
            "name": "completed",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has completed",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/tasks.js",
            "line": 146,
            "description": "Fired whenever a Task within this Tasks has failed.",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has failed",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/tasks.js",
            "line": 164,
            "description": "Completes the {{#crossLink \"Task\"}}Task{{/crossLink}} with the given ID.\n\nFires a {{#crossLink \"Tasks/completed:event\"}}{{/crossLink}} event, as well as separate\n{{#crossLink \"Task/completed:event\"}}{{/crossLink}} event on the {{#crossLink \"Task\"}}Task{{/crossLink}} itself.\n\nLogs an error message if no task can be found for the given ID.",
            "itemtype": "method",
            "name": "setCompleted",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the {{#crossLink \"Task\"}}Task{{/crossLink}} to complete.",
                    "type": "String"
                }
            ],
            "class": "Tasks",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/reporting/tasks.js",
            "line": 187,
            "description": "Fails the {{#crossLink \"Task\"}}Task{{/crossLink}} with the given ID.\n\nFires a {{#crossLink \"Tasks/failed:event\"}}{{/crossLink}} event, as well as separate\n{{#crossLink \"Task/failed:event\"}}{{/crossLink}} event on the {{#crossLink \"Task\"}}Task{{/crossLink}} itself.\n\nLogs an error message if no task can be found for the given ID.",
            "itemtype": "method",
            "name": "setFailed",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the {{#crossLink \"Task\"}}Task{{/crossLink}} to fail.",
                    "type": "String"
                }
            ],
            "class": "Tasks",
            "module": "XEO",
            "submodule": "reporting"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 210,
            "description": "GLSL source code for this Shader's vertex stage.\n\nFires a {{#crossLink \"Shader/vertex:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "vertex",
            "default": "null",
            "type": "String",
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 228,
            "description": "Fired whenever this Shader's {{#crossLink \"Shader/vertex:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "vertex",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 242,
            "description": "GLSL source code for this Shader's fragment stage.\n\nFires a {{#crossLink \"Shader/fragment:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fragment",
            "default": "null",
            "type": "String",
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 260,
            "description": "Fired whenever this Shader's {{#crossLink \"Shader/fragment:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fragment",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 274,
            "description": "Params for this Shader.\n\nFires a {{#crossLink \"Shader/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "params",
            "default": "{}",
            "type": "{}",
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 291,
            "description": "Sets one or more params for this Shader.\n\nThese will be individually overridden by any {{#crossLink \"ShaderParams/setParams:method\"}}params subsequently specified{{/crossLink}} on\n{{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Shader/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "method",
            "name": "setParams",
            "params": [
                {
                    "name": "params",
                    "description": "Values for params to set on this Shader, keyed to their names.",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shader.js",
            "line": 312,
            "description": "Fired whenever this Shader's  {{#crossLink \"Shader/params:property\"}}{{/crossLink}}\nproperty has been updated.",
            "itemtype": "event",
            "name": "params",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shader",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shaderParams.js",
            "line": 168,
            "description": "Params for {{#crossLink \"Shader\"}}Shaders{{/crossLink}} on attached\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Shader/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "params",
            "default": "{}",
            "type": "{}",
            "class": "ShaderParams",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shaderParams.js",
            "line": 186,
            "description": "Sets one or more params for {{#crossLink \"Shader\"}}Shaders{{/crossLink}} on attached\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThese will individually override any params of the same names that are {{#crossLink \"Shader/setParams:method\"}}already specified{{/crossLink}} on\nthose {{#crossLink \"Shader\"}}Shaders{{/crossLink}}.\n\nFires a {{#crossLink \"ShaderParams/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "method",
            "name": "setParams",
            "params": [
                {
                    "name": "params",
                    "description": "Values for params to set on the {{#crossLink \"Shader\"}}Shaders{{/crossLink}}, keyed to their names.",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "class": "ShaderParams",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/shaders/shaderParams.js",
            "line": 208,
            "description": "Fired whenever this ShaderParams' {{#crossLink \"ShaderParams/params:property\"}}{{/crossLink}} property has been updated.",
            "itemtype": "event",
            "name": "params",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ShaderParams",
            "module": "XEO",
            "submodule": "shaders"
        },
        {
            "file": "src/transforms/billboard.js",
            "line": 52,
            "description": "Flag which indicates whether this Billboard is active or not.\n\nFires an {{#crossLink \"Billboard/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Billboard",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/billboard.js",
            "line": 76,
            "description": "Fired whenever this Billboard's {{#crossLink \"Billboard/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Billboard",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/billboard.js",
            "line": 89,
            "description": "Flag which indicates whether this Billboard is spherical (true) or cylindrical (false).\n\nFires an {{#crossLink \"Billboard/spherical:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "spherical",
            "type": "Boolean",
            "class": "Billboard",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/billboard.js",
            "line": 113,
            "description": "Fired whenever this Billboard's {{#crossLink \"Billboard/spherical:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "spherical",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Billboard",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/quaternion.js",
            "line": 105,
            "description": "The quaternion elements\nFires an {{#crossLink \"Quaternion/xyzw:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyzw",
            "default": "[0,0,0,1]",
            "type": "{Array of Number}",
            "class": "Quaternion",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/quaternion.js",
            "line": 118,
            "description": "Fired whenever this Quaternion's {{#crossLink \"Quaternion/xyzw:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyzw",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Quaternion",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/quaternion.js",
            "line": 133,
            "description": "Rotates this Quaternion.\nFires an {{#crossLink \"Quaternion/xyzw:event\"}}{{/crossLink}} event to notify of update to the Quaternion elements.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angleAxis",
                    "description": "Rotation in angle-axis form.",
                    "type": "Array of Number"
                }
            ],
            "class": "Quaternion",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 104,
            "description": "Vector indicating the axis of rotation.\n\nFires an {{#crossLink \"Rotate/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[0,1,0]",
            "type": "{Array of Number}",
            "class": "Rotate",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 133,
            "description": "Fired whenever this Rotate's {{#crossLink \"Rotate/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Rotate",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 147,
            "description": "Angle of rotation in degrees.\n\nFires an {{#crossLink \"Rotate/angle:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "angle",
            "default": "0",
            "type": "{Number}",
            "class": "Rotate",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 164,
            "description": "Fired whenever this Rotate's {{#crossLink \"Rotate/angle:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "angle",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Rotate",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/scale.js",
            "line": 103,
            "description": "Vector indicating a scale factor for each axis.\nFires an {{#crossLink \"Scale/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[1,1,1]",
            "type": "{Array of Number}",
            "class": "Scale",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/scale.js",
            "line": 130,
            "description": "Fired whenever this Scale's {{#crossLink \"Scale/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Scale",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/stationary.js",
            "line": 48,
            "description": "Flag which indicates whether this Stationary is active or not.\n\nFires an {{#crossLink \"Stationary/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Stationary",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/stationary.js",
            "line": 72,
            "description": "Fired whenever this Stationary's {{#crossLink \"Stationary/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Stationary",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 174,
            "description": "The parent Transform.\n\nFires a {{#crossLink \"Transform/parent:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "parent",
            "type": "Transform",
            "class": "Transform",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 195,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "parent",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 215,
            "description": "The Transform's local matrix.\n\nFires a {{#crossLink \"Transform/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Transform",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 238,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 254,
            "description": "Returns the product of all {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}}'s on Transforms\non the path via {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} up to the root.\n\nThe value of this property will have a fresh value after each\n{{#crossLink \"Transform/updated:property\"}}{{/crossLink}} event, which is fired whenever any Transform\non the path receives an update for its {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} or\n{{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} property.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Transform",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 284,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/leafMatrix:property\"}}{{/crossLink}} property changes.\n\nThis event does not carry the updated property value. Instead, subscribers will need to read\nthat property again to get its updated value (which may be lazy-computed then).",
            "itemtype": "event",
            "name": "updated",
            "class": "Transform",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/translate.js",
            "line": 115,
            "description": "Vector indicating a translation amount for each axis.\nFires an {{#crossLink \"Translate/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[0,0,0]",
            "type": "{Array of Number}",
            "class": "Translate",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/translate.js",
            "line": 142,
            "description": "Fired whenever this Translate's {{#crossLink \"Translate/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Translate",
            "module": "XEO",
            "submodule": "transforms"
        },
        {
            "file": "src/component.js",
            "line": 209,
            "description": "The parent {{#crossLink \"Scene\"}}{{/crossLink}} that contains this Component.",
            "itemtype": "property",
            "name": "scene",
            "type": "{Scene}",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 256,
            "description": "Arbitrary, user-defined metadata on this component.",
            "itemtype": "property",
            "name": "metadata",
            "type": "Object",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 264,
            "description": "Indicates whether this is one of the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s built-in Components.",
            "itemtype": "property",
            "name": "isDefault",
            "type": "Boolean",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 272,
            "description": "Unique ID for this Component within its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 281,
            "description": "True as soon as this Component has been destroyed",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 324,
            "description": "JavaScript class name for this Component.\n\nThis is used when <a href=\"Scene.html#savingAndLoading\">loading Scenes from JSON</a>, and is included in the JSON\nrepresentation of this Component, so that this class may be instantiated when loading it from the JSON representation.\n\nFor example: \"XEO.AmbientLight\", \"XEO.ColorTarget\", \"XEO.Lights\" etc.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 338,
            "description": "Initializes this component",
            "params": [
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 346,
            "description": "Fires an event on this component.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event parameters",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 387,
            "description": "Subscribes to an event on this component.\n\nThe callback is be called with this component as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "The event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called fired on the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 417,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Component/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Component/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 439,
            "description": "Subscribes to the next occurrence of the given event, then un-subscribes as soon as the event is handled.\n\nThis is equivalent to calling {{#crossLink \"Component/on:method\"}}{{/crossLink}}, and then calling\n{{#crossLink \"Component/off:method\"}}{{/crossLink}} inside the callback function.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 460,
            "description": "Logs a console debugging message for this component.\n\nThe console message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n\nAlso fires the message as a {{#crossLink \"Scene/log:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 485,
            "description": "Logs a warning for this component to the JavaScript console.\n\nThe console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n\nAlso fires the message as a {{#crossLink \"Scene/warn:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 505,
            "description": "Logs an error for this component to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n\nAlso fires the message as an {{#crossLink \"Scene/error:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 525,
            "description": "Creates a clone of this component.\n\nThe clone will have the same properties as the original, except where\noverridden in the given optional configs.\n\nThe clone will share (by reference) the components of the original, unless overridden.\n\nFor example, if this component is a {{#crossLink \"GameObject\"}}{{/crossLink}}, then the clone\nwill be attached to the **same** instances of {{#crossLink \"PhoneMaterial\"}}{{/crossLink}},\n{{#crossLink \"Camera\"}}{{/crossLink}} etc as this component, unless it supplies its own\ninstances for those via the configs.",
            "params": [
                {
                    "name": "cfg",
                    "description": "Configurations to override.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "The shallow clone",
                "type": "Component"
            },
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 557,
            "description": "Adds a child component to this.\nWhen component not given, attaches the scene's default instance for the given name (if any).\nPublishes the new child component on this component, keyed to the given name.",
            "params": [
                {
                    "name": "name",
                    "description": "component name",
                    "type": "String"
                },
                {
                    "name": "child",
                    "description": "The component",
                    "type": "Component"
                },
                {
                    "name": "useDefault",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 656,
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 681,
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 688,
            "description": "Protected method, called by sub-classes to queue a call to _update().",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 703,
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 727,
            "description": "Optional virtual template method, normally implemented\nby sub-classes to generate some data before _update gets\ncallled",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 736,
            "description": "Protected virtual template method, optionally implemented\nby sub-classes to perform a scheduled task.",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 744,
            "description": "Protected template method, implemented by sub-classes to compile\ntheir state into their Scene's XEO.renderer.Renderer.",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 755,
            "description": "JSON object containing the state of this Component.",
            "itemtype": "property",
            "name": "json",
            "type": "JSON",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 782,
            "description": "String containing the serialized JSON state of this Component.",
            "itemtype": "property",
            "name": "string",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 796,
            "description": "Experimental: string containing a JavaScript expression that would instantiate this Component.",
            "itemtype": "property",
            "name": "string",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 814,
            "description": "Destroys this component.\n\nFires a {{#crossLink \"Component/destroyed:event\"}}{{/crossLink}} event on this Component.\n\nAutomatically disassociates this component from other components, causing them to fall back on any\ndefaults that this component overrode on them.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 846,
            "description": "Fired when this Component is destroyed.",
            "itemtype": "event",
            "name": "destroyed",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/component.js",
            "line": 854,
            "description": "Protected template method, implemented by sub-classes\nto clean up just before the component is destroyed.",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 196,
            "description": "Fired whenever a debug message logged on a component within this Scene.",
            "itemtype": "event",
            "name": "log",
            "params": [
                {
                    "name": "value",
                    "description": "The debug message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 202,
            "description": "Fired whenever an error is logged on a component within this Scene.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "value",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 208,
            "description": "Fired whenever a warning is logged on a component within this Scene.",
            "itemtype": "event",
            "name": "warn",
            "params": [
                {
                    "name": "value",
                    "description": "The warning message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 214,
            "description": "Fired on each game loop iteration.",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "sceneID",
                    "description": "The ID of this Scene.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "The time in seconds since 1970 that this Scene was instantiated.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The time in seconds since 1970 of this \"tick\" event.",
                    "type": "Number"
                },
                {
                    "name": "prevTime",
                    "description": "The time of the previous \"tick\" event from this Scene.",
                    "type": "Number"
                },
                {
                    "name": "deltaTime",
                    "description": "The time in seconds since the previous \"tick\" event from this Scene.",
                    "type": "Number"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 234,
            "description": "The epoch time (in milliseconds since 1970) when this Scene was instantiated.",
            "itemtype": "property",
            "name": "timeCreated",
            "type": "{Number}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 242,
            "description": "The {{#crossLink \"Component\"}}Component{{/crossLink}}s within\nthis Scene, mapped to their IDs.\n\nWill also contain the {{#crossLink \"GameObject\"}}{{/crossLink}}s\ncontained in {{#crossLink \"GameObject/components:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "components",
            "type": "{String:XEO.Component}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 254,
            "description": "For each {{#crossLink \"Component\"}}Component{{/crossLink}} type, a map of\nIDs to instances.",
            "itemtype": "property",
            "name": "types",
            "type": "{String:{String:XEO.Component}}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 263,
            "description": "The {{#crossLink \"GameObject\"}}{{/crossLink}}s within\nthis Scene, mapped to their IDs.\n\nThe {{#crossLink \"GameObject\"}}{{/crossLink}}s in this map\nwill also be contained in {{#crossLink \"GameObject/components:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "objects",
            "type": "{String:XEO.GameObject}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 278,
            "description": "Configurations for this Scene. Set whatever properties on here\nthat will be useful to the components within the Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "configs",
            "type": "{Configs}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 287,
            "description": "Manages the HTML5 canvas for this Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "canvas",
            "type": "{Canvas}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 318,
            "description": "Publishes input events that occur on this Scene's canvas.",
            "final": 1,
            "itemtype": "property",
            "name": "input",
            "type": "{Input}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 329,
            "description": "Tracks any asynchronous tasks that occur within this Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "tasks",
            "type": "{Tasks}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 461,
            "description": "Fired whenever a component has been created within this Scene.",
            "itemtype": "event",
            "name": "componentCreated",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was created",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 505,
            "description": "Fired whenever a component within this Scene has been destroyed.",
            "itemtype": "event",
            "name": "componentDestroyed",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was destroyed",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 527,
            "description": "The default projection transform provided by this Scene, which is\na {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\n\nThis {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} has an\n{{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to\n\"default.project\", with all other properties set to their default\nvalues.\n\n{{#crossLink \"Camera\"}}Cameras{{/crossLink}} within this Scene\nare attached to this {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}\nby default.",
            "itemtype": "property",
            "name": "project",
            "final": 1,
            "type": "Perspective",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 555,
            "description": "The default viewing transform provided by this Scene, which is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.\n\nThis {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.view\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"Camera\"}}Cameras{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "view",
            "final": 1,
            "type": "Lookat",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 578,
            "description": "The default {{#crossLink \"Camera\"}}Camera{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Camera\"}}Camera{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.camera\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Camera\"}}Camera{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "camera",
            "final": 1,
            "type": "Camera",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 603,
            "description": "The default modelling {{#crossLink \"Transform\"}}{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Transform\"}}{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.transform\",\nwith all other properties initialised to their default values (ie. an identity matrix).\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Transform\"}}{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "transform",
            "final": 1,
            "type": "Transform",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 627,
            "description": "The default {{#crossLink \"Billboard\"}}Billboard{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Billboard\"}}Billboard{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.billboard\"\nand an {{#crossLink \"Billboard/active:property\"}}{{/crossLink}} property set to false, to disable it.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Billboard\"}}Billboard{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "billboard",
            "final": 1,
            "type": "Billboard",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 651,
            "description": "The default {{#crossLink \"Stationary\"}}Stationary{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Stationary\"}}Stationary{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.stationary\"\nand an {{#crossLink \"Stationary/active:property\"}}{{/crossLink}} property set to false, to disable it.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Stationary\"}}Stationary{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "stationary",
            "final": 1,
            "type": "Stationary",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 675,
            "description": "The default {{#crossLink \"Clips\"}}Clips{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Clips\"}}Clips{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.clips\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Clips\"}}Clips{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "clips",
            "final": 1,
            "type": "Clips",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 698,
            "description": "The default {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.colorBuf\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "colorBuf",
            "final": 1,
            "type": "ColorBuf",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 721,
            "description": "The default {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} provided by this Scene.\n\nThe {{#crossLink \"ColorTarget\"}}DepthTarget{{/crossLink}} is\n{{#crossLink \"ColorTarget/active:property\"}}inactive{{/crossLink}} by default and will have an\n{{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.depthTarget\".\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "colorTarget",
            "final": 1,
            "type": "ColorTarget",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 745,
            "description": "The default {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.depthBuf\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "depthBuf",
            "final": 1,
            "type": "DepthBuf",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 769,
            "description": "The default {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} provided by this Scene.\n\nThe {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} is\n{{#crossLink \"DepthTarget/active:property\"}}inactive{{/crossLink}} by default and has an\n{{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.depthTarget\".\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "depthTarget",
            "final": 1,
            "type": "DepthTarget",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 793,
            "description": "The default {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.visibility\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Visibility\"}}Visibility{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "visibility",
            "final": 1,
            "type": "Visibility",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 816,
            "description": "The default {{#crossLink \"Modes\"}}Modes{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Modes\"}}Modes{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.modes\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Modes\"}}Modes{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "modes",
            "final": 1,
            "type": "Modes",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 838,
            "description": "The default geometry provided by this Scene, which is a {{#crossLink \"BoxGeometry\"}}BoxGeometry{{/crossLink}}.\n\nThis {{#crossLink \"BoxGeometry\"}}BoxGeometry{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.geometry\".\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Geometry\"}}Geometry{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "geometry",
            "final": 1,
            "type": "BoxGeometry",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 859,
            "description": "The default {{#crossLink \"Layer\"}}Layer{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Layer\"}}Layer{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.layer\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Layer\"}}Layer{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "layer",
            "final": 1,
            "type": "Layer",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 882,
            "description": "The default {{#crossLink \"Lights\"}}Lights{{/crossLink}} provided\nby this Scene.\n\nThis {{#crossLink \"Lights\"}}Lights{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to *````\"default.lights\"````*,\nwith all other properties initialised to their default values (ie. the default set of light sources for a {{#crossLink \"Lights\"}}Lights{{/crossLink}}).\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "lights",
            "final": 1,
            "type": "Lights",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 937,
            "description": "The {{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} provided as the default material by this Scene.\n\nThis {{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.material\", with all\nother properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "material",
            "final": 1,
            "type": "PhongMaterial",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 960,
            "description": "The default {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.morphTargets\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "morphTargets",
            "final": 1,
            "type": "MorphTargets",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 982,
            "description": "The default {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} provided by this Scene,\n(which is initially an empty {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} that has no effect).\n\nThis {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.reflect\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Reflect\"}}Reflect{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "reflect",
            "final": 1,
            "type": "Reflect",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1005,
            "description": "The default {{#crossLink \"Shader\"}}Shader{{/crossLink}} provided by this Scene\n(which is initially an empty {{#crossLink \"Shader\"}}Shader{{/crossLink}} that has no effect).\n\nThis {{#crossLink \"Shader\"}}Shader{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.shader\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Shader\"}}Shader{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "shader",
            "final": 1,
            "type": "Shader",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1028,
            "description": "The default {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.shaderParams\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"ShaderParams\"}}{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "shaderParams",
            "final": 1,
            "type": "ShaderParams",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1051,
            "description": "The default {{#crossLink \"Stage\"}}Stage{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Stage\"}}Stage{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.stage\" and\na {{#crossLink \"Stage/priority:property\"}}priority{{/crossLink}} equal to ````0````.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Stage\"}}Stage{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "stage",
            "final": 1,
            "type": "Stage",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1075,
            "description": "The World-space 3D boundary of this Scene.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will be lazy-initialized the first time\nyou reference this property, and will persist on this Scene until you\ncall {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} on the {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nagain. The property will then be set to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance\nnext time you reference it.\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1152,
            "description": "Attempts to pick a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} at the given Canvas-space coordinates.\n\nIgnores {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are attached\nto either a {{#crossLink \"Stage\"}}Stage{{/crossLink}} with {{#crossLink \"Stage/pickable:property\"}}pickable{{/crossLink}}\nset *false* or a {{#crossLink \"Modes\"}}Modes{{/crossLink}} with {{#crossLink \"Modes/pickable:property\"}}pickable{{/crossLink}} set *false*.\n\nOn success, will fire a {{#crossLink \"Scene/picked:event\"}}{{/crossLink}} event on this Scene, along with\na separate {{#crossLink \"Object/picked:event\"}}{{/crossLink}} event on the target {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.\n\n````javascript\n\npick({\n     canvasPos: [23, 131],\n     rayPick: true\n     });\n\n````",
            "itemtype": "method",
            "name": "pick",
            "params": [
                {
                    "name": "params",
                    "description": "Picking parameters.",
                    "type": "*",
                    "props": [
                        {
                            "name": "canvasPos",
                            "description": "Canvas-space coordinates.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "rayPick",
                            "description": "Whether to ray-pick.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Hit record, returned when a {{#crossLink \"GameObject\"}}{{/crossLink}} is picked, else null.",
                "type": "*"
            },
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1413,
            "description": "Resets this Scene to its default state.\n\nReferences to any components in this Scene will become invalid.",
            "itemtype": "method",
            "name": "clear",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1441,
            "description": "Displays a simple test object.\n\nClears the Scene first.\n\nThe test object is destroyed as soon as anything else is created in this Scene.",
            "itemtype": "method",
            "name": "testPattern",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/scene.js",
            "line": 1493,
            "description": "Compiles and renders this Scene",
            "access": "private",
            "tagname": "",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 15,
            "description": "Semantic version number. The value for this is set by an expression that's concatenated to\nthe end of the built binary by the xeoEngine build script.",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 24,
            "description": "Tracks statistics within xeoEngine, such as numbers of\nscenes, textures, geometries etc.",
            "final": 1,
            "itemtype": "property",
            "name": "stats",
            "type": "{*}",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 86,
            "description": "Existing  {{#crossLink \"Scene\"}}Scene{{/crossLink}}s , mapped to their IDs",
            "itemtype": "property",
            "name": "scenes",
            "type": "{{String:XEO.Scene}}",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 213,
            "description": "The default {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\nComponents created without an explicit parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will be created within this\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} by default.\n\nxeoEngine creates the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} as soon as you either\nreference this property for the first time, or create your first {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} without\na specified {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "property",
            "name": "scene",
            "final": 1,
            "type": "Scene",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 238,
            "description": "Registers a scene on xeoEngine.\nThis is called within the XEO.Scene constructor.",
            "itemtype": "method",
            "name": "_addScene",
            "params": [
                {
                    "name": "scene",
                    "description": "The scene",
                    "type": "Scene"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 281,
            "description": "Schedule a task for xeoEngine to run at the next frame.\n\nInternally, this pushes the task to a FIFO queue. Within each frame interval, xeoEngine processes the queue\nfor a certain period of time, popping tasks and running them. After each frame interval, tasks that did not\nget a chance to run during the task are left in the queue to be run next time.",
            "itemtype": "method",
            "name": "schedule",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback that runs the task.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 318,
            "description": "Destroys all user-created {{#crossLink \"Scene\"}}Scenes{{/crossLink}} and\nclears the default {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "clear",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 346,
            "description": "Tests if the given object is an array",
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 354,
            "description": "Tests if the given value is a string",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 365,
            "description": "Tests if the given value is a number",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 375,
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 381,
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 392,
            "description": "Add non-null/defined properties of o to o2",
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 407,
            "description": "Add properties of o to o2 where undefined or null on o2",
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 422,
            "description": "Returns true if the given map is empty.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/xeo.js",
            "line": 437,
            "description": "Returns the given ID as a string, in quotes if the ID was a string to begin with.\n\nThis is useful for logging IDs.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID",
                    "type": "Number| String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/_renderer/renderer.js:969"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/curves/cubicBezierCurve.js:238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/curves/curve.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/curves/curve.js:148"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/curves/path.js:302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/curves/quadraticBezierCurve.js:300"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/curves/splineCurve.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:86"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:116"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:126"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:139"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:180"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:1805"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:1828"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:1917"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:1980"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2043"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2081"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2140"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2197"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2227"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2277"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2341"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2417"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2445"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2548"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2596"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2634"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2634"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2701"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2701"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2718"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2718"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/reporting/tasks.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/component.js:525"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/scene.js:1152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeo.js:354"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeo.js:365"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeo.js:422"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeo.js:437"
        },
        {
            "message": "Missing item type\nA chunk of WebGL state changes to render a XEO.renderer.State.",
            "line": " src/_renderer/chunks/chunk.js:5"
        },
        {
            "message": "Missing item type\nInitialises the chunk.",
            "line": " src/_renderer/chunks/chunk.js:13"
        },
        {
            "message": "Missing item type\nManages creation, reuse and destruction of {@link XEO.renderer.Chunk}s.",
            "line": " src/_renderer/chunks/chunkFactory.js:5"
        },
        {
            "message": "Missing item type\nSub-classes of {@link XEO.renderer.Chunk} provided by this factory",
            "line": " src/_renderer/chunks/chunkFactory.js:12"
        },
        {
            "message": "Missing item type\nCreates a chunk type.",
            "line": " src/_renderer/chunks/chunkFactory.js:17"
        },
        {
            "message": "Missing item type\nGets a chunk from this factory.",
            "line": " src/_renderer/chunks/chunkFactory.js:54"
        },
        {
            "message": "Missing item type\nReleases a chunk back to this factory.",
            "line": " src/_renderer/chunks/chunkFactory.js:98"
        },
        {
            "message": "Missing item type\nRestores the chunks in this factory after a WebGL context recovery.",
            "line": " src/_renderer/chunks/chunkFactory.js:121"
        },
        {
            "message": "Missing item type\nCreate display state chunk type for draw and pick render of user clipping planes",
            "line": " src/_renderer/chunks/clipsChunk.js:5"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/chunks/colorBufferChunk.js:5"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/chunks/depthBufferChunk.js:5"
        },
        {
            "message": "Missing item type\nCreate display state chunk type for draw and pick render of geometry",
            "line": " src/_renderer/chunks/geometryChunk.js:5"
        },
        {
            "message": "Missing item type\nCreate display state chunk type for draw and pick render of renderTarget",
            "line": " src/_renderer/chunks/renderTargetChunk.js:5"
        },
        {
            "message": "Missing item type\nBuffer for vertices and indices",
            "line": " src/_renderer/webgl/arrayBuffer.js:5"
        },
        {
            "message": "Missing item type\nTrue when this buffer is allocated and ready to go",
            "line": " src/_renderer/webgl/arrayBuffer.js:17"
        },
        {
            "message": "Missing item type\nAllocates this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:41"
        },
        {
            "message": "Missing item type\nUpdates data within this buffer, reallocating if needed.",
            "line": " src/_renderer/webgl/arrayBuffer.js:70"
        },
        {
            "message": "Missing item type\nBinds this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:105"
        },
        {
            "message": "Missing item type\nUnbinds this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:117"
        },
        {
            "message": "Missing item type\nDestroys this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:129"
        },
        {
            "message": "Missing item type\nAn attribute within a {@link XEO.renderer.webgl.Shader}",
            "line": " src/_renderer/webgl/attribute.js:5"
        },
        {
            "message": "Missing item type\nWrapper for a WebGL program",
            "line": " src/_renderer/webgl/program.js:22"
        },
        {
            "message": "Missing item type\nTrue when successfully allocated",
            "line": " src/_renderer/webgl/program.js:36"
        },
        {
            "message": "Missing item type\nTrue when successfully compiled",
            "line": " src/_renderer/webgl/program.js:42"
        },
        {
            "message": "Missing item type\nTrue when successfully linked",
            "line": " src/_renderer/webgl/program.js:48"
        },
        {
            "message": "Missing item type\nTrue when successfully validated",
            "line": " src/_renderer/webgl/program.js:54"
        },
        {
            "message": "Missing item type\nContains error log on failure to allocate, compile, validate or link",
            "line": " src/_renderer/webgl/program.js:60"
        },
        {
            "message": "Missing item type\nTrue as soon as this buffer is allocated and ready to go",
            "line": " src/_renderer/webgl/renderBuffer.js:7"
        },
        {
            "message": "Missing item type\nThe HTMLCanvasElement",
            "line": " src/_renderer/webgl/renderBuffer.js:12"
        },
        {
            "message": "Missing item type\nWebGL context",
            "line": " src/_renderer/webgl/renderBuffer.js:17"
        },
        {
            "message": "Missing item type\nBuffer resources, set up in #_touch",
            "line": " src/_renderer/webgl/renderBuffer.js:22"
        },
        {
            "message": "Missing item type\nTrue while this buffer is bound",
            "line": " src/_renderer/webgl/renderBuffer.js:27"
        },
        {
            "message": "Missing item type\nOptional explicit buffer size - when omitted, buffer defaults to canvas size",
            "line": " src/_renderer/webgl/renderBuffer.js:32"
        },
        {
            "message": "Missing item type\nSets custom dimensions for this buffer.\n\nBuffer dynamically re-sizes to canvas when size is null.",
            "line": " src/_renderer/webgl/renderBuffer.js:38"
        },
        {
            "message": "Missing item type\nCalled after WebGL context is restored.",
            "line": " src/_renderer/webgl/renderBuffer.js:49"
        },
        {
            "message": "Missing item type\nBinds this buffer",
            "line": " src/_renderer/webgl/renderBuffer.js:59"
        },
        {
            "message": "Missing item type\nClears this renderbuffer",
            "line": " src/_renderer/webgl/renderBuffer.js:174"
        },
        {
            "message": "Missing item type\nReads buffer pixel at given coordinates",
            "line": " src/_renderer/webgl/renderBuffer.js:185"
        },
        {
            "message": "Missing item type\nUnbinds this renderbuffer",
            "line": " src/_renderer/webgl/renderBuffer.js:196"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/webgl/renderBuffer.js:204"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/webgl/renderBuffer.js:232"
        },
        {
            "message": "Missing item type\nA vertex/fragment shader in a program",
            "line": " src/_renderer/webgl/shader.js:5"
        },
        {
            "message": "Missing item type\nTrue if this shader successfully allocated. When false,\n#error will contain WebGL the error log.",
            "line": " src/_renderer/webgl/shader.js:14"
        },
        {
            "message": "Missing item type\nTrue if this shader successfully compiled. When false,\n#error will contain WebGL the error log.",
            "line": " src/_renderer/webgl/shader.js:21"
        },
        {
            "message": "Missing item type\nSaves the WebGL error log when this shader failed to allocate or compile.",
            "line": " src/_renderer/webgl/shader.js:28"
        },
        {
            "message": "Missing item type\nThe GLSL for this shader.",
            "line": " src/_renderer/webgl/shader.js:34"
        },
        {
            "message": "Missing item type\nWebGL handle to this shader's GPU resource",
            "line": " src/_renderer/webgl/shader.js:40"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/webgl/webgl.js:7"
        },
        {
            "message": "Missing item type\nAn object within a XEO.renderer.Renderer",
            "line": " src/_renderer/object.js:5"
        },
        {
            "message": "Missing item type\nID for this object, unique among all objects in the Renderer",
            "line": " src/_renderer/object.js:10"
        },
        {
            "message": "Missing item type\nHash code for this object, unique among all objects in the Renderer",
            "line": " src/_renderer/object.js:15"
        },
        {
            "message": "Missing item type\nState sort key, computed from #layer, #program and #material",
            "line": " src/_renderer/object.js:20"
        },
        {
            "message": "Missing item type\nSequence of state chunks applied to render this object",
            "line": " src/_renderer/object.js:26"
        },
        {
            "message": "Missing item type\nShader programs that render this object, also used for (re)computing #sortKey",
            "line": " src/_renderer/object.js:31"
        },
        {
            "message": "Missing item type\nState for the XEO.renderer.Stage that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "line": " src/_renderer/object.js:36"
        },
        {
            "message": "Missing item type\nState for the XEO.renderer.Modes that this object was compiled from, used for visibility cull",
            "line": " src/_renderer/object.js:41"
        },
        {
            "message": "Missing item type\nState for the XEO.renderer.Layer that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "line": " src/_renderer/object.js:46"
        },
        {
            "message": "Missing item type\nState for the XEO.renderer.Material that this object was compiled from, used for (re)computing #sortKey",
            "line": " src/_renderer/object.js:51"
        },
        {
            "message": "Missing item type\nVertex and fragment shaders for pick and draw",
            "line": " src/_renderer/program.js:7"
        },
        {
            "message": "Missing item type\nHash code for this program's capabilities, same as the hash on {@link #source}",
            "line": " src/_renderer/program.js:19"
        },
        {
            "message": "Missing item type\nSource code for this program's shaders",
            "line": " src/_renderer/program.js:25"
        },
        {
            "message": "Missing item type\nWebGL context on which this program's shaders are allocated",
            "line": " src/_renderer/program.js:31"
        },
        {
            "message": "Missing item type\nThe drawing program",
            "line": " src/_renderer/program.js:37"
        },
        {
            "message": "Missing item type\nThe object picking program",
            "line": " src/_renderer/program.js:43"
        },
        {
            "message": "Missing item type\nThe primitive picking program",
            "line": " src/_renderer/program.js:49"
        },
        {
            "message": "Missing item type\nThe count of display objects using this program",
            "line": " src/_renderer/program.js:55"
        },
        {
            "message": "Missing item type\nTrue when successfully allocated",
            "line": " src/_renderer/program.js:61"
        },
        {
            "message": "Missing item type\nTrue when successfully compiled",
            "line": " src/_renderer/program.js:67"
        },
        {
            "message": "Missing item type\nTrue when successfully linked",
            "line": " src/_renderer/program.js:73"
        },
        {
            "message": "Missing item type\nTrue when successfully validated",
            "line": " src/_renderer/program.js:79"
        },
        {
            "message": "Missing item type\nContains error log on failure to allocate, compile, validate or link",
            "line": " src/_renderer/program.js:85"
        },
        {
            "message": "Missing item type\nCreates the render and pick programs.\n This is also re-called to re-create them after WebGL context loss.",
            "line": " src/_renderer/program.js:95"
        },
        {
            "message": "Missing item type\nManages {@link XEO.renderer.ProgramState} instances.",
            "line": " src/_renderer/programFactory.js:5"
        },
        {
            "message": "Missing item type\nGet a program that fits the given set of states.\nReuses any free program in the pool that matches the given hash.",
            "line": " src/_renderer/programFactory.js:20"
        },
        {
            "message": "Missing item type\nRelease a program back to the pool.",
            "line": " src/_renderer/programFactory.js:53"
        },
        {
            "message": "Missing item type\nRebuild all programs in the pool after WebGL context was lost and restored.",
            "line": " src/_renderer/programFactory.js:74"
        },
        {
            "message": "Missing item type\nSource code for pick and draw shader programs, to be compiled into one or more {@link XEO.renderer.Program}s",
            "line": " src/_renderer/programSource.js:5"
        },
        {
            "message": "Missing item type\nHash code identifying the capabilities of the {@link XEO.renderer.Program} that is compiled from this source",
            "line": " src/_renderer/programSource.js:21"
        },
        {
            "message": "Missing item type\nVertex shader source for object picking",
            "line": " src/_renderer/programSource.js:27"
        },
        {
            "message": "Missing item type\nFragment shader source for object picking.",
            "line": " src/_renderer/programSource.js:33"
        },
        {
            "message": "Missing item type\nVertex shader source for primitive picking.",
            "line": " src/_renderer/programSource.js:39"
        },
        {
            "message": "Missing item type\nFragment shader source for primitive picking.",
            "line": " src/_renderer/programSource.js:45"
        },
        {
            "message": "Missing item type\nVertex shader source for drawing.",
            "line": " src/_renderer/programSource.js:51"
        },
        {
            "message": "Missing item type\nFragment shader source for drawing.",
            "line": " src/_renderer/programSource.js:57"
        },
        {
            "message": "Missing item type\nCount of {@link XEO.renderer.Program}s compiled from this program source code",
            "line": " src/_renderer/programSource.js:63"
        },
        {
            "message": "Missing item type\nManages creation, sharing and recycle of {@link XEO.renderer.ProgramSource} instances",
            "line": " src/_renderer/programSourceFactory.js:5"
        },
        {
            "message": "Missing item type\nGet source code for a program to render the given states.\nAttempts to reuse cached source code for the given hash.",
            "line": " src/_renderer/programSourceFactory.js:26"
        },
        {
            "message": "Missing item type\nReleases program source code back to this factory.",
            "line": " src/_renderer/programSourceFactory.js:98"
        },
        {
            "message": "Missing item type\nRenderer compiled from a {@link SceneJS.Scene}, providing methods to render and pick.\n\n <p>A Renderer is a container of {@link XEO.renderer.Object}s which are created (or updated) by a depth-first\n <b>compilation traversal</b> of a {@link SceneJS.Scene}.</b>\n\n <h2>Rendering Pipeline</h2>\n\n <p>Conceptually, a Renderer implements a pipeline with the following stages:</p>\n\n <ol>\n <li>Create or update {@link XEO.renderer.Object}s during scene compilation</li>\n <li>Organise the {@link XEO.renderer.Object} into an <b>object list</b></li>\n <li>Determine the GL state sort order for the object list</li>\n <li>State sort the object list</li>\n <li>Create a <b>draw list</b> containing {@link XEO.renderer.Chunk}s belonging to the {@link XEO.renderer.Object}s in the object list</li>\n <li>Render the draw list to draw the image</li>\n </ol>\n\n <p>An update to the scene causes the pipeline to be re-executed from one of these stages, and SceneJS is designed\n so that the pipeline is always re-executed from the latest stage possible to avoid redoing work.</p>\n\n <p>For example:</p>\n\n <ul>\n <li>when an object is created or updated, we need to (re)do stages 2, 3, 4, 5 and 6</li>\n <li>when an object is made invisible, we need to redo stages 5 and 6</li>\n <li>when an object is assigned to a different scene render layer (works like a render bin), we need to redo\n stages 3, 4, 5, and 6</li>\n<li>when the colour of an object changes, or maybe when the viewpoint changes, we simplt redo stage 6</li>\n </ul>\n\n <h2>Object Creation</h2>\n <p>The object soup (stage 1) is constructed by a depth-first traversal of the scene graph, which we think of as\n \"compiling\" the scene graph into the Renderer. As traversal visits each scene component, the component's state core is\n set on the Renderer (such as {@link #flags}, {@link #layer}, {@link #renderer} etc), which we think of as the\n cores that are active at that instant during compilation. Each of the scene's leaf components is always\n a {@link SceneJS.Geometry}, and when traversal visits one of those it calls {@link #buildObject} to create an\n object in the soup. For each of the currently active cores, the object is given a {@link XEO.renderer.Chunk}\n containing the WebGL calls for rendering it.</p>\n\n <p>The object also gets a shader (implemented by {@link XEO.renderer.Program}), taylored to render those state cores.</p>\n\n <p>Limited re-compilation may also be done on portions of a scene that have been added or sufficiently modified. When\n traversal visits a {@link SceneJS.Geometry} for which an object already exists in the display, {@link #buildObject}\n may update the {@link XEO.renderer.Chunk}s on the object as required for any changes in the core soup since the\n last time the object was built. If differences among the cores require it, then {@link #buildObject} may also replace\n the object's {@link XEO.renderer.Program} in order to render the new core soup configuration.</p>\n\n <p>So in summary, to each {@link XEO.renderer.Object} it builds, {@link #buildObject} creates a list of\n {@link XEO.renderer.Chunk}s to render the set of component state cores that are currently set on the {@link XEO.Renderer}.\n When {@link #buildObject} is re-building an existing object, it may replace one or more {@link XEO.renderer.Chunk}s\n for state cores that have changed from the last time the object was built or re-built.</p>\n\n <h2>Object Destruction</h2>\n <p>Destruction of a scene graph branch simply involves a call to {@link #removeObject} for each {@link SceneJS.Geometry}\n in the branch.</p>\n\n <h2>Draw List</h2>\n <p>The draw list is actually comprised of two lists of state chunks: a \"pick\" list to render a pick buffer\n for colour-indexed GPU picking, along with a \"draw\" list for normal image rendering. The chunks in these lists\n are held in the state-sorted order of their objects in #_objectList, with runs of duplicate states removed.</p>\n\n <p>After a scene update, we set a flag on the display to indicate the stage we will need to redo from. The pipeline is\n then lazy-redone on the next call to #render or #pick.</p>",
            "line": " src/_renderer/renderer.js:7"
        },
        {
            "message": "Missing item type\nIndicates if the canvas is transparent",
            "line": " src/_renderer/renderer.js:96"
        },
        {
            "message": "Missing item type\nFlags the object list as needing to be rebuilt from renderer objects\non the next call to {@link #render} or {@link #pick}. Setting this\nwill cause the rendering pipeline to be executed from stage #2\n(see class comment), causing object list rebuild, state order\ndetermination, state sort, draw list construction and image render.",
            "line": " src/_renderer/renderer.js:286"
        },
        {
            "message": "Missing item type\nFlags the object list as needing state orders to be (re)computed on the\nnext call to {@link #render} or {@link #pick}. Setting this will cause\nthe rendering pipeline to be executed from stage #3 (see class comment),\ncausing state order determination, state sort, draw list construction\nand image render.",
            "line": " src/_renderer/renderer.js:296"
        },
        {
            "message": "Missing item type\nFlags the object list as needing to be state-sorted on the next call\nto {@link #render} or {@link #pick}.Setting this will cause the\nrendering pipeline to be executed from stage #4 (see class comment),\ncausing state sort, draw list construction and image render.",
            "line": " src/_renderer/renderer.js:306"
        },
        {
            "message": "Missing item type\nFlags the draw list as needing to be rebuilt from the object list on\nthe next call to {@link #render} or {@link #pick}.  Setting this will\ncause the rendering pipeline to be executed from stage #5\n(see class comment), causing draw list construction and image render.",
            "line": " src/_renderer/renderer.js:315"
        },
        {
            "message": "Missing item type\nFlags the image as needing to be redrawn from the draw list on the\nnext call to {@link #render} or {@link #pick}. Setting this will\ncause the rendering pipeline to be executed from stage #6\n(see class comment), causing the image render.",
            "line": " src/_renderer/renderer.js:324"
        },
        {
            "message": "Missing item type\nReallocates WebGL resources for objects within this renderer.",
            "line": " src/_renderer/renderer.js:334"
        },
        {
            "message": "Missing item type\nInternally creates (or updates) a {@link XEO.renderer.Object} of the given\nID from whatever component state cores are currently set on this {@link XEO.Renderer}.\nThe object is created if it does not already exist in the display, otherwise\nit is updated with the current states, possibly replacing states already\nreferenced by the object.",
            "line": " src/_renderer/renderer.js:358"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/renderer.js:481"
        },
        {
            "message": "Missing item type\nRemoves an object from this Renderer",
            "line": " src/_renderer/renderer.js:540"
        },
        {
            "message": "Missing item type\nRenders a new frame, if neccessary.",
            "line": " src/_renderer/renderer.js:577"
        },
        {
            "message": "Missing item type\nBuilds the object list from the object map",
            "line": " src/_renderer/renderer.js:616"
        },
        {
            "message": "Missing item type\nGenerates object state sort keys",
            "line": " src/_renderer/renderer.js:628"
        },
        {
            "message": "Missing item type\nState-sorts the object list",
            "line": " src/_renderer/renderer.js:649"
        },
        {
            "message": "Missing item type\nLogs the object list",
            "line": " src/_renderer/renderer.js:659"
        },
        {
            "message": "Missing item type\nBuilds the draw list, which is the list of draw state-chunks to apply to WebGL\nto render the visible objects in the object list for the next frame.\nPreserves the state sort order of the object list among the draw chunks.",
            "line": " src/_renderer/renderer.js:672"
        },
        {
            "message": "Missing item type\nAppends an object to the draw and pick lists.",
            "line": " src/_renderer/renderer.js:848"
        },
        {
            "message": "Missing item type\nLogs the contents of the draw list to the console.",
            "line": " src/_renderer/renderer.js:910"
        },
        {
            "message": "Missing item type\nLogs the contents of the pick list to the console.",
            "line": " src/_renderer/renderer.js:940"
        },
        {
            "message": "Missing item type\nAttempts to pick an object at the given canvas coordinates.",
            "line": " src/_renderer/renderer.js:969"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/renderer.js:1062"
        },
        {
            "message": "Missing item type\nDestroys this Renderer.",
            "line": " src/_renderer/renderer.js:1194"
        },
        {
            "message": "Missing item type\nRenderer states",
            "line": " src/_renderer/states.js:1"
        },
        {
            "message": "Missing item type\nGeneric map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "line": " src/_utils/map.js:7"
        },
        {
            "message": "Missing item type\nItems in this map",
            "line": " src/_utils/map.js:13"
        },
        {
            "message": "Missing item type\nAdds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "line": " src/_utils/map.js:21"
        },
        {
            "message": "Missing item type\nRemoves the item of the given ID from the map and returns it",
            "line": " src/_utils/map.js:53"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look', around the 'up' vector",
            "line": " src/camera/lookat.js:97"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/camera/lookat.js:115"
        },
        {
            "message": "Missing item type\nRotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "line": " src/camera/lookat.js:139"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/camera/lookat.js:159"
        },
        {
            "message": "Missing item type\nPans the camera along X and Y axis.",
            "line": " src/camera/lookat.js:183"
        },
        {
            "message": "Missing item type\nIncrements/decrements zoom factor, ie. distance between eye and look.",
            "line": " src/camera/lookat.js:235"
        },
        {
            "message": "Missing item type\nAttributes for the WebGL context",
            "line": " src/canvas/canvas.js:148"
        },
        {
            "message": "Missing item type\nCreates a canvas in the DOM",
            "line": " src/canvas/canvas.js:294"
        },
        {
            "message": "Missing item type\nCreates an invisible DIV over the canvas",
            "line": " src/canvas/canvas.js:323"
        },
        {
            "message": "Missing item type\nInitialises the WebGL context",
            "line": " src/canvas/canvas.js:353"
        },
        {
            "message": "Missing item type\nReturns point on this CubicBezierCurve at the given position.",
            "line": " src/curves/cubicBezierCurve.js:238"
        },
        {
            "message": "Missing item type\nAdds a {{#crossLink \"Curve\"}}{{/crossLink}} to this Path.\n\nFires a {{#crossLink \"Path/curves:event\"}}{{/crossLink}} event on change.",
            "line": " src/curves/path.js:107"
        },
        {
            "message": "Missing item type\nGets a point on this Path corresponding to the given progress position.",
            "line": " src/curves/path.js:302"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/boxGeometry.js:43"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/cylinderGeometry.js:51"
        },
        {
            "message": "Missing item type\nProtected method, called by sub-classes to queue a call to _update(), to rebuild geometry data arrays.",
            "line": " src/geometry/geometry.js:407"
        },
        {
            "message": "Missing item type\nProtected virtual template method, implemented by sub-classes to generate geometry data arrays.",
            "line": " src/geometry/geometry.js:437"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/latheGeometry.js:48"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/pathGeometry.js:22"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/planeGeometry.js:52"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/sphereGeometry.js:45"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/torusGeometry.js:49"
        },
        {
            "message": "Missing item type\nPrivate xeoEngine glTF loader core.\n\nAdapted from the THREE loader by Tony Parisi (http://www.tonyparisi.com)\nhttps://github.com/KhronosGroup/glTF/blob/master/loaders/threejs/glTFLoaderUtils.js",
            "line": " src/importing/gltf/glTFLoader.js:1"
        },
        {
            "message": "Missing item type\nPrivate xeoEngine glTF loading utilities.\n\nAdapted from the THREE loader by Tony Parisi (http://www.tonyparisi.com)\nhttps://github.com/KhronosGroup/glTF/blob/master/loaders/threejs/glTFLoaderUtils.js",
            "line": " src/importing/gltf/glTFLoaderUtils.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:115"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:121"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:127"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:133"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:139"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:145"
        },
        {
            "message": "Missing item type\nEnable or disable all input handlers",
            "line": " src/input/input.js:417"
        },
        {
            "message": "Missing item type\nLookup GL depth function enums",
            "line": " src/rendering/depthBuf.js:200"
        },
        {
            "message": "Missing item type\nInitializes this component",
            "line": " src/component.js:338"
        },
        {
            "message": "Missing item type\nCreates a clone of this component.\n\nThe clone will have the same properties as the original, except where\noverridden in the given optional configs.\n\nThe clone will share (by reference) the components of the original, unless overridden.\n\nFor example, if this component is a {{#crossLink \"GameObject\"}}{{/crossLink}}, then the clone\nwill be attached to the **same** instances of {{#crossLink \"PhoneMaterial\"}}{{/crossLink}},\n{{#crossLink \"Camera\"}}{{/crossLink}} etc as this component, unless it supplies its own\ninstances for those via the configs.",
            "line": " src/component.js:525"
        },
        {
            "message": "Missing item type\nAdds a child component to this.\nWhen component not given, attaches the scene's default instance for the given name (if any).\nPublishes the new child component on this component, keyed to the given name.",
            "line": " src/component.js:557"
        },
        {
            "message": "Missing item type",
            "line": " src/component.js:656"
        },
        {
            "message": "Missing item type",
            "line": " src/component.js:681"
        },
        {
            "message": "Missing item type\nProtected method, called by sub-classes to queue a call to _update().",
            "line": " src/component.js:688"
        },
        {
            "message": "Missing item type",
            "line": " src/component.js:703"
        },
        {
            "message": "Missing item type\nOptional virtual template method, normally implemented\nby sub-classes to generate some data before _update gets\ncallled",
            "line": " src/component.js:727"
        },
        {
            "message": "Missing item type\nProtected virtual template method, optionally implemented\nby sub-classes to perform a scheduled task.",
            "line": " src/component.js:736"
        },
        {
            "message": "Missing item type\nProtected template method, implemented by sub-classes to compile\ntheir state into their Scene's XEO.renderer.Renderer.",
            "line": " src/component.js:744"
        },
        {
            "message": "Missing item type\nProtected template method, implemented by sub-classes\nto clean up just before the component is destroyed.",
            "line": " src/component.js:854"
        },
        {
            "message": "Missing item type\nCompiles and renders this Scene",
            "line": " src/scene.js:1493"
        },
        {
            "message": "Missing item type\nTests if the given object is an array",
            "line": " src/xeo.js:346"
        },
        {
            "message": "Missing item type\nTests if the given value is a string",
            "line": " src/xeo.js:354"
        },
        {
            "message": "Missing item type\nTests if the given value is a number",
            "line": " src/xeo.js:365"
        },
        {
            "message": "Missing item type",
            "line": " src/xeo.js:375"
        },
        {
            "message": "Missing item type",
            "line": " src/xeo.js:381"
        },
        {
            "message": "Missing item type\nAdd non-null/defined properties of o to o2",
            "line": " src/xeo.js:392"
        },
        {
            "message": "Missing item type\nAdd properties of o to o2 where undefined or null on o2",
            "line": " src/xeo.js:407"
        },
        {
            "message": "Missing item type\nReturns true if the given map is empty.",
            "line": " src/xeo.js:422"
        },
        {
            "message": "Missing item type\nReturns the given ID as a string, in quotes if the ID was a string to begin with.\n\nThis is useful for logging IDs.",
            "line": " src/xeo.js:437"
        }
    ]
}